<?xml version="1.0" encoding="UTF-8"?>
<web-app version="2.4" xmlns="http://java.sun.com/xml/ns/j2ee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee 
	http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd">
	
	<!-- favicon起效果 -->
	<mime-mapping>
	    <extension>ico</extension>
	    <mime-type>image/x-icon</mime-type>
	</mime-mapping>

	<!-- 指定Spring的配置文件 -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath:applicationContext.xml</param-value>
	</context-param>

	<servlet>
		<servlet-name>Captcha4j</servlet-name>
		<servlet-class>com.twovv.captcha4j.JCapServlet</servlet-class>
	</servlet>
	
	<servlet-mapping>
		<servlet-name>Captcha4j</servlet-name>
		<url-pattern>/getCaptImg.do</url-pattern>
	</servlet-mapping>
	
	<!-- 防止发生jsvs.beans.Introspector内存泄露，放置在ContextLoaderListener 前面-->
	<listener>
		<listener-class>
			org.springframework.web.util.IntrospectorCleanupListener</listener-class>
	</listener>
	
	<!-- 实例化Spring容器 -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	
	<listener>
		<listener-class>com.goochou.p2b.admin.listener.ApplicationContextListener</listener-class>
	</listener>

	<listener>
		<listener-class>
			org.springframework.web.context.request.RequestContextListener</listener-class>
	</listener>
	<!-- 解决乱码问题 -->
	<filter>
		<filter-name>CharacterEncodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
		<init-param>
			<param-name>forceEncoding</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>

	<filter-mapping>
		<filter-name>CharacterEncodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	
	<!-- SpringMVC核心分发器 -->
	<servlet>
		<servlet-name>spring_MVC</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>classpath:servlet-context.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>spring_MVC</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>
	
	<!-- 直接通过servlet过滤静态资源文件，不过spring容器，性能更好 -->
	<servlet-mapping>   
	    <servlet-name>default</servlet-name>  
	    <url-pattern>*.jpg</url-pattern>     
	</servlet-mapping>  
	<servlet-mapping>   
	    <servlet-name>default</servlet-name>  
	    <url-pattern>*.png</url-pattern>     
	</servlet-mapping>    
	<servlet-mapping>   
	    <servlet-name>default</servlet-name>  
	    <url-pattern>*.gif</url-pattern>     
	</servlet-mapping>      
	<servlet-mapping>       
	    <servlet-name>default</servlet-name>    
	    <url-pattern>*.js</url-pattern>    
	</servlet-mapping>    
	<servlet-mapping>        
	    <servlet-name>default</servlet-name>       
	    <url-pattern>*.css</url-pattern>      
	</servlet-mapping>   
	<servlet-mapping>        
	    <servlet-name>default</servlet-name>       
	    <url-pattern>*.eot</url-pattern>      
	</servlet-mapping>  
	<servlet-mapping>        
	    <servlet-name>default</servlet-name>       
	    <url-pattern>*.svg</url-pattern>      
	</servlet-mapping>  
	<servlet-mapping>        
	    <servlet-name>default</servlet-name>       
	    <url-pattern>*.ttf</url-pattern>      
	</servlet-mapping>  
	<servlet-mapping>        
	    <servlet-name>default</servlet-name>       
	    <url-pattern>*.woff</url-pattern>      
	</servlet-mapping> 
	<!-- ueditor --> 
	<servlet-mapping>        
	    <servlet-name>default</servlet-name>       
	    <url-pattern>*.html</url-pattern>      
	</servlet-mapping> 
	<servlet-mapping>        
	    <servlet-name>default</servlet-name>       
	    <url-pattern>*.swf</url-pattern>      
	</servlet-mapping> 
	
	<!-- 配置 Shiro 过滤器，先让Shiro过滤系统收到的请求-->
	<!-- 这里的filter-name bixu duiying applicationContext.xml中定义的 <bean id="ShiroFilter/>" -->
	<!-- 使用[/*]匹配所有的请求，保证所有的可控请求都经过Shiro的过滤 -->
	 <filter>
		<filter-name>shiroFilter</filter-name>
		<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
		<init-param>
			<param-name>targetFilterLifecycle</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>shiroFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping> 
	
	<!-- 配置session的超时时间 -->
	<session-config>
		<session-timeout>100</session-timeout>
	</session-config>
	
	<error-page>
		<error-code>404</error-code>
		<location>/404.jsp</location>
	</error-page>
	
	<error-page>
		<error-code>500</error-code>
		<location>/500.jsp</location>
	</error-page>
</web-app>
