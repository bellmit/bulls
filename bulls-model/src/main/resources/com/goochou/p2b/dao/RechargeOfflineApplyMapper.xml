<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.goochou.p2b.dao.RechargeOfflineApplyMapper">
  <resultMap id="BaseResultMap" type="com.goochou.p2b.model.RechargeOfflineApply">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="applyer_id" jdbcType="INTEGER" property="applyerId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="sourcer" jdbcType="VARCHAR" property="sourcer" />
    <result column="money" jdbcType="DECIMAL" property="money" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="bankcard_num" jdbcType="VARCHAR" property="bankcardNum" />
    <result column="serial_number" jdbcType="VARCHAR" property="serialNumber" />
    <result column="voucher_pic_id" jdbcType="INTEGER" property="voucherPicId" />
    <result column="last_update_by" jdbcType="INTEGER" property="lastUpdateBy" />
    <result column="last_update_time" jdbcType="TIMESTAMP" property="lastUpdateTime" />
    <result column="auditor_id" jdbcType="INTEGER" property="auditorId" />
    <result column="audit_time" jdbcType="TIMESTAMP" property="auditTime" />
    <result column="audit_remark" jdbcType="VARCHAR" property="auditRemark" />
    <result column="state" jdbcType="INTEGER" property="state" />
    <result column="recharge_id" jdbcType="INTEGER" property="rechargeId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, applyer_id, create_time, sourcer, money, user_id, bankcard_num, serial_number, 
    voucher_pic_id, last_update_by, last_update_time, auditor_id, audit_time, audit_remark, 
    state, recharge_id
  </sql>
  <select id="selectByExample" parameterType="com.goochou.p2b.model.RechargeOfflineApplyExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from recharge_offline_apply
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart&gt;-1">
      limit ${limitStart} , ${limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from recharge_offline_apply
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from recharge_offline_apply
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.goochou.p2b.model.RechargeOfflineApplyExample">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from recharge_offline_apply
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyProperty="id" parameterType="com.goochou.p2b.model.RechargeOfflineApply" useGeneratedKeys="true">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into recharge_offline_apply (applyer_id, create_time, sourcer, 
      money, user_id, bankcard_num, 
      serial_number, voucher_pic_id, last_update_by, 
      last_update_time, auditor_id, audit_time, 
      audit_remark, state, recharge_id
      )
    values (#{applyerId,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{sourcer,jdbcType=VARCHAR}, 
      #{money,jdbcType=DECIMAL}, #{userId,jdbcType=INTEGER}, #{bankcardNum,jdbcType=VARCHAR}, 
      #{serialNumber,jdbcType=VARCHAR}, #{voucherPicId,jdbcType=INTEGER}, #{lastUpdateBy,jdbcType=INTEGER}, 
      #{lastUpdateTime,jdbcType=TIMESTAMP}, #{auditorId,jdbcType=INTEGER}, #{auditTime,jdbcType=TIMESTAMP}, 
      #{auditRemark,jdbcType=VARCHAR}, #{state,jdbcType=INTEGER}, #{rechargeId,jdbcType=INTEGER}
      )
    <selectKey keyProperty="id" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
  </insert>
  <insert id="insertSelective" parameterType="com.goochou.p2b.model.RechargeOfflineApply">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into recharge_offline_apply
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="applyerId != null">
        applyer_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="sourcer != null">
        sourcer,
      </if>
      <if test="money != null">
        money,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="bankcardNum != null">
        bankcard_num,
      </if>
      <if test="serialNumber != null">
        serial_number,
      </if>
      <if test="voucherPicId != null">
        voucher_pic_id,
      </if>
      <if test="lastUpdateBy != null">
        last_update_by,
      </if>
      <if test="lastUpdateTime != null">
        last_update_time,
      </if>
      <if test="auditorId != null">
        auditor_id,
      </if>
      <if test="auditTime != null">
        audit_time,
      </if>
      <if test="auditRemark != null">
        audit_remark,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="rechargeId != null">
        recharge_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="applyerId != null">
        #{applyerId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sourcer != null">
        #{sourcer,jdbcType=VARCHAR},
      </if>
      <if test="money != null">
        #{money,jdbcType=DECIMAL},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="bankcardNum != null">
        #{bankcardNum,jdbcType=VARCHAR},
      </if>
      <if test="serialNumber != null">
        #{serialNumber,jdbcType=VARCHAR},
      </if>
      <if test="voucherPicId != null">
        #{voucherPicId,jdbcType=INTEGER},
      </if>
      <if test="lastUpdateBy != null">
        #{lastUpdateBy,jdbcType=INTEGER},
      </if>
      <if test="lastUpdateTime != null">
        #{lastUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="auditorId != null">
        #{auditorId,jdbcType=INTEGER},
      </if>
      <if test="auditTime != null">
        #{auditTime,jdbcType=TIMESTAMP},
      </if>
      <if test="auditRemark != null">
        #{auditRemark,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
      <if test="rechargeId != null">
        #{rechargeId,jdbcType=INTEGER},
      </if>
    </trim>
    <selectKey keyProperty="id" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
  </insert>
  <select id="countByExample" parameterType="com.goochou.p2b.model.RechargeOfflineApplyExample" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from recharge_offline_apply
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update recharge_offline_apply
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.applyerId != null">
        applyer_id = #{record.applyerId,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.sourcer != null">
        sourcer = #{record.sourcer,jdbcType=VARCHAR},
      </if>
      <if test="record.money != null">
        money = #{record.money,jdbcType=DECIMAL},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.bankcardNum != null">
        bankcard_num = #{record.bankcardNum,jdbcType=VARCHAR},
      </if>
      <if test="record.serialNumber != null">
        serial_number = #{record.serialNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.voucherPicId != null">
        voucher_pic_id = #{record.voucherPicId,jdbcType=INTEGER},
      </if>
      <if test="record.lastUpdateBy != null">
        last_update_by = #{record.lastUpdateBy,jdbcType=INTEGER},
      </if>
      <if test="record.lastUpdateTime != null">
        last_update_time = #{record.lastUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.auditorId != null">
        auditor_id = #{record.auditorId,jdbcType=INTEGER},
      </if>
      <if test="record.auditTime != null">
        audit_time = #{record.auditTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.auditRemark != null">
        audit_remark = #{record.auditRemark,jdbcType=VARCHAR},
      </if>
      <if test="record.state != null">
        state = #{record.state,jdbcType=INTEGER},
      </if>
      <if test="record.rechargeId != null">
        recharge_id = #{record.rechargeId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update recharge_offline_apply
    set id = #{record.id,jdbcType=INTEGER},
      applyer_id = #{record.applyerId,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      sourcer = #{record.sourcer,jdbcType=VARCHAR},
      money = #{record.money,jdbcType=DECIMAL},
      user_id = #{record.userId,jdbcType=INTEGER},
      bankcard_num = #{record.bankcardNum,jdbcType=VARCHAR},
      serial_number = #{record.serialNumber,jdbcType=VARCHAR},
      voucher_pic_id = #{record.voucherPicId,jdbcType=INTEGER},
      last_update_by = #{record.lastUpdateBy,jdbcType=INTEGER},
      last_update_time = #{record.lastUpdateTime,jdbcType=TIMESTAMP},
      auditor_id = #{record.auditorId,jdbcType=INTEGER},
      audit_time = #{record.auditTime,jdbcType=TIMESTAMP},
      audit_remark = #{record.auditRemark,jdbcType=VARCHAR},
      state = #{record.state,jdbcType=INTEGER},
      recharge_id = #{record.rechargeId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.goochou.p2b.model.RechargeOfflineApply">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update recharge_offline_apply
    <set>
      <if test="applyerId != null">
        applyer_id = #{applyerId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sourcer != null">
        sourcer = #{sourcer,jdbcType=VARCHAR},
      </if>
      <if test="money != null">
        money = #{money,jdbcType=DECIMAL},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="bankcardNum != null">
        bankcard_num = #{bankcardNum,jdbcType=VARCHAR},
      </if>
      <if test="serialNumber != null">
        serial_number = #{serialNumber,jdbcType=VARCHAR},
      </if>
      <if test="voucherPicId != null">
        voucher_pic_id = #{voucherPicId,jdbcType=INTEGER},
      </if>
      <if test="lastUpdateBy != null">
        last_update_by = #{lastUpdateBy,jdbcType=INTEGER},
      </if>
      <if test="lastUpdateTime != null">
        last_update_time = #{lastUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="auditorId != null">
        auditor_id = #{auditorId,jdbcType=INTEGER},
      </if>
      <if test="auditTime != null">
        audit_time = #{auditTime,jdbcType=TIMESTAMP},
      </if>
      <if test="auditRemark != null">
        audit_remark = #{auditRemark,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="rechargeId != null">
        recharge_id = #{rechargeId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.goochou.p2b.model.RechargeOfflineApply">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update recharge_offline_apply
    set applyer_id = #{applyerId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      sourcer = #{sourcer,jdbcType=VARCHAR},
      money = #{money,jdbcType=DECIMAL},
      user_id = #{userId,jdbcType=INTEGER},
      bankcard_num = #{bankcardNum,jdbcType=VARCHAR},
      serial_number = #{serialNumber,jdbcType=VARCHAR},
      voucher_pic_id = #{voucherPicId,jdbcType=INTEGER},
      last_update_by = #{lastUpdateBy,jdbcType=INTEGER},
      last_update_time = #{lastUpdateTime,jdbcType=TIMESTAMP},
      auditor_id = #{auditorId,jdbcType=INTEGER},
      audit_time = #{auditTime,jdbcType=TIMESTAMP},
      audit_remark = #{auditRemark,jdbcType=VARCHAR},
      state = #{state,jdbcType=INTEGER},
      recharge_id = #{rechargeId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <select id="selectByExampleAndCondition" parameterType="com.goochou.p2b.model.RechargeOfflineApplyExample" resultType="Map">
  	select recharge_offline_apply.* 
		,user.phone
		,user.true_name
		,applyer.username as applyer_name
        ,update_by.username as last_update_user_name
		,auditor.username as auditor_name
  	from(
	    select
	    <if test="example.distinct">
	      distinct
	    </if>
	    <include refid="Base_Column_List" />
	    from (
	    	select recharge_offline_apply.* 
	    	from recharge_offline_apply
	    	inner join user on user.id=recharge_offline_apply.user_id
	    	where true
	    	<if test="onlySelfApply != null and onlySelfApply and adminId != null">
	    		and recharge_offline_apply.applyer_id=${adminId} 
		    </if>
	    )recharge_offline_apply
	    <if test="example != null">
	      <include refid="Update_By_Example_Where_Clause" />
	    </if>
	    <if test="example.orderByClause != null">
	      order by ${example.orderByClause}
	    </if>
	    <if test="example.limitStart != null and example.limitStart&gt;-1">
	      limit ${example.limitStart} , ${example.limitEnd}
	    </if>
    )recharge_offline_apply
    inner join user on user.id=recharge_offline_apply.user_id
	inner join user_admin applyer on applyer.id=recharge_offline_apply.applyer_id
    left join user_admin update_by on update_by.id=recharge_offline_apply.last_update_by
	left join user_admin auditor on auditor.id=recharge_offline_apply.auditor_id
	where true
	<if test="keyword != null">
      and (user.phone like #{keyword}
      	or user.true_name like #{keyword}
      	or applyer.username like #{keyword}
      	or recharge_offline_apply.sourcer like #{keyword} )
    </if>
  </select>
  
  <select id="countByExampleAndCondition" parameterType="com.goochou.p2b.model.RechargeOfflineApplyExample" resultType="java.lang.Long">
  	select count(*)
    from(
	    select *
	    from (
	    	select recharge_offline_apply.* 
	    	from recharge_offline_apply
	    	inner join user on user.id=recharge_offline_apply.user_id
	    	where true
	    	<if test="onlySelfApply != null and onlySelfApply and adminId != null">
	    		and recharge_offline_apply.applyer_id=${adminId} 
		    </if>
	    )recharge_offline_apply
	    <if test="example != null">
	      <include refid="Update_By_Example_Where_Clause" />
	    </if>
    )recharge_offline_apply
    inner join user on user.id=recharge_offline_apply.user_id
	inner join user_admin applyer on applyer.id=recharge_offline_apply.applyer_id
    left join user_admin update_by on update_by.id=recharge_offline_apply.last_update_by
	left join user_admin auditor on auditor.id=recharge_offline_apply.auditor_id
	where true
	<if test="keyword != null">
      and (user.phone like #{keyword}
      	or user.true_name like #{keyword}
      	or applyer.username like #{keyword}
      	or recharge_offline_apply.sourcer like #{keyword} )
    </if>
  </select>
  
  
  <select id="queryById" parameterType="int" resultType="map">
    SELECT 
      t1.*,
      t2.`true_name` applyer_name,
      t3.`true_name` user_name,
      t4.`true_name` auditor_name,
      t5.`true_name` last_update_user_name,
      t6.`path`
    FROM
      recharge_offline_apply t1 
      INNER JOIN user_admin t2 
        ON t2.id = t1.applyer_id 
      INNER JOIN `user` t3 
        ON t3.id = t1.user_id 
      LEFT JOIN user_admin t4
        ON t4.id = t1.auditor_id 
      LEFT JOIN user_admin t5
        ON t5.id = t1.last_update_by 
      LEFT JOIN upload t6
        ON t6.id = t1.voucher_pic_id 
    WHERE t1.id=#{id}
  </select>
  
</mapper>
