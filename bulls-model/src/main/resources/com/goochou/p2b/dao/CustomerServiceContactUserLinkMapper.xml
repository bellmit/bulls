<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.goochou.p2b.dao.CustomerServiceContactUserLinkMapper" >
  <resultMap id="BaseResultMap" type="com.goochou.p2b.model.CustomerServiceContactUserLink" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Nov 17 13:33:40 CST 2015.
    -->
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="customer_id" property="customerId" jdbcType="INTEGER" />
    <result column="service_id" property="serviceId" jdbcType="INTEGER" />
    <result column="service_task_date" property="serviceTaskDate" jdbcType="TIMESTAMP" />
    <result column="contact_count" property="contactCount" jdbcType="INTEGER" />
    <result column="actual_contact_time" property="actualContactTime" jdbcType="TIMESTAMP" />
    <result column="connection_note" property="connectionNote" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Nov 17 13:33:40 CST 2015.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Nov 17 13:33:40 CST 2015.
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Nov 17 13:33:40 CST 2015.
    -->
    id, customer_id, service_id, service_task_date, contact_count, actual_contact_time, 
    connection_note
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.goochou.p2b.model.CustomerServiceContactUserLinkExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Nov 17 13:33:40 CST 2015.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from customer_service_contact_user_link
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart>-1" >
      limit ${limitStart} , ${limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Nov 17 13:33:40 CST 2015.
    -->
    select 
    <include refid="Base_Column_List" />
    from customer_service_contact_user_link
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Nov 17 13:33:40 CST 2015.
    -->
    delete from customer_service_contact_user_link
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.goochou.p2b.model.CustomerServiceContactUserLinkExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Nov 17 13:33:40 CST 2015.
    -->
    delete from customer_service_contact_user_link
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.goochou.p2b.model.CustomerServiceContactUserLink" useGeneratedKeys="true" keyProperty="id" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Nov 17 13:33:40 CST 2015.
    -->
    insert into customer_service_contact_user_link (id, customer_id, service_id, 
      service_task_date, contact_count, actual_contact_time, 
      connection_note)
    values (#{id,jdbcType=INTEGER}, #{customerId,jdbcType=INTEGER}, #{serviceId,jdbcType=INTEGER}, 
      #{serviceTaskDate,jdbcType=TIMESTAMP}, #{contactCount,jdbcType=INTEGER}, #{actualContactTime,jdbcType=TIMESTAMP}, 
      #{connectionNote,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.goochou.p2b.model.CustomerServiceContactUserLink" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Nov 17 13:33:40 CST 2015.
    -->
    insert into customer_service_contact_user_link
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="customerId != null" >
        customer_id,
      </if>
      <if test="serviceId != null" >
        service_id,
      </if>
      <if test="serviceTaskDate != null" >
        service_task_date,
      </if>
      <if test="contactCount != null" >
        contact_count,
      </if>
      <if test="actualContactTime != null" >
        actual_contact_time,
      </if>
      <if test="connectionNote != null" >
        connection_note,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="customerId != null" >
        #{customerId,jdbcType=INTEGER},
      </if>
      <if test="serviceId != null" >
        #{serviceId,jdbcType=INTEGER},
      </if>
      <if test="serviceTaskDate != null" >
        #{serviceTaskDate,jdbcType=TIMESTAMP},
      </if>
      <if test="contactCount != null" >
        #{contactCount,jdbcType=INTEGER},
      </if>
      <if test="actualContactTime != null" >
        #{actualContactTime,jdbcType=TIMESTAMP},
      </if>
      <if test="connectionNote != null" >
        #{connectionNote,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.goochou.p2b.model.CustomerServiceContactUserLinkExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Nov 17 13:33:40 CST 2015.
    -->
    select count(*) from customer_service_contact_user_link
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Nov 17 13:33:40 CST 2015.
    -->
    update customer_service_contact_user_link
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.customerId != null" >
        customer_id = #{record.customerId,jdbcType=INTEGER},
      </if>
      <if test="record.serviceId != null" >
        service_id = #{record.serviceId,jdbcType=INTEGER},
      </if>
      <if test="record.serviceTaskDate != null" >
        service_task_date = #{record.serviceTaskDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.contactCount != null" >
        contact_count = #{record.contactCount,jdbcType=INTEGER},
      </if>
      <if test="record.actualContactTime != null" >
        actual_contact_time = #{record.actualContactTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.connectionNote != null" >
        connection_note = #{record.connectionNote,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Nov 17 13:33:40 CST 2015.
    -->
    update customer_service_contact_user_link
    set id = #{record.id,jdbcType=INTEGER},
      customer_id = #{record.customerId,jdbcType=INTEGER},
      service_id = #{record.serviceId,jdbcType=INTEGER},
      service_task_date = #{record.serviceTaskDate,jdbcType=TIMESTAMP},
      contact_count = #{record.contactCount,jdbcType=INTEGER},
      actual_contact_time = #{record.actualContactTime,jdbcType=TIMESTAMP},
      connection_note = #{record.connectionNote,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.goochou.p2b.model.CustomerServiceContactUserLink" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Nov 17 13:33:40 CST 2015.
    -->
    update customer_service_contact_user_link
    <set >
      <if test="customerId != null" >
        customer_id = #{customerId,jdbcType=INTEGER},
      </if>
      <if test="serviceId != null" >
        service_id = #{serviceId,jdbcType=INTEGER},
      </if>
      <if test="serviceTaskDate != null" >
        service_task_date = #{serviceTaskDate,jdbcType=TIMESTAMP},
      </if>
      <if test="contactCount != null" >
        contact_count = #{contactCount,jdbcType=INTEGER},
      </if>
      <if test="actualContactTime != null" >
        actual_contact_time = #{actualContactTime,jdbcType=TIMESTAMP},
      </if>
      <if test="connectionNote != null" >
        connection_note = #{connectionNote,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.goochou.p2b.model.CustomerServiceContactUserLink" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Nov 17 13:33:40 CST 2015.
    -->
    update customer_service_contact_user_link
    set customer_id = #{customerId,jdbcType=INTEGER},
      service_id = #{serviceId,jdbcType=INTEGER},
      service_task_date = #{serviceTaskDate,jdbcType=TIMESTAMP},
      contact_count = #{contactCount,jdbcType=INTEGER},
      actual_contact_time = #{actualContactTime,jdbcType=TIMESTAMP},
      connection_note = #{connectionNote,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <insert id="insertOldUserTaskToCustomerService" parameterType="map">
	insert into customer_service_contact_user_link (customer_id,service_id,service_task_date,contact_count) 			
		select uu.id,ad.uid,curdate(),0 from 
		(
			
			select u.id,u.username,u.true_name from user u 
				where u.status=0 and u.id not in (select user_id from user_exclude) 
			limit #{start},#{limit}
		)as uu,
		(
			select csm.*, ua.id as uid, ua.username, ua.true_name from customer_service_management csm 
				left join user_admin ua on ua.id = csm.cs_uid where csm.cs_uid=#{id}
		)as ad
		
  </insert>
  
  <update id="updateOldUserTaskToCustomerService" parameterType="map">
	update customer_service_contact_user_link cl 
		inner join 
		(
			select uu.id,ad.uid,curdate(),0 as time from 
				(
					select u.id,u.username,u.true_name from user u where u.status=0 and u.id not in (select user_id from user_exclude) limit #{start},#{limit}
				)as uu,
				(
					select csm.*, ua.id as uid, ua.username, ua.true_name from customer_service_management csm 
						left join user_admin ua on ua.id = csm.cs_uid where csm.cs_uid=#{id}
				)as ad
		)as t on t.id=cl.customer_id
	set 
		cl.customer_id=t.id,cl.service_id=t.uid,cl.service_task_date=t.time
  </update>
  
  <insert id="addNewUserTaskToCustomerService" parameterType="map">
  	insert into customer_service_contact_user_link (customer_id,service_id,service_task_date,contact_count) 			
		select uu.id,ad.uid,curdate(),0 from 
		(
			select u.id,u.username,u.true_name from user u where u.status=0 and u.id not in (select user_id from user_exclude) limit #{start},#{limit}
		)as uu,
		(
			select csm.*, ua.id as uid, ua.username, ua.true_name from customer_service_management csm 
				left join user_admin ua on ua.id = csm.cs_uid where csm.cs_uid=#{id}
		)as ad
  </insert>
  
  <select id="queryByAdminUserId" parameterType="map" resultType="map">
  	select csl.*, u.phone, u.username, u.true_name trueName, u.register_time,ua.true_name serviceName from  
		customer_service_contact_user_link csl
		left join user u on u.id=csl.customer_id
		left join user_admin ua on ua.id=csl.service_id
		<where>
			u.status=0 
			<if test="type != null and type != 4">
				and contact_count=#{type}
			</if>
			and date_format(csl.service_task_date,'%Y-%m-%d')=date_format(
			<if test="date == null">
				curdate()
			</if>
			<if test="date != null">
				#{date} 
			</if>
			
			,'%Y-%m-%d')
			
			<if test=" flag != null">
				and csl.service_id=#{id}
			</if>
			<if test=" account != null">
				and (u.username like '%${account}%' or u.true_name like '%${account}%' or u.phone like '%${account}%')
			</if>
		</where>
		<if test="start != null and start>-1" >
	      order by u.register_time desc  limit ${start} , ${limit}
	    </if>
  </select>
  
  <select id="queryByLinkId" parameterType="int" resultType="map">
  	select csl.*,u.phone,u.username,u.true_name as trueName, u.register_time from 
  		customer_service_contact_user_link csl
  		left join user u on u.id=csl.customer_id where csl.id=#{id}
  </select>
  
  <select id="queryCountByAdminUserId" parameterType="map" resultType="int">
	  select count(csl.id) from  
		customer_service_contact_user_link csl
		left join user u on u.id=csl.customer_id
		<where> 
			u.status=0
			<if test="type != null and type != 4">
				and contact_count=#{type}
			</if>
			and date_format(csl.service_task_date,'%Y-%m-%d')=date_format(
			<if test="date == null">
				curdate()
			</if>
			<if test="date != null">
				#{date}
			</if>
			
			,'%Y-%m-%d')
			
			<if test=" flag != null">
				and csl.service_id=#{id}
			</if>
			<if test=" account != null">
				and (u.username like '%${account}%' or u.true_name like '%${account}%' or u.phone like '%${account}%')
			</if>
		</where>
  </select>
  
   <select id="customerDetail" resultType="map">
		SELECT DISTINCT
			c.tradetime,c.username,c.phone,c.contacttime,c.servicename,c.uid,
			sum(amountsum) daysum,
			max(amountsum) daymax,
			min(amountsum) daymin
		FROM
			(
				SELECT
					csl.customer_id uid,csl.service_id serviceid,csl.actual_contact_time contacttime,
					tr.time tradetime,u.true_name username,u.phone,
					a.true_name servicename,sum(tr.amount) amountsum
				FROM
					customer_service_contact_user_link csl
				LEFT JOIN trade_record tr ON tr.user_id = csl.customer_id
				LEFT JOIN user u ON u.id = csl.customer_id
				LEFT JOIN user_admin a ON csl.service_id = a.id
				WHERE
					date_format(tr.time,'%Y-%m-%d') =date_format(#{date},'%Y-%m-%d')
					and u.status=0
					and tr.type=0
					<if test=" flag != null">
						and csl.service_id=#{id}
					</if>
					<if test=" account != null">
						and (u.username like '%${account}%' or u.true_name like '%${account}%' or u.phone like '%${account}%')
					</if>
				GROUP BY
					csl.id,date_format(tr.time, '%Y-%m-%d')
				ORDER BY
					date_format(tr.time, '%Y-%m-%d'),csl.service_id
			) c
			GROUP BY
				c.tradetime,
				c.uid 
			<if test="start != null and start>-1" >
		      limit ${start} , ${limit}
		    </if>
   </select>
   
   <select id="customerDetailCount" parameterType="map" resultType="java.lang.Integer">
		select
			count(*) pages
			from
			(
				select distinct
					c.tradetime,c.username,c.phone,c.contacttime,c.servicename,
					sum(amountsum) daysum,max(amountsum) daymax,min(amountsum) daymin			
				from
					(
						select
							csl.customer_id uid,csl.service_id serviceid,csl.actual_contact_time contacttime,
							date_format(tr.time, '%Y-%m-%d') tradetime,
							u.true_name username,u.phone,
							a.true_name servicename,
							sum(tr.amount) amountsum
						from
							customer_service_contact_user_link csl
						left join trade_record tr on tr.user_id = csl.customer_id
						left join user u on u.id = csl.customer_id
						left join user_admin a on csl.service_id = a.id
						where
							date_format(tr.time,'%Y-%m-%d') =date_format(#{date},'%Y-%m-%d')
							and u.status=0
							and tr.type=0
						<if test=" flag != null">
							and csl.service_id=#{id}
						</if>
						<if test="account != null">
					  		and (u.username like '%${account}%' or u.true_name like '%${account}%' or u.phone like '%${account}%')
					  	</if>
						group by
							csl.id,
							date_format(tr.time, '%Y-%m-%d')
						order by
							date_format(tr.time, '%Y-%m-%d'),
							csl.service_id
					) c
				group by
					c.tradetime,
					c.uid
			) b;
   </select>  
   
   
   <select id="customerDetailMonthly" parameterType="map" resultType="map">
	   	select sum(tmp.investment1) sumInvestment , max(tmp.peak1) peak, min(tmp.lowPeak1) lowPeak
		from 
		(
			select
				csl.id, csl.contact_count contactCnt, csl.actual_contact_time contactDate,
					sum(ud.amount) investment1,max(ud.amount) peak1, min(ud.amount) lowPeak1, ud.time,
					ua.username customername,ua.true_name customerTrueName 
				from customer_service_contact_user_link csl
				left join trade_record ud on ud.user_id=csl.customer_id
				left join user_admin ua on ua.id=csl.service_id 
				left join user u on u.id=csl.customer_id
			  	where 
					ud.type=0
					and u.status=0
			  	<if test=" date != null">
					and date_format(ud.time,'%Y-%m') =date_format(#{date},'%Y-%m')
				</if>
			  	<if test=" flag != null">
					and csl.service_id=#{id}
				</if>
				<if test="account != null">
			  		and (u.username like '%${account}%' or u.true_name like '%${account}%' or u.phone like '%${account}%')
			  	</if>
			group by date_format(ud.time,'%Y-%m-%d')
		) as tmp
   </select>
   
   <select id="customerMonthList" resultType="map">
	select c.tradeTime,SUM(amountSum) daySum,MAX(amountSum) dayMax,MIN(amountSum) dayMin from (
	select date_format(tr.time,'%Y-%m-%d') tradeTime,
		sum(tr.amount) amountSum
		from customer_service_contact_user_link csl
		left join trade_record tr on tr.user_id=csl.customer_id 
	  left join user u on  u.id=csl.customer_id
	  Left join user_admin a on csl.service_id=a.id
		where 
			tr.time between date_format(#{date},'%Y-%m-01')  and last_day(#{date})
			and u.status=0
			and tr.type=0
		  	<if test=" flag != null">
				and csl.service_id=#{id}
			</if>
		group by csl.id, date_format(tr.time,'%Y-%m-%d') ORDER BY  date_format(tr.time,'%Y-%m-%d'),csl.service_id
	)c GROUP BY c.tradeTime
   </select>
  
  <select id="customerDetailDaily" parameterType="map" resultType="map">
	   	select sum(tmp.investment1) sumInvestment , max(tmp.peak1) peak, min(tmp.lowPeak1) lowPeak
		from 
		(
			select
				csl.id, csl.contact_count contactCnt, csl.actual_contact_time contactDate,
					sum(ud.amount) investment1,max(ud.amount) peak1, min(ud.amount) lowPeak1, ud.time,
					ua.username customername,ua.true_name customerTrueName 
				from customer_service_contact_user_link csl
				left join trade_record ud on ud.user_id=csl.customer_id
				left join user_admin ua on ua.id=csl.service_id 
				left join user u on u.id=csl.customer_id
			  	where 
					ud.type=0
					and u.status=0
			  	<if test=" date != null">
					and date_format(ud.time,'%Y-%m-%d') =date_format(#{date},'%Y-%m-%d')
				</if>
			  	<if test=" flag != null">
					and csl.service_id=#{id}
				</if>
				<if test="account != null">
			  		and (u.username like '%${account}%' or u.true_name like '%${account}%' or u.phone like '%${account}%')
			  	</if>
			group by date_format(ud.time,'%Y-%m-%d')
		) as tmp
   </select>
   
   <select id="customerHistory" parameterType="map" resultType="map">
	   SELECT
		    h.id,
			ua.true_name serviceName,
			h.service_task_date taskDate,
			u.true_name trueName, u.username,
			u.phone,
			u.register_time registerTime,
			h.actual_contact_time contactTime,
		    h.customer_id,
		    h.connection_note connectionNote,
		    h.contact_count 
		FROM
			customer_service_user_task_history h
		LEFT JOIN user u ON u.id = h.customer_id
		LEFT JOIN user_admin ua ON h.service_id = ua.id
		<where>
			<if test=" type != null and type != 4">
				and h.contact_count=#{type}
		    </if>
			<if test=" flag != null">
				and h.service_id=#{id}
		    </if>
			<if test=" date != null">
				and h.service_task_date=date_format(#{date},'%y-%m-%d 00:00:00')
			</if>
		</where>
		ORDER BY 
			h.service_task_date DESC
		<if test="start != null and start>-1" >
		      limit ${start} , ${limit}
		</if>
   </select>
   
   <select id="customerHistoryCount" parameterType="map" resultType="java.lang.Integer">
	   SELECT
		  count(*) pages
		FROM
			customer_service_user_task_history h
		LEFT JOIN user u ON u.id = h.customer_id
		LEFT JOIN user_admin ua ON h.service_id = ua.id
		<where>
			<if test=" type != null and type != 4">
				and h.contact_count=#{type}
		    </if>
			<if test=" date != null">
				and h.service_task_date=date_format(#{date},'%y-%m-%d 00:00:00') 
			</if>
			<if test=" flag != null">
				and h.service_id=#{id}
			</if>
		</where>
   </select>

	<select id="querySerivceLevelById" parameterType="int" resultType="map">
		select 
			ua.id, ua.true_name,
			cast(
				case 
					when r.role='admin' then 1
					when r.role='service-master' then 2
					when r.role='customService' then 3
					when r.role='normalCustomer' then 4
					else  0 
				end 
			as signed) as level
		from
			user_admin ua 
			left join admin_role ar on ar.admin_id=ua.id
			left join role r on r.id=ar.role_id
		where ua.id=#{id}
	</select>
	
   
   <select id="customerMonthListExport" parameterType="map" resultType="map">
		SELECT DISTINCT
			c.tradetime,c.username,c.phone,c.contacttime,c.servicename,c.uid,
			sum(amountsum) daysum
		FROM
			(
				SELECT
					csl.customer_id uid,csl.service_id serviceid,csl.actual_contact_time contacttime,
					tr.time tradetime,u.true_name username,u.phone,
					a.true_name servicename,sum(tr.amount) amountsum
				FROM
					customer_service_contact_user_link csl
				LEFT JOIN trade_record tr ON tr.user_id = csl.customer_id
				LEFT JOIN user u ON u.id = csl.customer_id
				LEFT JOIN user_admin a ON csl.service_id = a.id
				WHERE
					u.status=0
					and tr.type=0
                    and tr.time between date_format(#{date},'%Y-%m-01')  and date_format(#{date},'%Y-%m-31')
                    <if test=" flag != null">
					and h.service_id=#{id}
					</if>
				GROUP BY
					csl.id,date_format(tr.time, '%Y-%m-%d')
				ORDER BY
					date_format(tr.time, '%Y-%m-%d'),csl.service_id
			) c
			GROUP BY
				c.tradetime,
				c.uid 
   </select>
   
   <select id="totalCustomerUserTask" parameterType="map" resultType="map">
	SELECT
		count(case when c.contact_count=0 then 1 end) noContact,
		count(case when c.contact_count=1 then 1 end) contact,
		count(case when c.contact_count=2 then 1 end) refuse,
		count(case when c.contact_count=3 then 1 end) noAnswer,
		count(*) total 	
	FROM
		(
			
			SELECT
				csl.*, u.phone,
				u.username,
				u.true_name trueName,
				u.register_time,
				ua.true_name serviceName
			FROM
				customer_service_contact_user_link csl
			LEFT JOIN user u ON u.id = csl.customer_id
			LEFT JOIN user_admin ua ON ua.id = csl.service_id
			WHERE
				u. STATUS = 0
				<if test="date != null">
					AND date_format(csl.service_task_date,'%Y-%m-%d') = date_format(#{date}, '%Y-%m-%d')
				</if>
				<if test=" flag != null">
				and csl.service_id=#{id}
				</if>
		) c	
   </select>
   
   <select id="totalCustomerHistory" parameterType="map" resultType="map">
	SELECT
		count(case when c.contact_count=0 then 1 end) noContact,
		count(case when c.contact_count=1 then 1 end) contact,
		count(case when c.contact_count=2 then 1 end) refuse,
		count(case when c.contact_count=3 then 1 end) noAnswer,
		count(*) total 	
	FROM
		(
			
			SELECT
				csl.*, u.phone,
				u.username,
				u.true_name trueName,
				u.register_time,
				ua.true_name serviceName
			FROM
				customer_service_user_task_history csl
			LEFT JOIN user u ON u.id = csl.customer_id
			LEFT JOIN user_admin ua ON ua.id = csl.service_id
			WHERE
				u. STATUS = 0
			<if test="date != null">
				AND date_format(csl.service_task_date,'%Y-%m-%d') = date_format(#{date}, '%Y-%m-%d')
			</if>
			<if test=" flag != null">
			and csl.service_id=#{id}
			</if>
		) c	
   </select>
	
	<select id="queryUserTaskById"   parameterType="int" resultType="map">
		select * from customer_service_contact_user_link where service_id=#{id}
	</select>
	
	<select id="queryAvailableCount"  parameterType="map" resultType="map">
			select id ,count(*) count from user where status=0 and 
				id not in 	(select user_id from user_exclude) 	and register_time between date_format(#{date},'%Y-%m-%d') and curdate()
	</select>
   
   <select id="addNewUserTaskByDateAndUid" parameterType="map" >
		insert into customer_service_contact_user_link (customer_id,service_id,service_task_date,contact_count) 			
			select uu.id,ad.uid,curdate(),0 from 
			(
				select u.id,u.username,u.true_name,u.register_time from user u where u.id > #{customerId} and u.status=0 
						and u.id not in (select user_id from user_exclude) 
						and u.register_time between date_sub(date_format(#{date},'%Y-%m-%d'), interval 1 day ) and curdate() limit #{start},#{limit}
			)as uu,
			(
				select csm.*, ua.id as uid, ua.username, ua.true_name from customer_service_management csm 
					left join user_admin ua on ua.id = csm.cs_uid where csm.cs_uid=#{serviceId}
			)as ad
   </select>

	<select id="selectTodayUserTask" resultType="int">
		select count(*) from customer_service_contact_user_link where service_task_date=curdate()
	</select>
	
	<select id="queryCustomerService" parameterType="map" resultType="map">
		select 
			rc.service_id,
			rl.role,rl.description,
			rc.serviceName,
			count(*) userCount,
			count(case when rc.true_name is not null then rc.customer_id end) bindCount,
			count(if(ass.huo_investment_amount>0, ass.huo_investment_amount, null)) keepCount,
            sum(rc.keep) keep,
            sum(rc.ni) normalInvestment,
            sum(rc.ci) ctorInvestment,
            sum(rc.i) investment,
            sum(rc.r) recharge,
            sum(rc.w) withdraw
		from 
		(
			select 
				l.customer_id,
				l.service_id,
				csm.role_id,
				ua.true_name serviceName,
				u.true_name, u.username, u.phone,u.register_time,
                sum(if(t.type=1 and date_format(t.time,'%Y-%m')=date_format(#{date},'%Y-%m'),t.amount,0))
                  - sum(if(t.type=2 and date_format(t.time,'%Y-%m')=date_format(#{date},'%Y-%m'),t.amount,0)) keep,
                sum(if(t.type=0 and date_format(t.time,'%Y-%m')=date_format(#{date},'%Y-%m'),t.amount,0)) ni,
                sum(if(t.type=10 and date_format(t.time,'%Y-%m')=date_format(#{date},'%Y-%m'),t.amount,0)) ci,
                sum(if((t.type=0 or t.type=10) and date_format(t.time,'%Y-%m')=date_format(#{date},'%Y-%m'),t.amount,0)) i,
                sum(if(t.type=1 and date_format(t.time,'%Y-%m')=date_format(#{date},'%Y-%m'),t.amount,0)) r,
                sum(if(t.type=2 and date_format(t.time,'%Y-%m')=date_format(#{date},'%Y-%m'),t.amount,0)) w
			from 
				(
					select id, customer_id, service_id, service_task_date from customer_service_contact_user_link group by customer_id
				) l
				left join customer_service_management csm on csm.cs_uid=l.service_id
				left join user u  on l.customer_id=u.id
				left join user_admin ua on ua.id=l.service_id
				left join trade_record t on t.user_id=l.customer_id
				where 1=1
					<if test="type != null and type == 1">
						and date_format(u.register_time,'%Y-%m')=date_format(#{date},'%Y-%m')
					</if>
					<if test="type != null and type == 2">
						and date_format(u.register_time,'%Y-%m')!=date_format(#{date},'%Y-%m')
					</if>
					and date_format(service_task_date,'%Y-%m') = date_format(#{date},'%Y-%m')
					<if test="serviceName != null">
						and ua.true_name like '%${serviceName}%'
					</if>
				group by l.customer_id
		) as rc 
			left join role rl on rl.id=rc.role_id
			left join assets ass on ass.user_id=rc.customer_id
		group by rc.service_id
	</select> 
	
	<select id="queryAllCustomerService" parameterType="map" resultType="map">
		select 
			count(*) userCount,
			count(case when rc.true_name is not null then rc.customer_id end) bindCount,
			count(if(ass.huo_investment_amount>0, ass.huo_investment_amount, null)) keepCount,
			sum(rc.keep) keep,
			sum(rc.i) investment,
			sum(rc.r) recharge,
			sum(rc.w) withdraw
		from 
		(
			select 
				l.customer_id,
				l.service_id,
				csm.role_id,
				ua.true_name serviceName,
				u.true_name, u.username, u.phone,u.register_time,
				sum(if(t.type=1 and date_format(t.time,'%Y-%m')=date_format(#{date},'%Y-%m'),t.amount,0)) - 
				sum(if(t.type=2 and date_format(t.time,'%Y-%m')=date_format(#{date},'%Y-%m'),t.amount,0)) keep,
				sum(if((t.type=0 or t.type=10) and date_format(t.time,'%Y-%m')=date_format(#{date},'%Y-%m'),t.amount,0)) i,
				sum(if(t.type=1 and date_format(t.time,'%Y-%m')=date_format(#{date},'%Y-%m'),t.amount,0)) r,
				sum(if(t.type=2 and date_format(t.time,'%Y-%m')=date_format(#{date},'%Y-%m'),t.amount,0)) w
			from 
			(
				select id, customer_id, service_id, service_task_date from customer_service_contact_user_link group by customer_id) l
				left join customer_service_management csm on csm.cs_uid=l.service_id
				left join user u  on l.customer_id=u.id
				left join user_admin ua on ua.id=l.service_id
				left join trade_record t on t.user_id=l.customer_id
				where 1=1
					<if test="type != null and type == 1">
						and date_format(u.register_time,'%Y-%m')=date_format(#{date},'%Y-%m')
					</if>
					<if test="type != null and type == 2">
						and date_format(u.register_time,'%Y-%m')!=date_format(#{date},'%Y-%m')
					</if>
					and date_format(service_task_date,'%Y-%m') = date_format(#{date},'%Y-%m')
					<if test="serviceName != null">
						and ua.true_name like '%${serviceName}%'
					</if>
				group by l.customer_id
		) as rc 
			left join role rl on rl.id=rc.role_id
			left join assets ass on ass.user_id=rc.customer_id	
	</select>  
	
	<select id="queryCustomerReportDetail" parameterType="map" resultType="map">
		select 
			rc.customer_id userId, rc.phone, rc.username, rc.true_name trueName, rc.register_time registerTime, rc.keep, rc.i investment, rc.r recharge, rc.w withdraw, ass.huo_investment_amount, rc.serviceName
		from 
		(
			select 
				l.customer_id,
				l.service_id,
				csm.role_id,
				ua.true_name serviceName,
				u.true_name, u.username, u.phone,u.register_time,
				sum(if(t.type=1 and date_format(t.time,'%Y-%m')=date_format(#{date},'%Y-%m'),t.amount,0)) - 
				sum(if(t.type=2 and date_format(t.time,'%Y-%m')=date_format(#{date},'%Y-%m'),t.amount,0)) keep,
				sum(if(t.type=0 and date_format(t.time,'%Y-%m')=date_format(#{date},'%Y-%m'),t.amount,0)) i,
				sum(if(t.type=1 and date_format(t.time,'%Y-%m')=date_format(#{date},'%Y-%m'),t.amount,0)) r,
				sum(if(t.type=2 and date_format(t.time,'%Y-%m')=date_format(#{date},'%Y-%m'),t.amount,0)) w
			from 
				(
					select id, customer_id, service_id, service_task_date from customer_service_contact_user_link 
						where date_format(service_task_date,'%Y-%m') = date_format(#{date},'%Y-%m')
					group by customer_id
				) l
				left join customer_service_management csm on csm.cs_uid=l.service_id
				left join user u  on l.customer_id=u.id
				left join user_admin ua on ua.id=l.service_id
				left join trade_record t on t.user_id=l.customer_id
				where date_format(u.register_time,'%Y-%m')=date_format(#{date},'%Y-%m')
					<if test="serviceId != null">
						and ua.id = #{serviceId}
					</if>
				<if test="account != null">
					and (u.id like '%${account}%' or u.phone like '%${account}%' or u.true_name like '%${account}%' or u.username like '%${account}%' )
				</if>
				group by l.customer_id
		) as rc 
			left join role rl on rl.id=rc.role_id
			left join assets ass on ass.user_id=rc.customer_id
			<if test="start != null and start>-1 " >
		      limit ${start} , ${limit}
		    </if>
	</select>
	
	<select id="queryCountCustomerReportDetail" parameterType="map" resultType="int">
		select 
			count(*)
		from 
		(
			select 
				l.customer_id,
				l.service_id,
				csm.role_id,
				ua.true_name serviceName,
				u.true_name, u.username, u.phone,u.register_time,
				sum(if(t.type=1 and date_format(t.time,'%Y-%m')=date_format(#{date},'%Y-%m'),t.amount,0)) - 
				sum(if(t.type=2 and date_format(t.time,'%Y-%m')=date_format(#{date},'%Y-%m'),t.amount,0)) keep,
				sum(if(t.type=0 and date_format(t.time,'%Y-%m')=date_format(#{date},'%Y-%m'),t.amount,0)) i,
				sum(if(t.type=1 and date_format(t.time,'%Y-%m')=date_format(#{date},'%Y-%m'),t.amount,0)) r,
				sum(if(t.type=2 and date_format(t.time,'%Y-%m')=date_format(#{date},'%Y-%m'),t.amount,0)) w
			from 
				(
					select id, customer_id, service_id, service_task_date from customer_service_contact_user_link 
						where date_format(service_task_date,'%Y-%m') = date_format(#{date},'%Y-%m')
					group by customer_id
				) l
				left join customer_service_management csm on csm.cs_uid=l.service_id
				left join user u  on l.customer_id=u.id
				left join user_admin ua on ua.id=l.service_id
				left join trade_record t on t.user_id=l.customer_id
				where date_format(u.register_time,'%Y-%m')=date_format(#{date},'%Y-%m')
					<if test="serviceId != null">
						and ua.id = #{serviceId}
					</if>
				<if test="account != null">
					and (u.id like '%${account}%' or u.phone like '%${account}%' or u.true_name like '%${account}%' or u.username like '%${account}%' )
				</if>
				group by l.customer_id
		) as rc 
			left join role rl on rl.id=rc.role_id
			left join assets ass on ass.user_id=rc.customer_id
	</select>
	
	<select id="queryOldUserTaskCount"  parameterType="map" resultType="java.lang.Integer">
		select count(id) count from 
			(
				select id from user 
					where status=0 
					and id not in (select user_id from user_exclude)
					<if test="start != null and start>-1 " >
						 limit ${start},${limit} 
				    </if>
			) as tt
	</select>

</mapper>
