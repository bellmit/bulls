<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.goochou.p2b.dao.UserAddressMapper">
  <resultMap id="BaseResultMap" type="com.goochou.p2b.model.UserAddress">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="postcode" jdbcType="INTEGER" property="postcode" />
    <result column="detail" jdbcType="VARCHAR" property="detail" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="update_date" jdbcType="TIMESTAMP" property="updateDate" />
    <result column="remarks" jdbcType="VARCHAR" property="remarks" />
    <result column="p_id" jdbcType="VARCHAR" property="pId" />
    <result column="c_id" jdbcType="VARCHAR" property="cId" />
    <result column="a_id" jdbcType="VARCHAR" property="aId" />
    <result column="reserve" jdbcType="INTEGER" property="reserve" />
    <result column="city_name" jdbcType="VARCHAR" property="cityName" />
    <result column="province_name" jdbcType="VARCHAR" property="provinceName" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, user_id, name, phone, postcode, detail, create_date, update_date, remarks, p_id, 
    c_id, a_id, reserve
  </sql>
  <select id="selectByExample" parameterType="com.goochou.p2b.model.UserAddressExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user_address
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart&gt;-1">
      limit ${limitStart} , ${limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from user_address
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from user_address
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.goochou.p2b.model.UserAddressExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from user_address
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyProperty="id" parameterType="com.goochou.p2b.model.UserAddress" useGeneratedKeys="true">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into user_address (user_id, name, phone, 
      postcode, detail, create_date, 
      update_date, remarks, p_id, 
      c_id, a_id, reserve)
    values (#{userId,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, 
      #{postcode,jdbcType=INTEGER}, #{detail,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP}, 
      #{updateDate,jdbcType=TIMESTAMP}, #{remarks,jdbcType=VARCHAR}, #{pId,jdbcType=VARCHAR}, 
      #{cId,jdbcType=VARCHAR}, #{aId,jdbcType=VARCHAR}, #{reserve,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.goochou.p2b.model.UserAddress">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into user_address
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="postcode != null">
        postcode,
      </if>
      <if test="detail != null">
        detail,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="updateDate != null">
        update_date,
      </if>
      <if test="remarks != null">
        remarks,
      </if>
      <if test="pId != null">
        p_id,
      </if>
      <if test="cId != null">
        c_id,
      </if>
      <if test="aId != null">
        a_id,
      </if>
      <if test="reserve != null">
        reserve,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="postcode != null">
        #{postcode,jdbcType=INTEGER},
      </if>
      <if test="detail != null">
        #{detail,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="remarks != null">
        #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="pId != null">
        #{pId,jdbcType=VARCHAR},
      </if>
      <if test="cId != null">
        #{cId,jdbcType=VARCHAR},
      </if>
      <if test="aId != null">
        #{aId,jdbcType=VARCHAR},
      </if>
      <if test="reserve != null">
        #{reserve,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.goochou.p2b.model.UserAddressExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from user_address
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update user_address
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null">
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.postcode != null">
        postcode = #{record.postcode,jdbcType=INTEGER},
      </if>
      <if test="record.detail != null">
        detail = #{record.detail,jdbcType=VARCHAR},
      </if>
      <if test="record.createDate != null">
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateDate != null">
        update_date = #{record.updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.remarks != null">
        remarks = #{record.remarks,jdbcType=VARCHAR},
      </if>
      <if test="record.pId != null">
        p_id = #{record.pId,jdbcType=VARCHAR},
      </if>
      <if test="record.cId != null">
        c_id = #{record.cId,jdbcType=VARCHAR},
      </if>
      <if test="record.aId != null">
        a_id = #{record.aId,jdbcType=VARCHAR},
      </if>
      <if test="record.reserve != null">
        reserve = #{record.reserve,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update user_address
    set id = #{record.id,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      postcode = #{record.postcode,jdbcType=INTEGER},
      detail = #{record.detail,jdbcType=VARCHAR},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      update_date = #{record.updateDate,jdbcType=TIMESTAMP},
      remarks = #{record.remarks,jdbcType=VARCHAR},
      p_id = #{record.pId,jdbcType=VARCHAR},
      c_id = #{record.cId,jdbcType=VARCHAR},
      a_id = #{record.aId,jdbcType=VARCHAR},
      reserve = #{record.reserve,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.goochou.p2b.model.UserAddress">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update user_address
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="postcode != null">
        postcode = #{postcode,jdbcType=INTEGER},
      </if>
      <if test="detail != null">
        detail = #{detail,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null">
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="remarks != null">
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="pId != null">
        p_id = #{pId,jdbcType=VARCHAR},
      </if>
      <if test="cId != null">
        c_id = #{cId,jdbcType=VARCHAR},
      </if>
      <if test="aId != null">
        a_id = #{aId,jdbcType=VARCHAR},
      </if>
      <if test="reserve != null">
        reserve = #{reserve,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.goochou.p2b.model.UserAddress">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update user_address
    set user_id = #{userId,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      postcode = #{postcode,jdbcType=INTEGER},
      detail = #{detail,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      update_date = #{updateDate,jdbcType=TIMESTAMP},
      remarks = #{remarks,jdbcType=VARCHAR},
      p_id = #{pId,jdbcType=VARCHAR},
      c_id = #{cId,jdbcType=VARCHAR},
      a_id = #{aId,jdbcType=VARCHAR},
      reserve = #{reserve,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>


  <select id="selectAllAddress" parameterType="map" resultType="com.goochou.p2b.model.UserAddress">
    <include refid="List_Address_Common_Sql" />
    where user_id=#{userId} and reserve != 2 
    order by address.update_date desc
    <if test="start != null and limit !=null">
      limit #{start},#{limit}
    </if>
  </select>

  <select id="selectAllAddressCount" parameterType="int" resultType="int">
    <include refid="Count_Address_Common_Sql" />
    where user_id=#{userId} and reserve != 2
  </select>

  <update id="updateAllReserve" parameterType="int">
    update user_address set reserve =0 where user_id=#{userId,jdbcType=INTEGER} and reserve != 2
  </update>

  
  
  <select id="queryAllUserAddress" parameterType="map" resultType="com.goochou.p2b.model.UserAddress">
    <include refid="List_Address_Common_Sql" />
    WHERE reserve != 2 
    <if test="keyword != null and keyword != '' and !keyword.isEmpty()">
   		and (username like '%${keyword}%' or true_name like '%${keyword}%' or user_phone like '%${keyword}%')
    </if>
    ORDER BY  id DESC
    <if test="start != null and limit != null">
      limit #{start} , #{limit}
    </if>
  </select>

  <select id="queryAllUserAddressCount" resultType="int">
    <include refid="Count_Address_Common_Sql" />
    WHERE reserve != 2
    <if test="keyword != null">
      and (username like '%${keyword}%' or true_name like '%${keyword}%' or user_phone like '%${keyword}%')
    </if>
  </select>

  <select id="queryHasAddress" parameterType="int" resultType="java.lang.Boolean">
    select exists (select * from user_address where user_id=#{userId})
  </select>
  
  <!--  弃用 -->
  <select id="selectAddressById" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select a.*,b.`name` provinceName,c.`name` cityName from user_address a left join province_city b on a.p_id=b.id LEFT JOIN province_city c on a.c_id=c.id
	where a.id=#{id,jdbcType=INTEGER}
  </select>


  <select id="listUserAddress" parameterType="map" resultType="com.goochou.p2b.model.UserAddress">
    <include refid="List_Address_Common_Sql" />
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart&gt;-1">
      limit ${limitStart} , ${limitEnd}
    </if>
  </select>

  <select id="countUserAddress" parameterType="map" resultType="int">
    <include refid="Count_Address_Common_Sql" />
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>


  <sql id="List_Address_Common_Sql">
    select * from (
      SELECT 
        ua.*,
        u.true_name,
        u.username,
        u.phone user_phone,
        p.code province_code,
        p.name province_name,
        c.code city_code,
        c.name city_name,
        a.code area_code,
        a.name area_name
      FROM
        user_address ua 
        INNER JOIN `user` u ON u.id=ua.user_id
        INNER JOIN t_area p ON p.code=ua.p_id 
        INNER JOIN t_area c ON c.code=ua.c_id
        LEFT JOIN t_area a ON a.code=ua.a_id
    ) t
  </sql>
  
  <sql id="Count_Address_Common_Sql">
    select count(*) from (
      SELECT 
        ua.*,
        u.true_name,
        u.username,
        u.phone user_phone,
        p.code province_code,
        p.name province_name,
        c.code city_code,
        c.name city_name,
        a.code area_code,
        a.name area_name
      FROM
        user_address ua 
        INNER JOIN `user` u ON u.id=ua.user_id
        INNER JOIN t_area p ON p.code=ua.p_id 
        INNER JOIN t_area c ON c.code=ua.c_id
        LEFT JOIN t_area a ON a.code=ua.a_id
    ) t
  </sql>
  
  
</mapper>
