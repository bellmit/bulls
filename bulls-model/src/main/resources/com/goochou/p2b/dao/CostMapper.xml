<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.goochou.p2b.dao.CostMapper">
  <resultMap id="BaseResultMap" type="com.goochou.p2b.model.Cost">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Dec 08 11:08:30 CST 2016.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="rent" jdbcType="DOUBLE" property="rent" />
    <result column="elec_fee" jdbcType="DOUBLE" property="elecFee" />
    <result column="manage_fee" jdbcType="DOUBLE" property="manageFee" />
    <result column="salary" jdbcType="DOUBLE" property="salary" />
    <result column="accum_fund" jdbcType="DOUBLE" property="accumFund" />
    <result column="social_fund" jdbcType="DOUBLE" property="socialFund" />
    <result column="customer_service_fee" jdbcType="DOUBLE" property="customerServiceFee" />
    <result column="express_office_fee" jdbcType="DOUBLE" property="expressOfficeFee" />
    <result column="develop_fee" jdbcType="DOUBLE" property="developFee" />
    <result column="bank_fee" jdbcType="DOUBLE" property="bankFee" />
    <result column="other_fee" jdbcType="DOUBLE" property="otherFee" />
    <result column="channel_fee" jdbcType="DOUBLE" property="channelFee" />
    <result column="goods_fee" jdbcType="DOUBLE" property="goodsFee" />
    <result column="inv_hb_fee" jdbcType="DOUBLE" property="invHbFee" />
    <result column="cash_hb_fee" jdbcType="DOUBLE" property="cashHbFee" />
    <result column="exp_fee" jdbcType="DOUBLE" property="expFee" />
    <result column="sign_fee" jdbcType="DOUBLE" property="signFee" />
    <result column="pay_fee" jdbcType="DOUBLE" property="payFee" />
    <result column="market_fee" jdbcType="DOUBLE" property="marketFee" />
    <result column="target_profit_fee" jdbcType="DOUBLE" property="targetProfitFee" />
    <result column="interest_revenue_fee" jdbcType="DOUBLE" property="interestRevenueFee" />
    <result column="interest_fee" jdbcType="DOUBLE" property="interestFee" />
    <result column="time" jdbcType="DATE" property="time" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Dec 08 11:08:30 CST 2016.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Dec 08 11:08:30 CST 2016.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Dec 08 11:08:30 CST 2016.
    -->
    id, rent, elec_fee, manage_fee, salary, accum_fund, social_fund, customer_service_fee, 
    express_office_fee, develop_fee, bank_fee, other_fee, channel_fee, goods_fee, inv_hb_fee, 
    cash_hb_fee, exp_fee, sign_fee, pay_fee, market_fee, target_profit_fee, interest_revenue_fee, 
    interest_fee, time
  </sql>
  <select id="selectByExample" parameterType="com.goochou.p2b.model.CostExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Dec 08 11:08:30 CST 2016.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from cost
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart&gt;-1">
      limit ${limitStart} , ${limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Dec 08 11:08:30 CST 2016.
    -->
    select 
    <include refid="Base_Column_List" />
    from cost
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Dec 08 11:08:30 CST 2016.
    -->
    delete from cost
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.goochou.p2b.model.CostExample">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Dec 08 11:08:30 CST 2016.
    -->
    delete from cost
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyProperty="id" parameterType="com.goochou.p2b.model.Cost" useGeneratedKeys="true">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Dec 08 11:08:30 CST 2016.
    -->
    insert into cost (id, rent, elec_fee, 
      manage_fee, salary, accum_fund, 
      social_fund, customer_service_fee, express_office_fee, 
      develop_fee, bank_fee, other_fee, 
      channel_fee, goods_fee, inv_hb_fee, 
      cash_hb_fee, exp_fee, sign_fee, 
      pay_fee, market_fee, target_profit_fee, 
      interest_revenue_fee, interest_fee, time
      )
    values (#{id,jdbcType=INTEGER}, #{rent,jdbcType=DOUBLE}, #{elecFee,jdbcType=DOUBLE}, 
      #{manageFee,jdbcType=DOUBLE}, #{salary,jdbcType=DOUBLE}, #{accumFund,jdbcType=DOUBLE}, 
      #{socialFund,jdbcType=DOUBLE}, #{customerServiceFee,jdbcType=DOUBLE}, #{expressOfficeFee,jdbcType=DOUBLE}, 
      #{developFee,jdbcType=DOUBLE}, #{bankFee,jdbcType=DOUBLE}, #{otherFee,jdbcType=DOUBLE}, 
      #{channelFee,jdbcType=DOUBLE}, #{goodsFee,jdbcType=DOUBLE}, #{invHbFee,jdbcType=DOUBLE}, 
      #{cashHbFee,jdbcType=DOUBLE}, #{expFee,jdbcType=DOUBLE}, #{signFee,jdbcType=DOUBLE}, 
      #{payFee,jdbcType=DOUBLE}, #{marketFee,jdbcType=DOUBLE}, #{targetProfitFee,jdbcType=DOUBLE}, 
      #{interestRevenueFee,jdbcType=DOUBLE}, #{interestFee,jdbcType=DOUBLE}, #{time,jdbcType=DATE}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.goochou.p2b.model.Cost">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Dec 08 11:08:30 CST 2016.
    -->
    insert into cost
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="rent != null">
        rent,
      </if>
      <if test="elecFee != null">
        elec_fee,
      </if>
      <if test="manageFee != null">
        manage_fee,
      </if>
      <if test="salary != null">
        salary,
      </if>
      <if test="accumFund != null">
        accum_fund,
      </if>
      <if test="socialFund != null">
        social_fund,
      </if>
      <if test="customerServiceFee != null">
        customer_service_fee,
      </if>
      <if test="expressOfficeFee != null">
        express_office_fee,
      </if>
      <if test="developFee != null">
        develop_fee,
      </if>
      <if test="bankFee != null">
        bank_fee,
      </if>
      <if test="otherFee != null">
        other_fee,
      </if>
      <if test="channelFee != null">
        channel_fee,
      </if>
      <if test="goodsFee != null">
        goods_fee,
      </if>
      <if test="invHbFee != null">
        inv_hb_fee,
      </if>
      <if test="cashHbFee != null">
        cash_hb_fee,
      </if>
      <if test="expFee != null">
        exp_fee,
      </if>
      <if test="signFee != null">
        sign_fee,
      </if>
      <if test="payFee != null">
        pay_fee,
      </if>
      <if test="marketFee != null">
        market_fee,
      </if>
      <if test="targetProfitFee != null">
        target_profit_fee,
      </if>
      <if test="interestRevenueFee != null">
        interest_revenue_fee,
      </if>
      <if test="interestFee != null">
        interest_fee,
      </if>
      <if test="time != null">
        time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="rent != null">
        #{rent,jdbcType=DOUBLE},
      </if>
      <if test="elecFee != null">
        #{elecFee,jdbcType=DOUBLE},
      </if>
      <if test="manageFee != null">
        #{manageFee,jdbcType=DOUBLE},
      </if>
      <if test="salary != null">
        #{salary,jdbcType=DOUBLE},
      </if>
      <if test="accumFund != null">
        #{accumFund,jdbcType=DOUBLE},
      </if>
      <if test="socialFund != null">
        #{socialFund,jdbcType=DOUBLE},
      </if>
      <if test="customerServiceFee != null">
        #{customerServiceFee,jdbcType=DOUBLE},
      </if>
      <if test="expressOfficeFee != null">
        #{expressOfficeFee,jdbcType=DOUBLE},
      </if>
      <if test="developFee != null">
        #{developFee,jdbcType=DOUBLE},
      </if>
      <if test="bankFee != null">
        #{bankFee,jdbcType=DOUBLE},
      </if>
      <if test="otherFee != null">
        #{otherFee,jdbcType=DOUBLE},
      </if>
      <if test="channelFee != null">
        #{channelFee,jdbcType=DOUBLE},
      </if>
      <if test="goodsFee != null">
        #{goodsFee,jdbcType=DOUBLE},
      </if>
      <if test="invHbFee != null">
        #{invHbFee,jdbcType=DOUBLE},
      </if>
      <if test="cashHbFee != null">
        #{cashHbFee,jdbcType=DOUBLE},
      </if>
      <if test="expFee != null">
        #{expFee,jdbcType=DOUBLE},
      </if>
      <if test="signFee != null">
        #{signFee,jdbcType=DOUBLE},
      </if>
      <if test="payFee != null">
        #{payFee,jdbcType=DOUBLE},
      </if>
      <if test="marketFee != null">
        #{marketFee,jdbcType=DOUBLE},
      </if>
      <if test="targetProfitFee != null">
        #{targetProfitFee,jdbcType=DOUBLE},
      </if>
      <if test="interestRevenueFee != null">
        #{interestRevenueFee,jdbcType=DOUBLE},
      </if>
      <if test="interestFee != null">
        #{interestFee,jdbcType=DOUBLE},
      </if>
      <if test="time != null">
        #{time,jdbcType=DATE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.goochou.p2b.model.CostExample" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Dec 08 11:08:30 CST 2016.
    -->
    select count(*) from cost
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Dec 08 11:08:30 CST 2016.
    -->
    update cost
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.rent != null">
        rent = #{record.rent,jdbcType=DOUBLE},
      </if>
      <if test="record.elecFee != null">
        elec_fee = #{record.elecFee,jdbcType=DOUBLE},
      </if>
      <if test="record.manageFee != null">
        manage_fee = #{record.manageFee,jdbcType=DOUBLE},
      </if>
      <if test="record.salary != null">
        salary = #{record.salary,jdbcType=DOUBLE},
      </if>
      <if test="record.accumFund != null">
        accum_fund = #{record.accumFund,jdbcType=DOUBLE},
      </if>
      <if test="record.socialFund != null">
        social_fund = #{record.socialFund,jdbcType=DOUBLE},
      </if>
      <if test="record.customerServiceFee != null">
        customer_service_fee = #{record.customerServiceFee,jdbcType=DOUBLE},
      </if>
      <if test="record.expressOfficeFee != null">
        express_office_fee = #{record.expressOfficeFee,jdbcType=DOUBLE},
      </if>
      <if test="record.developFee != null">
        develop_fee = #{record.developFee,jdbcType=DOUBLE},
      </if>
      <if test="record.bankFee != null">
        bank_fee = #{record.bankFee,jdbcType=DOUBLE},
      </if>
      <if test="record.otherFee != null">
        other_fee = #{record.otherFee,jdbcType=DOUBLE},
      </if>
      <if test="record.channelFee != null">
        channel_fee = #{record.channelFee,jdbcType=DOUBLE},
      </if>
      <if test="record.goodsFee != null">
        goods_fee = #{record.goodsFee,jdbcType=DOUBLE},
      </if>
      <if test="record.invHbFee != null">
        inv_hb_fee = #{record.invHbFee,jdbcType=DOUBLE},
      </if>
      <if test="record.cashHbFee != null">
        cash_hb_fee = #{record.cashHbFee,jdbcType=DOUBLE},
      </if>
      <if test="record.expFee != null">
        exp_fee = #{record.expFee,jdbcType=DOUBLE},
      </if>
      <if test="record.signFee != null">
        sign_fee = #{record.signFee,jdbcType=DOUBLE},
      </if>
      <if test="record.payFee != null">
        pay_fee = #{record.payFee,jdbcType=DOUBLE},
      </if>
      <if test="record.marketFee != null">
        market_fee = #{record.marketFee,jdbcType=DOUBLE},
      </if>
      <if test="record.targetProfitFee != null">
        target_profit_fee = #{record.targetProfitFee,jdbcType=DOUBLE},
      </if>
      <if test="record.interestRevenueFee != null">
        interest_revenue_fee = #{record.interestRevenueFee,jdbcType=DOUBLE},
      </if>
      <if test="record.interestFee != null">
        interest_fee = #{record.interestFee,jdbcType=DOUBLE},
      </if>
      <if test="record.time != null">
        time = #{record.time,jdbcType=DATE},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Dec 08 11:08:30 CST 2016.
    -->
    update cost
    set id = #{record.id,jdbcType=INTEGER},
      rent = #{record.rent,jdbcType=DOUBLE},
      elec_fee = #{record.elecFee,jdbcType=DOUBLE},
      manage_fee = #{record.manageFee,jdbcType=DOUBLE},
      salary = #{record.salary,jdbcType=DOUBLE},
      accum_fund = #{record.accumFund,jdbcType=DOUBLE},
      social_fund = #{record.socialFund,jdbcType=DOUBLE},
      customer_service_fee = #{record.customerServiceFee,jdbcType=DOUBLE},
      express_office_fee = #{record.expressOfficeFee,jdbcType=DOUBLE},
      develop_fee = #{record.developFee,jdbcType=DOUBLE},
      bank_fee = #{record.bankFee,jdbcType=DOUBLE},
      other_fee = #{record.otherFee,jdbcType=DOUBLE},
      channel_fee = #{record.channelFee,jdbcType=DOUBLE},
      goods_fee = #{record.goodsFee,jdbcType=DOUBLE},
      inv_hb_fee = #{record.invHbFee,jdbcType=DOUBLE},
      cash_hb_fee = #{record.cashHbFee,jdbcType=DOUBLE},
      exp_fee = #{record.expFee,jdbcType=DOUBLE},
      sign_fee = #{record.signFee,jdbcType=DOUBLE},
      pay_fee = #{record.payFee,jdbcType=DOUBLE},
      market_fee = #{record.marketFee,jdbcType=DOUBLE},
      target_profit_fee = #{record.targetProfitFee,jdbcType=DOUBLE},
      interest_revenue_fee = #{record.interestRevenueFee,jdbcType=DOUBLE},
      interest_fee = #{record.interestFee,jdbcType=DOUBLE},
      time = #{record.time,jdbcType=DATE}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.goochou.p2b.model.Cost">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Dec 08 11:08:30 CST 2016.
    -->
    update cost
    <set>
      <if test="rent != null">
        rent = #{rent,jdbcType=DOUBLE},
      </if>
      <if test="elecFee != null">
        elec_fee = #{elecFee,jdbcType=DOUBLE},
      </if>
      <if test="manageFee != null">
        manage_fee = #{manageFee,jdbcType=DOUBLE},
      </if>
      <if test="salary != null">
        salary = #{salary,jdbcType=DOUBLE},
      </if>
      <if test="accumFund != null">
        accum_fund = #{accumFund,jdbcType=DOUBLE},
      </if>
      <if test="socialFund != null">
        social_fund = #{socialFund,jdbcType=DOUBLE},
      </if>
      <if test="customerServiceFee != null">
        customer_service_fee = #{customerServiceFee,jdbcType=DOUBLE},
      </if>
      <if test="expressOfficeFee != null">
        express_office_fee = #{expressOfficeFee,jdbcType=DOUBLE},
      </if>
      <if test="developFee != null">
        develop_fee = #{developFee,jdbcType=DOUBLE},
      </if>
      <if test="bankFee != null">
        bank_fee = #{bankFee,jdbcType=DOUBLE},
      </if>
      <if test="otherFee != null">
        other_fee = #{otherFee,jdbcType=DOUBLE},
      </if>
      <if test="channelFee != null">
        channel_fee = #{channelFee,jdbcType=DOUBLE},
      </if>
      <if test="goodsFee != null">
        goods_fee = #{goodsFee,jdbcType=DOUBLE},
      </if>
      <if test="invHbFee != null">
        inv_hb_fee = #{invHbFee,jdbcType=DOUBLE},
      </if>
      <if test="cashHbFee != null">
        cash_hb_fee = #{cashHbFee,jdbcType=DOUBLE},
      </if>
      <if test="expFee != null">
        exp_fee = #{expFee,jdbcType=DOUBLE},
      </if>
      <if test="signFee != null">
        sign_fee = #{signFee,jdbcType=DOUBLE},
      </if>
      <if test="payFee != null">
        pay_fee = #{payFee,jdbcType=DOUBLE},
      </if>
      <if test="marketFee != null">
        market_fee = #{marketFee,jdbcType=DOUBLE},
      </if>
      <if test="targetProfitFee != null">
        target_profit_fee = #{targetProfitFee,jdbcType=DOUBLE},
      </if>
      <if test="interestRevenueFee != null">
        interest_revenue_fee = #{interestRevenueFee,jdbcType=DOUBLE},
      </if>
      <if test="interestFee != null">
        interest_fee = #{interestFee,jdbcType=DOUBLE},
      </if>
      <if test="time != null">
        time = #{time,jdbcType=DATE},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.goochou.p2b.model.Cost">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Dec 08 11:08:30 CST 2016.
    -->
    update cost
    set rent = #{rent,jdbcType=DOUBLE},
      elec_fee = #{elecFee,jdbcType=DOUBLE},
      manage_fee = #{manageFee,jdbcType=DOUBLE},
      salary = #{salary,jdbcType=DOUBLE},
      accum_fund = #{accumFund,jdbcType=DOUBLE},
      social_fund = #{socialFund,jdbcType=DOUBLE},
      customer_service_fee = #{customerServiceFee,jdbcType=DOUBLE},
      express_office_fee = #{expressOfficeFee,jdbcType=DOUBLE},
      develop_fee = #{developFee,jdbcType=DOUBLE},
      bank_fee = #{bankFee,jdbcType=DOUBLE},
      other_fee = #{otherFee,jdbcType=DOUBLE},
      channel_fee = #{channelFee,jdbcType=DOUBLE},
      goods_fee = #{goodsFee,jdbcType=DOUBLE},
      inv_hb_fee = #{invHbFee,jdbcType=DOUBLE},
      cash_hb_fee = #{cashHbFee,jdbcType=DOUBLE},
      exp_fee = #{expFee,jdbcType=DOUBLE},
      sign_fee = #{signFee,jdbcType=DOUBLE},
      pay_fee = #{payFee,jdbcType=DOUBLE},
      market_fee = #{marketFee,jdbcType=DOUBLE},
      target_profit_fee = #{targetProfitFee,jdbcType=DOUBLE},
      interest_revenue_fee = #{interestRevenueFee,jdbcType=DOUBLE},
      interest_fee = #{interestFee,jdbcType=DOUBLE},
      time = #{time,jdbcType=DATE}
    where id = #{id,jdbcType=INTEGER}
  </update>


  <select id="query" parameterType="map" resultType="map">
    select * from cost i where 1=1
    <if test="startTime != null ">
      and  date_format(time,'%Y-%m')=#{startTime }
    </if>
    order by i.time desc
    <if test="start != null and limit != null">
      limit #{start},#{limit}
    </if>
  </select>

  <select id="queryCount" parameterType="map" resultType="int">
    select count(*) from cost i where 1=1
    <if test="startTime != null ">
      and  date_format(time,'%Y-%m')=#{startTime }
    </if>
    <if test="start != null and limit != null">
      limit #{start},#{limit}
    </if>

  </select>


  <select id="queryByDate" parameterType="map" resultType="map">
        select * from cost where date_format(time,'%Y-%m') = date_format(#{date },'%Y-%m') limit 1
  </select>

  <select id="queryByday" parameterType="map" resultType="map">
    select * from cost where date_format(time, '%Y-%m-%d') = date_format(#{date }, '%Y-%m-%d') limit 1
  </select>


  <select id="querySum" parameterType="map" resultType="map">
   select
sum(case when rent is null then 0 else rent end)+
sum(case when elec_fee is null then 0 else elec_fee end)+
sum(case when manage_fee is null then 0 else manage_fee end)+
sum(case when salary is null then 0 else salary end)+
sum(case when accum_fund is null then 0 else accum_fund end)+
sum(case when social_fund is null then 0 else social_fund end)+
sum(case when customer_service_fee is null then 0 else customer_service_fee end)+
sum(case when express_office_fee is null then 0 else express_office_fee end)+
sum(case when develop_fee is null then 0 else develop_fee end)+
sum(case when bank_fee is null then 0 else bank_fee end)+
sum(case when other_fee is null then 0 else other_fee end)+
sum(case when channel_fee is null then 0 else channel_fee end)+
sum(case when goods_fee is null then 0 else goods_fee end)+
sum(case when inv_hb_fee is null then 0 else inv_hb_fee end)+
sum(case when cash_hb_fee is null then 0 else cash_hb_fee end)+
sum(case when exp_fee is null then 0 else exp_fee end)+
sum(case when sign_fee is null then 0 else sign_fee end)+
sum(case when pay_fee is null then 0 else pay_fee end)+
sum(case when market_fee is null then 0 else market_fee end)+

sum(case when interest_fee is null then 0 else interest_fee end)  sumAmount
from cost where DATE_FORMAT(time,'%Y') =  #{startTime}
  </select>


</mapper>