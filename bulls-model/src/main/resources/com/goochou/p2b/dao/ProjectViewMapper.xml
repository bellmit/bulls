<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.goochou.p2b.dao.ProjectViewMapper">
  <resultMap id="BaseResultMap" type="com.goochou.p2b.model.vo.ProjectView">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <result column="id" jdbcType="INTEGER" property="id" />
    <result column="parent_id" jdbcType="INTEGER" property="parentId" />
    <result column="product_id" jdbcType="INTEGER" property="productId" />
    <result column="investment_id" jdbcType="INTEGER" property="investmentId" />
    <result column="enterprise_id" jdbcType="INTEGER" property="enterpriseId" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="annualized" jdbcType="REAL" property="annualized" />
    <result column="increase_annualized" jdbcType="REAL" property="increaseAnnualized" />
    <result column="deadline" jdbcType="TIMESTAMP" property="deadline" />
    <result column="trade_time" jdbcType="TIMESTAMP" property="tradeTime" />
    <result column="buy_back_time" jdbcType="TIMESTAMP" property="buyBackTime" />
    <result column="limit_days" jdbcType="INTEGER" property="limitDays" />
    <result column="total_amount" jdbcType="DOUBLE" property="totalAmount" />
    <result column="start_time" jdbcType="TIMESTAMP" property="startTime" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="update_date" jdbcType="TIMESTAMP" property="updateDate" />
    <result column="repayment_method" jdbcType="INTEGER" property="repaymentMethod" />
    <result column="project_description" jdbcType="VARCHAR" property="projectDescription" />
    <result column="project_type" jdbcType="INTEGER" property="projectType" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="investors_num" jdbcType="INTEGER" property="investorsNum" />
    <result column="invested_amount" jdbcType="DOUBLE" property="investedAmount" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="version" jdbcType="INTEGER" property="version" />
    <result column="tag" jdbcType="VARCHAR" property="tag" />
    <result column="item_number" jdbcType="VARCHAR" property="itemNumber" />
    <result column="noob" jdbcType="INTEGER" property="noob" />
    <result column="rate_coupon_days" jdbcType="INTEGER" property="rateCouponDays" />
    <result column="sort" jdbcType="INTEGER" property="sort" />
    <result column="contract_id" jdbcType="VARCHAR" property="contractId" />
    <result column="transferable" jdbcType="INTEGER" property="transferable" />
    <result column="plat_service_charge" jdbcType="DOUBLE" property="platServiceCharge" />
    <result column="channel_service_charge" jdbcType="DOUBLE" property="channelServiceCharge" />
    <result column="repay_unit" jdbcType="VARCHAR" property="repayUnit" />
    <result column="sex" jdbcType="VARCHAR" property="sex" />
    <result column="raise_fee" jdbcType="DOUBLE" property="raiseFee" />
    <result column="manage_fee" jdbcType="DOUBLE" property="manageFee" />
    <result column="ear_number" jdbcType="VARCHAR" property="earNumber" />
    <result column="safe_number" jdbcType="VARCHAR" property="safeNumber" />
    <result column="interest_amount" jdbcType="DOUBLE" property="interestAmount" />
    <result column="weight" jdbcType="DOUBLE" property="weight" />
    <result column="unit_zoom_price" jdbcType="DOUBLE" property="unitZoomPrice" />
    <result column="unit_feed_price" jdbcType="DOUBLE" property="unitFeedPrice" />
    <result column="unit_manage_price" jdbcType="DOUBLE" property="unitManagePrice" />
    <result column="add_weight" jdbcType="DOUBLE" property="addWeight" />
    <result column="gps_number" jdbcType="VARCHAR" property="gpsNumber" />
    <result column="prairie_value" jdbcType="VARCHAR" property="prairieValue" />
    <result column="expectant" jdbcType="INTEGER" property="expectant" />
    <result column="auto_enable_sale" jdbcType="BIT" property="autoEnableSale" />
    <result column="real_ear_number" jdbcType="VARCHAR" property="realEarNumber" />
    <result column="buy_again" jdbcType="BIT" property="buyAgain" />
    <result column="due_time" jdbcType="TIMESTAMP" property="dueTime" />
    <result column="yue_ling" jdbcType="BIGINT" property="yueLing" />
    <result column="pin_total_point" jdbcType="INTEGER" property="pinTotalPoint" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, parent_id, product_id, investment_id, enterprise_id, title, annualized, increase_annualized, 
    deadline, trade_time, buy_back_time, limit_days, total_amount, start_time, create_date, 
    update_date, repayment_method, project_description, project_type, user_id, investors_num, 
    invested_amount, status, version, tag, item_number, noob, rate_coupon_days, sort, 
    contract_id, transferable, plat_service_charge, channel_service_charge, repay_unit, 
    sex, raise_fee, manage_fee, ear_number, safe_number, interest_amount, weight, unit_zoom_price, 
    unit_feed_price, unit_manage_price, add_weight, gps_number, prairie_value, expectant, 
    auto_enable_sale, real_ear_number, buy_again, due_time, yue_ling, pin_total_point
  </sql>
  <select id="selectByExample" parameterType="com.goochou.p2b.model.vo.ProjectViewExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from project_view
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart&gt;-1">
      limit ${limitStart} , ${limitEnd}
    </if>
  </select>
  <select id="countByExample" parameterType="com.goochou.p2b.model.vo.ProjectViewExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from project_view
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update project_view
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.parentId != null">
        parent_id = #{record.parentId,jdbcType=INTEGER},
      </if>
      <if test="record.productId != null">
        product_id = #{record.productId,jdbcType=INTEGER},
      </if>
      <if test="record.investmentId != null">
        investment_id = #{record.investmentId,jdbcType=INTEGER},
      </if>
      <if test="record.enterpriseId != null">
        enterprise_id = #{record.enterpriseId,jdbcType=INTEGER},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.annualized != null">
        annualized = #{record.annualized,jdbcType=REAL},
      </if>
      <if test="record.increaseAnnualized != null">
        increase_annualized = #{record.increaseAnnualized,jdbcType=REAL},
      </if>
      <if test="record.deadline != null">
        deadline = #{record.deadline,jdbcType=TIMESTAMP},
      </if>
      <if test="record.tradeTime != null">
        trade_time = #{record.tradeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.buyBackTime != null">
        buy_back_time = #{record.buyBackTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.limitDays != null">
        limit_days = #{record.limitDays,jdbcType=INTEGER},
      </if>
      <if test="record.totalAmount != null">
        total_amount = #{record.totalAmount,jdbcType=DOUBLE},
      </if>
      <if test="record.startTime != null">
        start_time = #{record.startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createDate != null">
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateDate != null">
        update_date = #{record.updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.repaymentMethod != null">
        repayment_method = #{record.repaymentMethod,jdbcType=INTEGER},
      </if>
      <if test="record.projectDescription != null">
        project_description = #{record.projectDescription,jdbcType=VARCHAR},
      </if>
      <if test="record.projectType != null">
        project_type = #{record.projectType,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.investorsNum != null">
        investors_num = #{record.investorsNum,jdbcType=INTEGER},
      </if>
      <if test="record.investedAmount != null">
        invested_amount = #{record.investedAmount,jdbcType=DOUBLE},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.version != null">
        version = #{record.version,jdbcType=INTEGER},
      </if>
      <if test="record.tag != null">
        tag = #{record.tag,jdbcType=VARCHAR},
      </if>
      <if test="record.itemNumber != null">
        item_number = #{record.itemNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.noob != null">
        noob = #{record.noob,jdbcType=INTEGER},
      </if>
      <if test="record.rateCouponDays != null">
        rate_coupon_days = #{record.rateCouponDays,jdbcType=INTEGER},
      </if>
      <if test="record.sort != null">
        sort = #{record.sort,jdbcType=INTEGER},
      </if>
      <if test="record.contractId != null">
        contract_id = #{record.contractId,jdbcType=VARCHAR},
      </if>
      <if test="record.transferable != null">
        transferable = #{record.transferable,jdbcType=INTEGER},
      </if>
      <if test="record.platServiceCharge != null">
        plat_service_charge = #{record.platServiceCharge,jdbcType=DOUBLE},
      </if>
      <if test="record.channelServiceCharge != null">
        channel_service_charge = #{record.channelServiceCharge,jdbcType=DOUBLE},
      </if>
      <if test="record.repayUnit != null">
        repay_unit = #{record.repayUnit,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null">
        sex = #{record.sex,jdbcType=VARCHAR},
      </if>
      <if test="record.raiseFee != null">
        raise_fee = #{record.raiseFee,jdbcType=DOUBLE},
      </if>
      <if test="record.manageFee != null">
        manage_fee = #{record.manageFee,jdbcType=DOUBLE},
      </if>
      <if test="record.earNumber != null">
        ear_number = #{record.earNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.safeNumber != null">
        safe_number = #{record.safeNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.interestAmount != null">
        interest_amount = #{record.interestAmount,jdbcType=DOUBLE},
      </if>
      <if test="record.weight != null">
        weight = #{record.weight,jdbcType=DOUBLE},
      </if>
      <if test="record.unitZoomPrice != null">
        unit_zoom_price = #{record.unitZoomPrice,jdbcType=DOUBLE},
      </if>
      <if test="record.unitFeedPrice != null">
        unit_feed_price = #{record.unitFeedPrice,jdbcType=DOUBLE},
      </if>
      <if test="record.unitManagePrice != null">
        unit_manage_price = #{record.unitManagePrice,jdbcType=DOUBLE},
      </if>
      <if test="record.addWeight != null">
        add_weight = #{record.addWeight,jdbcType=DOUBLE},
      </if>
      <if test="record.gpsNumber != null">
        gps_number = #{record.gpsNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.prairieValue != null">
        prairie_value = #{record.prairieValue,jdbcType=VARCHAR},
      </if>
      <if test="record.expectant != null">
        expectant = #{record.expectant,jdbcType=INTEGER},
      </if>
      <if test="record.autoEnableSale != null">
        auto_enable_sale = #{record.autoEnableSale,jdbcType=BIT},
      </if>
      <if test="record.realEarNumber != null">
        real_ear_number = #{record.realEarNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.buyAgain != null">
        buy_again = #{record.buyAgain,jdbcType=BIT},
      </if>
      <if test="record.dueTime != null">
        due_time = #{record.dueTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.yueLing != null">
        yue_ling = #{record.yueLing,jdbcType=BIGINT},
      </if>
      <if test="record.pinTotalPoint != null">
        pin_total_point = #{record.pinTotalPoint,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update project_view
    set id = #{record.id,jdbcType=INTEGER},
      parent_id = #{record.parentId,jdbcType=INTEGER},
      product_id = #{record.productId,jdbcType=INTEGER},
      investment_id = #{record.investmentId,jdbcType=INTEGER},
      enterprise_id = #{record.enterpriseId,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      annualized = #{record.annualized,jdbcType=REAL},
      increase_annualized = #{record.increaseAnnualized,jdbcType=REAL},
      deadline = #{record.deadline,jdbcType=TIMESTAMP},
      trade_time = #{record.tradeTime,jdbcType=TIMESTAMP},
      buy_back_time = #{record.buyBackTime,jdbcType=TIMESTAMP},
      limit_days = #{record.limitDays,jdbcType=INTEGER},
      total_amount = #{record.totalAmount,jdbcType=DOUBLE},
      start_time = #{record.startTime,jdbcType=TIMESTAMP},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      update_date = #{record.updateDate,jdbcType=TIMESTAMP},
      repayment_method = #{record.repaymentMethod,jdbcType=INTEGER},
      project_description = #{record.projectDescription,jdbcType=VARCHAR},
      project_type = #{record.projectType,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      investors_num = #{record.investorsNum,jdbcType=INTEGER},
      invested_amount = #{record.investedAmount,jdbcType=DOUBLE},
      status = #{record.status,jdbcType=INTEGER},
      version = #{record.version,jdbcType=INTEGER},
      tag = #{record.tag,jdbcType=VARCHAR},
      item_number = #{record.itemNumber,jdbcType=VARCHAR},
      noob = #{record.noob,jdbcType=INTEGER},
      rate_coupon_days = #{record.rateCouponDays,jdbcType=INTEGER},
      sort = #{record.sort,jdbcType=INTEGER},
      contract_id = #{record.contractId,jdbcType=VARCHAR},
      transferable = #{record.transferable,jdbcType=INTEGER},
      plat_service_charge = #{record.platServiceCharge,jdbcType=DOUBLE},
      channel_service_charge = #{record.channelServiceCharge,jdbcType=DOUBLE},
      repay_unit = #{record.repayUnit,jdbcType=VARCHAR},
      sex = #{record.sex,jdbcType=VARCHAR},
      raise_fee = #{record.raiseFee,jdbcType=DOUBLE},
      manage_fee = #{record.manageFee,jdbcType=DOUBLE},
      ear_number = #{record.earNumber,jdbcType=VARCHAR},
      safe_number = #{record.safeNumber,jdbcType=VARCHAR},
      interest_amount = #{record.interestAmount,jdbcType=DOUBLE},
      weight = #{record.weight,jdbcType=DOUBLE},
      unit_zoom_price = #{record.unitZoomPrice,jdbcType=DOUBLE},
      unit_feed_price = #{record.unitFeedPrice,jdbcType=DOUBLE},
      unit_manage_price = #{record.unitManagePrice,jdbcType=DOUBLE},
      add_weight = #{record.addWeight,jdbcType=DOUBLE},
      gps_number = #{record.gpsNumber,jdbcType=VARCHAR},
      prairie_value = #{record.prairieValue,jdbcType=VARCHAR},
      expectant = #{record.expectant,jdbcType=INTEGER},
      auto_enable_sale = #{record.autoEnableSale,jdbcType=BIT},
      real_ear_number = #{record.realEarNumber,jdbcType=VARCHAR},
      buy_again = #{record.buyAgain,jdbcType=BIT},
      due_time = #{record.dueTime,jdbcType=TIMESTAMP},
      yue_ling = #{record.yueLing,jdbcType=BIGINT},
      pin_total_point = #{record.pinTotalPoint,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  
  <select id="selectPinNiuListForHome" parameterType="com.goochou.p2b.model.vo.ProjectViewExample" resultMap="BaseResultMap">
    SELECT	<include refid="Base_Column_List" /> 
	FROM( 
		SELECT <include refid="Base_Column_List" />, 
			IF ( @tmp = limit_days, @rank := @rank + 1, @rank := 1 ) AS new_rank, 
			@tmp := limit_days AS tmp
		FROM project_view 
		INNER JOIN ( SELECT @tmp := '', @rank := 1 ) t_rank_tmp ON TRUE
		where status in (1,2) and project_type=1 and total_amount>invested_amount
		ORDER BY limit_days ASC <if test="orderByClause != null"> , ${orderByClause}</if>
	) project_view 
	<if test="limitStart != null and limitStart>-1">
     WHERE new_rank &lt;= ${limitEnd}
    </if>

  </select> 

  
  
</mapper>