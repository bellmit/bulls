<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.goochou.p2b.dao.ExportApplyMapper" >
  <resultMap id="BaseResultMap" type="com.goochou.p2b.model.ExportApply" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="apply_user_id" property="applyUserId" jdbcType="INTEGER" />
    <result column="apply_time" property="applyTime" jdbcType="TIMESTAMP" />
    <result column="target_list" property="targetList" jdbcType="INTEGER" />
    <result column="apply_reason" property="applyReason" jdbcType="VARCHAR" />
    <result column="audit_user_id" property="auditUserId" jdbcType="INTEGER" />
    <result column="audit_time" property="auditTime" jdbcType="TIMESTAMP" />
    <result column="audit_remark" property="auditRemark" jdbcType="VARCHAR" />
    <result column="apply_status" property="applyStatus" jdbcType="INTEGER" />
    <result column="expire_time" property="expireTime" jdbcType="TIMESTAMP" />
    <result column="version" property="version" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, apply_user_id, apply_time, target_list, apply_reason, audit_user_id, audit_time, 
    audit_remark, apply_status, expire_time, version
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.goochou.p2b.model.ExportApplyExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from export_apply
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart>-1" >
      limit ${limitStart} , ${limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from export_apply
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from export_apply
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.goochou.p2b.model.ExportApplyExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from export_apply
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.goochou.p2b.model.ExportApply" useGeneratedKeys="true" keyProperty="id" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into export_apply (apply_user_id, apply_time, target_list, 
      apply_reason, audit_user_id, audit_time, 
      audit_remark, apply_status, expire_time, 
      version)
    values (#{applyUserId,jdbcType=INTEGER}, #{applyTime,jdbcType=TIMESTAMP}, #{targetList,jdbcType=INTEGER}, 
      #{applyReason,jdbcType=VARCHAR}, #{auditUserId,jdbcType=INTEGER}, #{auditTime,jdbcType=TIMESTAMP}, 
      #{auditRemark,jdbcType=VARCHAR}, #{applyStatus,jdbcType=INTEGER}, #{expireTime,jdbcType=TIMESTAMP}, 
      #{version,jdbcType=INTEGER})
    <selectKey resultType="java.lang.Integer" keyProperty="id" >
      SELECT LAST_INSERT_ID()
    </selectKey>
  </insert>
  <insert id="insertSelective" parameterType="com.goochou.p2b.model.ExportApply" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into export_apply
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="applyUserId != null" >
        apply_user_id,
      </if>
      <if test="applyTime != null" >
        apply_time,
      </if>
      <if test="targetList != null" >
        target_list,
      </if>
      <if test="applyReason != null" >
        apply_reason,
      </if>
      <if test="auditUserId != null" >
        audit_user_id,
      </if>
      <if test="auditTime != null" >
        audit_time,
      </if>
      <if test="auditRemark != null" >
        audit_remark,
      </if>
      <if test="applyStatus != null" >
        apply_status,
      </if>
      <if test="expireTime != null" >
        expire_time,
      </if>
      <if test="version != null" >
        version,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="applyUserId != null" >
        #{applyUserId,jdbcType=INTEGER},
      </if>
      <if test="applyTime != null" >
        #{applyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="targetList != null" >
        #{targetList,jdbcType=INTEGER},
      </if>
      <if test="applyReason != null" >
        #{applyReason,jdbcType=VARCHAR},
      </if>
      <if test="auditUserId != null" >
        #{auditUserId,jdbcType=INTEGER},
      </if>
      <if test="auditTime != null" >
        #{auditTime,jdbcType=TIMESTAMP},
      </if>
      <if test="auditRemark != null" >
        #{auditRemark,jdbcType=VARCHAR},
      </if>
      <if test="applyStatus != null" >
        #{applyStatus,jdbcType=INTEGER},
      </if>
      <if test="expireTime != null" >
        #{expireTime,jdbcType=TIMESTAMP},
      </if>
      <if test="version != null" >
        #{version,jdbcType=INTEGER},
      </if>
    </trim>
    <selectKey resultType="java.lang.Integer" keyProperty="id" >
      SELECT LAST_INSERT_ID()
    </selectKey>
  </insert>
  <select id="countByExample" parameterType="com.goochou.p2b.model.ExportApplyExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from export_apply
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update export_apply
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.applyUserId != null" >
        apply_user_id = #{record.applyUserId,jdbcType=INTEGER},
      </if>
      <if test="record.applyTime != null" >
        apply_time = #{record.applyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.targetList != null" >
        target_list = #{record.targetList,jdbcType=INTEGER},
      </if>
      <if test="record.applyReason != null" >
        apply_reason = #{record.applyReason,jdbcType=VARCHAR},
      </if>
      <if test="record.auditUserId != null" >
        audit_user_id = #{record.auditUserId,jdbcType=INTEGER},
      </if>
      <if test="record.auditTime != null" >
        audit_time = #{record.auditTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.auditRemark != null" >
        audit_remark = #{record.auditRemark,jdbcType=VARCHAR},
      </if>
      <if test="record.applyStatus != null" >
        apply_status = #{record.applyStatus,jdbcType=INTEGER},
      </if>
      <if test="record.expireTime != null" >
        expire_time = #{record.expireTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.version != null" >
        version = #{record.version,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update export_apply
    set id = #{record.id,jdbcType=INTEGER},
      apply_user_id = #{record.applyUserId,jdbcType=INTEGER},
      apply_time = #{record.applyTime,jdbcType=TIMESTAMP},
      target_list = #{record.targetList,jdbcType=INTEGER},
      apply_reason = #{record.applyReason,jdbcType=VARCHAR},
      audit_user_id = #{record.auditUserId,jdbcType=INTEGER},
      audit_time = #{record.auditTime,jdbcType=TIMESTAMP},
      audit_remark = #{record.auditRemark,jdbcType=VARCHAR},
      apply_status = #{record.applyStatus,jdbcType=INTEGER},
      expire_time = #{record.expireTime,jdbcType=TIMESTAMP},
      version = #{record.version,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.goochou.p2b.model.ExportApply" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update export_apply
    <set >
      <if test="applyUserId != null" >
        apply_user_id = #{applyUserId,jdbcType=INTEGER},
      </if>
      <if test="applyTime != null" >
        apply_time = #{applyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="targetList != null" >
        target_list = #{targetList,jdbcType=INTEGER},
      </if>
      <if test="applyReason != null" >
        apply_reason = #{applyReason,jdbcType=VARCHAR},
      </if>
      <if test="auditUserId != null" >
        audit_user_id = #{auditUserId,jdbcType=INTEGER},
      </if>
      <if test="auditTime != null" >
        audit_time = #{auditTime,jdbcType=TIMESTAMP},
      </if>
      <if test="auditRemark != null" >
        audit_remark = #{auditRemark,jdbcType=VARCHAR},
      </if>
      <if test="applyStatus != null" >
        apply_status = #{applyStatus,jdbcType=INTEGER},
      </if>
      <if test="expireTime != null" >
        expire_time = #{expireTime,jdbcType=TIMESTAMP},
      </if>
      <if test="version != null" >
        version = #{version,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.goochou.p2b.model.ExportApply" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update export_apply
    set apply_user_id = #{applyUserId,jdbcType=INTEGER},
      apply_time = #{applyTime,jdbcType=TIMESTAMP},
      target_list = #{targetList,jdbcType=INTEGER},
      apply_reason = #{applyReason,jdbcType=VARCHAR},
      audit_user_id = #{auditUserId,jdbcType=INTEGER},
      audit_time = #{auditTime,jdbcType=TIMESTAMP},
      audit_remark = #{auditRemark,jdbcType=VARCHAR},
      apply_status = #{applyStatus,jdbcType=INTEGER},
      expire_time = #{expireTime,jdbcType=TIMESTAMP},
      version = #{version,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <!-- **************以下自定义*************** -->
  <select id="listExportApply" parameterType="map" resultType="map">
		select
			apply.*,
			apply_user.true_name as apply_user_name,
			audit_user.true_name as audit_user_name
		from export_apply apply
		inner join user_admin apply_user on apply_user.id = apply.apply_user_id
		left join user_admin audit_user on audit_user.id = apply.audit_user_id
		where 1=1
	<if test="trueName != null">
  		and apply_user.true_name like '%${trueName}%'
  	</if>
  	<if test="auditStatus != null">
  		and apply.apply_status = #{auditStatus}
  	</if>
  	<if test="startTime != null">
  		and apply.apply_time &gt;= #{startTime}
  	</if>
  	<if test="endTime != null">
  		and apply.apply_time &lt; #{endTime}
  	</if>
  	<if test="adminId != null">
  		and apply.apply_user_id =  #{adminId}
  	</if>
  	 	order by apply.apply_time desc
  	<if test="limitStart != null and limitEnd != null">
  		limit #{limitStart},#{limitEnd}
  	</if>
  </select>
  
  <select id="countExportApply" parameterType="map" resultType="int">
  		select count(*)
		from export_apply apply
		inner join user_admin apply_user on apply_user.id = apply.apply_user_id
		left join user_admin audit_user on audit_user.id = apply.audit_user_id
		where 1=1
  	<if test="trueName != null">
  		and apply_user.true_name like '%${trueName}%'
  	</if>
  	<if test="auditStatus != null">
  		and apply.apply_status = #{auditStatus}
  	</if>
  	<if test="startTime != null">
  		and apply.apply_time &gt;= #{startTime}
  	</if>
  	<if test="endTime != null">
  		and apply.apply_time &lt; #{endTime}
  	</if>
  	<if test="adminId != null">
  		and apply.apply_user_id = #{adminId}
  	</if>
  </select>
  
  
  
</mapper>