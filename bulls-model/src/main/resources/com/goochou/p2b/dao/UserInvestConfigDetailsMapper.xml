<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.goochou.p2b.dao.UserInvestConfigDetailsMapper" >
  <resultMap id="BaseResultMap" type="com.goochou.p2b.model.UserInvestConfigDetails" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="invest_config_id" property="investConfigId" jdbcType="INTEGER" />
    <result column="interest_id" property="interestId" jdbcType="INTEGER" />
    <result column="capital_amount" property="capitalAmount" jdbcType="DOUBLE" />
    <result column="available_balance" property="availableBalance" jdbcType="DOUBLE" />
    <result column="frozen_amount" property="frozenAmount" jdbcType="DOUBLE" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, invest_config_id, interest_id, capital_amount, available_balance, frozen_amount, 
    create_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.goochou.p2b.model.UserInvestConfigDetailsExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user_invest_config_details
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from user_invest_config_details
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from user_invest_config_details
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.goochou.p2b.model.UserInvestConfigDetailsExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from user_invest_config_details
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.goochou.p2b.model.UserInvestConfigDetails" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into user_invest_config_details (id, invest_config_id, interest_id, 
      capital_amount, available_balance, frozen_amount, 
      create_time)
    values (#{id,jdbcType=INTEGER}, #{investConfigId,jdbcType=INTEGER}, #{interestId,jdbcType=INTEGER}, 
      #{capitalAmount,jdbcType=DOUBLE}, #{availableBalance,jdbcType=DOUBLE}, #{frozenAmount,jdbcType=DOUBLE}, 
      #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.goochou.p2b.model.UserInvestConfigDetails" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into user_invest_config_details
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="investConfigId != null" >
        invest_config_id,
      </if>
      <if test="interestId != null" >
        interest_id,
      </if>
      <if test="capitalAmount != null" >
        capital_amount,
      </if>
      <if test="availableBalance != null" >
        available_balance,
      </if>
      <if test="frozenAmount != null" >
        frozen_amount,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="investConfigId != null" >
        #{investConfigId,jdbcType=INTEGER},
      </if>
      <if test="interestId != null" >
        #{interestId,jdbcType=INTEGER},
      </if>
      <if test="capitalAmount != null" >
        #{capitalAmount,jdbcType=DOUBLE},
      </if>
      <if test="availableBalance != null" >
        #{availableBalance,jdbcType=DOUBLE},
      </if>
      <if test="frozenAmount != null" >
        #{frozenAmount,jdbcType=DOUBLE},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.goochou.p2b.model.UserInvestConfigDetailsExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from user_invest_config_details
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update user_invest_config_details
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.investConfigId != null" >
        invest_config_id = #{record.investConfigId,jdbcType=INTEGER},
      </if>
      <if test="record.interestId != null" >
        interest_id = #{record.interestId,jdbcType=INTEGER},
      </if>
      <if test="record.capitalAmount != null" >
        capital_amount = #{record.capitalAmount,jdbcType=DOUBLE},
      </if>
      <if test="record.availableBalance != null" >
        available_balance = #{record.availableBalance,jdbcType=DOUBLE},
      </if>
      <if test="record.frozenAmount != null" >
        frozen_amount = #{record.frozenAmount,jdbcType=DOUBLE},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update user_invest_config_details
    set id = #{record.id,jdbcType=INTEGER},
      invest_config_id = #{record.investConfigId,jdbcType=INTEGER},
      interest_id = #{record.interestId,jdbcType=INTEGER},
      capital_amount = #{record.capitalAmount,jdbcType=DOUBLE},
      available_balance = #{record.availableBalance,jdbcType=DOUBLE},
      frozen_amount = #{record.frozenAmount,jdbcType=DOUBLE},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.goochou.p2b.model.UserInvestConfigDetails" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update user_invest_config_details
    <set >
      <if test="investConfigId != null" >
        invest_config_id = #{investConfigId,jdbcType=INTEGER},
      </if>
      <if test="interestId != null" >
        interest_id = #{interestId,jdbcType=INTEGER},
      </if>
      <if test="capitalAmount != null" >
        capital_amount = #{capitalAmount,jdbcType=DOUBLE},
      </if>
      <if test="availableBalance != null" >
        available_balance = #{availableBalance,jdbcType=DOUBLE},
      </if>
      <if test="frozenAmount != null" >
        frozen_amount = #{frozenAmount,jdbcType=DOUBLE},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.goochou.p2b.model.UserInvestConfigDetails" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update user_invest_config_details
    set invest_config_id = #{investConfigId,jdbcType=INTEGER},
      interest_id = #{interestId,jdbcType=INTEGER},
      capital_amount = #{capitalAmount,jdbcType=DOUBLE},
      available_balance = #{availableBalance,jdbcType=DOUBLE},
      frozen_amount = #{frozenAmount,jdbcType=DOUBLE},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <select id="queryInsertAmount" parameterType="map" resultType="java.lang.Double" >
    select ifnull(sum(a.frozen_amount),0) from user_invest_config_details a join user_invest_config b on a.invest_config_id=b.id where b.user_id=#{userId} and DATE_FORMAT(a.create_time,'%Y-%m-%d')=#{time}
  </select>
  
  <select id="queryConfigDetails" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
	select a.* from user_invest_config_details a join user_invest_config b on a.invest_config_id=b.id where b.`status`='create' and a.interest_id=#{interestId}
  </select>
</mapper>