<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.goochou.p2b.dao.LotteryRecordMapper">
  <resultMap id="BaseResultMap" type="com.goochou.p2b.model.LotteryRecord">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu May 09 17:06:38 CST 2019.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="gift_id" jdbcType="INTEGER" property="giftId" />
    <result column="gift_name" jdbcType="VARCHAR" property="giftName" />
    <result column="count_type" jdbcType="INTEGER" property="countType" />
    <result column="user_address_id" jdbcType="INTEGER" property="userAddressId" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="ip" jdbcType="VARCHAR" property="ip" />
    <result column="track_type" jdbcType="INTEGER" property="trackType" />
    <result column="track_no" jdbcType="VARCHAR" property="trackNo" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="activity_id" jdbcType="INTEGER" property="activityId" />
    <result column="version" jdbcType="INTEGER" property="version" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu May 09 17:06:38 CST 2019.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu May 09 17:06:38 CST 2019.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu May 09 17:06:38 CST 2019.
    -->
    id, user_id, phone, gift_id, gift_name, count_type, user_address_id, create_date, 
    ip, track_type, track_no, status, activity_id, version, remark
  </sql>
  <select id="selectByExample" parameterType="com.goochou.p2b.model.LotteryRecordExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu May 09 17:06:38 CST 2019.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from lottery_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart&gt;-1">
      limit ${limitStart} , ${limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu May 09 17:06:38 CST 2019.
    -->
    select 
    <include refid="Base_Column_List" />
    from lottery_record
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu May 09 17:06:38 CST 2019.
    -->
    delete from lottery_record
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.goochou.p2b.model.LotteryRecordExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu May 09 17:06:38 CST 2019.
    -->
    delete from lottery_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyProperty="id" parameterType="com.goochou.p2b.model.LotteryRecord" useGeneratedKeys="true">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu May 09 17:06:38 CST 2019.
    -->
    insert into lottery_record (id, user_id, phone, 
      gift_id, gift_name, count_type, 
      user_address_id, create_date, ip, 
      track_type, track_no, status, 
      activity_id, version, remark
      )
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{phone,jdbcType=VARCHAR}, 
      #{giftId,jdbcType=INTEGER}, #{giftName,jdbcType=VARCHAR}, #{countType,jdbcType=INTEGER}, 
      #{userAddressId,jdbcType=INTEGER}, #{createDate,jdbcType=TIMESTAMP}, #{ip,jdbcType=VARCHAR}, 
      #{trackType,jdbcType=INTEGER}, #{trackNo,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, 
      #{activityId,jdbcType=INTEGER}, #{version,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.goochou.p2b.model.LotteryRecord">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu May 09 17:06:38 CST 2019.
    -->
    insert into lottery_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="giftId != null">
        gift_id,
      </if>
      <if test="giftName != null">
        gift_name,
      </if>
      <if test="countType != null">
        count_type,
      </if>
      <if test="userAddressId != null">
        user_address_id,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="ip != null">
        ip,
      </if>
      <if test="trackType != null">
        track_type,
      </if>
      <if test="trackNo != null">
        track_no,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="activityId != null">
        activity_id,
      </if>
      <if test="version != null">
        version,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="giftId != null">
        #{giftId,jdbcType=INTEGER},
      </if>
      <if test="giftName != null">
        #{giftName,jdbcType=VARCHAR},
      </if>
      <if test="countType != null">
        #{countType,jdbcType=INTEGER},
      </if>
      <if test="userAddressId != null">
        #{userAddressId,jdbcType=INTEGER},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="ip != null">
        #{ip,jdbcType=VARCHAR},
      </if>
      <if test="trackType != null">
        #{trackType,jdbcType=INTEGER},
      </if>
      <if test="trackNo != null">
        #{trackNo,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="activityId != null">
        #{activityId,jdbcType=INTEGER},
      </if>
      <if test="version != null">
        #{version,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.goochou.p2b.model.LotteryRecordExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu May 09 17:06:38 CST 2019.
    -->
    select count(*) from lottery_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu May 09 17:06:38 CST 2019.
    -->
    update lottery_record
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.phone != null">
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.giftId != null">
        gift_id = #{record.giftId,jdbcType=INTEGER},
      </if>
      <if test="record.giftName != null">
        gift_name = #{record.giftName,jdbcType=VARCHAR},
      </if>
      <if test="record.countType != null">
        count_type = #{record.countType,jdbcType=INTEGER},
      </if>
      <if test="record.userAddressId != null">
        user_address_id = #{record.userAddressId,jdbcType=INTEGER},
      </if>
      <if test="record.createDate != null">
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.ip != null">
        ip = #{record.ip,jdbcType=VARCHAR},
      </if>
      <if test="record.trackType != null">
        track_type = #{record.trackType,jdbcType=INTEGER},
      </if>
      <if test="record.trackNo != null">
        track_no = #{record.trackNo,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.activityId != null">
        activity_id = #{record.activityId,jdbcType=INTEGER},
      </if>
      <if test="record.version != null">
        version = #{record.version,jdbcType=INTEGER},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu May 09 17:06:38 CST 2019.
    -->
    update lottery_record
    set id = #{record.id,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      phone = #{record.phone,jdbcType=VARCHAR},
      gift_id = #{record.giftId,jdbcType=INTEGER},
      gift_name = #{record.giftName,jdbcType=VARCHAR},
      count_type = #{record.countType,jdbcType=INTEGER},
      user_address_id = #{record.userAddressId,jdbcType=INTEGER},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      ip = #{record.ip,jdbcType=VARCHAR},
      track_type = #{record.trackType,jdbcType=INTEGER},
      track_no = #{record.trackNo,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      activity_id = #{record.activityId,jdbcType=INTEGER},
      version = #{record.version,jdbcType=INTEGER},
      remark = #{record.remark,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.goochou.p2b.model.LotteryRecord">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu May 09 17:06:38 CST 2019.
    -->
    update lottery_record
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="giftId != null">
        gift_id = #{giftId,jdbcType=INTEGER},
      </if>
      <if test="giftName != null">
        gift_name = #{giftName,jdbcType=VARCHAR},
      </if>
      <if test="countType != null">
        count_type = #{countType,jdbcType=INTEGER},
      </if>
      <if test="userAddressId != null">
        user_address_id = #{userAddressId,jdbcType=INTEGER},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="ip != null">
        ip = #{ip,jdbcType=VARCHAR},
      </if>
      <if test="trackType != null">
        track_type = #{trackType,jdbcType=INTEGER},
      </if>
      <if test="trackNo != null">
        track_no = #{trackNo,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="activityId != null">
        activity_id = #{activityId,jdbcType=INTEGER},
      </if>
      <if test="version != null">
        version = #{version,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.goochou.p2b.model.LotteryRecord">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu May 09 17:06:38 CST 2019.
    -->
    update lottery_record
    set user_id = #{userId,jdbcType=INTEGER},
      phone = #{phone,jdbcType=VARCHAR},
      gift_id = #{giftId,jdbcType=INTEGER},
      gift_name = #{giftName,jdbcType=VARCHAR},
      count_type = #{countType,jdbcType=INTEGER},
      user_address_id = #{userAddressId,jdbcType=INTEGER},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      ip = #{ip,jdbcType=VARCHAR},
      track_type = #{trackType,jdbcType=INTEGER},
      track_no = #{trackNo,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      activity_id = #{activityId,jdbcType=INTEGER},
      version = #{version,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

    <select id="queryDetailByPrimaryKey" parameterType="map" resultType="map">
        SELECT
			r.id,
			r.user_id loginId,
			r.phone loginPhone,
			r.gift_id giftId,
			r.count_type countType,
			r.user_address_id addressId,
			r.track_type trackType,
			r.track_no trackNo,
			r. STATUS,
			r.create_date,
			g.type,
			g. NAME,
			g.descript,
			g.rate,
			g.left_num,
			g.num,
			u.username,
			u.true_name,
			u.phone
		FROM
			lottery_record r
		LEFT JOIN lottery_gift g ON r.gift_id = g.id
		LEFT JOIN USER u ON r.user_id = u.id
        WHERE r.id = #{id,jdbcType=INTEGER}
        LIMIT 0, 1
    </select>
    <select id="queryListByUserId" parameterType="int" resultType="map">
        SELECT
            r.*,
            g.type,
            g.name,
            g.descript,
            g.rate,
            g.left_num,
            g.num,
            u.username,
            u.true_name,
            u.phone
        FROM
            lottery_record r
            LEFT JOIN lottery_gift g ON r.gift_id = g.id
            LEFT JOIN user u ON r.user_id = u.id
        WHERE r.user_id = #{userId}
        ORDER BY r.status
    </select>

    <select id="queryAll" parameterType="map" resultType="map">
        SELECT
			r.id,
			r.user_id loginId,
			r.phone loginPhone,
			r.gift_id giftId,
			r.count_type countType,
			r.user_address_id addressId,
			r.track_type trackType,
			r.track_no trackNo,
			r. STATUS,
			r.create_date,
			g.type,
			g. NAME,
			g.descript,
			g.rate,
			g.left_num,
			g.num,
			u.username,
			u.true_name,
			u.phone
		FROM
			lottery_record r
		LEFT JOIN lottery_gift g ON r.gift_id = g.id
		LEFT JOIN user u ON r.user_id = u.id
        where 1=1
        <if test="orderId != null">
            and r.id=#{orderId}
        </if>
        <if test="status != null">
            and r.status=#{status}
        </if>
        <if test="date != null">
            and date_format(r.time, '%Y-%m-%d')=date_format(#{date}, '%Y-%m-%d')
        </if>
        <if test="activityId != null">
            and r.activity_id=#{activityId}
        </if>
        <if test="giftId != null">
            and r.gift_id=#{giftId}
        </if>
        <if test="account != null">
            and (u.id like '%${account}%' or u.phone like '%${account}%' or u.username like '%${account}%' or
            u.true_name like '%${account}%')
        </if>
        order by r.create_date desc
        <if test="start != null and limit != null">
            limit ${start} , ${limit}
        </if>
    </select>

    <select id="queryCount" parameterType="map" resultType="int">
        select count(*)
        from
        lottery_record r
        left join lottery_gift g on r.gift_id=g.id
        left join user u on r.user_id=u.id
        where 1=1
        <if test="orderId != null">
            and r.id=#{orderId}
        </if>
        <if test="status != null">
            and r.status=#{status}
        </if>
        <if test="date != null">
            and date_format(r.time, '%Y-%m-%d')=date_format(#{date}, '%Y-%m-%d')
        </if>
        <if test="activityId != null">
            and r.activity_id=#{activityId}
        </if>
        <if test="giftId != null">
            and r.gift_id=#{giftId}
        </if>
        <if test="account != null">
            and (u.id like '%${account}%' or u.phone like '%${account}%' or u.username like '%${account}%' or
            u.true_name like '%${account}%')
        </if>
    </select>
    <select id="selectString" parameterType="map" resultType="map">
        SELECT
        u.phone,
        r.gift_name name,CONCAT(SUBSTRING(u.username, 1, 1), '****',
        SUBSTRING(u.username, CHAR_LENGTH(u.username), CHAR_LENGTH(u.username) + 1)) username,r.time
        FROM
        lottery_record r
        LEFT JOIN user u ON u.id = r.user_id
        LEFT JOIN lottery_gift g ON g.id = r.gift_id
        <if test="activityId != null">
            where r.activity_id=${activityId}
        </if>
        ORDER BY r.time DESC
        <if test="start != null and limit != null">
            limit ${start} , ${limit}
        </if>
    </select>

    <select id="selectLotteryRecordByPhone" parameterType="java.lang.String" resultType="map">
        SELECT
            g.id,
            g.name
        FROM
            lottery_record r
            LEFT JOIN lottery_gift g ON g.id = r.gift_id
        WHERE
            r.phone = #{phone}
        ORDER BY
            r.time DESC
        LIMIT 0, 1
    </select>

    <select id="queryExportDetails" parameterType="map" resultType="map">
        SELECT
			r.id,
			r.user_id loginId,
			r.phone loginPhone,
			r.gift_id giftId,
			r.count_type countType,
			r.user_address_id addressId,
			r.track_type trackType,
			r.track_no trackNo,
			r. STATUS,
			r.create_date,
			g.type,
			g. NAME,
			g.descript,
			g.rate,
			g.left_num,
			g.num,
			u.username,
			u.true_name,
			u.phone,
		IF (
			a.name is null,
			"通用活动",
			a.name
		) activityName
		FROM
			lottery_record r
		LEFT JOIN lottery_gift g ON r.gift_id = g.id
		LEFT JOIN user u ON r.user_id = u.id
		LEFT JOIN activity a ON r.activity_id = a.id
        where 1=1
        <if test="orderId != null">
            and r.id=#{orderId}
        </if>
        <if test="status != null">
            and r.status=#{status}
        </if>
        <if test="date != null">
            and date_format(r.time, '%Y-%m-%d')=date_format(#{date}, '%Y-%m-%d')
        </if>
        <if test="activityId != null">
            and r.activity_id=#{activityId}
        </if>
        <if test="giftId != null">
            and r.gift_id=#{giftId}
        </if>
        <if test="account != null">
            and (u.id like '%${account}%' or u.phone like '%${account}%' or u.username like '%${account}%' or
            u.true_name like '%${account}%')
        </if>
        order by r.create_date desc
    </select>

    <select id="queryAwardRecord" parameterType="map" resultType="java.lang.Boolean">
        SELECT exists(
                SELECT *
                FROM
                    lottery_record lr
                WHERE
                    lr.activity_id = #{activityId}
                    AND lr.user_id = #{userId}
                    AND lr.gift_id IN (SELECT lg.id
                                       FROM lottery_gift lg
                                       WHERE lg.descript = #{grade}))
    </select>

    <select id="queryAllAwardRecord" parameterType="map" resultType="map">
        SELECT
        l.time,
        l.ip,
        l.status,
        concat(substring(u.phone, 1, 3), '****', substring(u.phone, 8, 4)) phone,
        concat(substring(u.username, 1, 1), '****',
        substring(u.username, CHAR_LENGTH(u.username), CHAR_LENGTH(u.username) + 1)) username,
        concat(substring(u.true_name, 1, 1), '****',
        substring(u.true_name, CHAR_LENGTH(u.true_name), CHAR_LENGTH(u.true_name) + 1)) trueName,
        a.name
        FROM
        lottery_record l
        LEFT JOIN user u ON l.user_id = u.id
        LEFT JOIN activity a ON l.activity_id = a.id
        WHERE
        l.activity_id = #{activityId}
        <if test="userId != null and !userId.isEmpty()">
            AND lr.user_id = #{userId}
        </if>
    </select>

    <!--查询中奖纪录-->
    <select id="queryLotteryRecord" parameterType="int" resultType="map">
        SELECT
            lg.id,
            DATE_FORMAT(lr.time, '%Y-%m-%d %H:%i:%s') AS `time`,
            lr.gift_name name
        FROM lottery_record lr
            LEFT JOIN lottery_gift lg ON lr.gift_id = lg.id
        WHERE lr.activity_id = #{activityId}
              AND lr.user_id = #{userId}
        ORDER BY `time` DESC
    </select>

    <select id="saveOrselectActivityLotteryCount" parameterType="map" resultType="int">
        SELECT count(1)
        FROM lottery_record
        WHERE activity_id = #{activityId} AND user_id = #{userId} AND count_type = 0 AND
              date_format(`time`, '%Y-%m-%d') = date_format(CURRENT_DATE(), '%Y-%m-%d')
    </select>

    <select id="findCountByUserIdAndActivityId" resultType="int">
        SELECT
          count(1)
        FROM lottery_record lr
        WHERE
        user_id = #{userId}
        AND
        lr.activity_id in
        <foreach close=")" collection="activityIdList" index="index" item="item" open="(" separator=",">
        #{item}
    </foreach>
    </select>

    <!--跨年活动抽奖记录查询最近30条-->
    <select id="findThirtyRecord" resultType="map">
        select
        u.username AS userName,lg.name AS prizeName
        FROM lottery_record lr
        inner JOIN activity a ON lr.activity_id=a.id
        inner JOIN lottery_gift lg ON lr.gift_id=lg.id
        inner JOIN user u on lr.user_id=u.id
        WHERE
        lr.activity_id in
        <foreach close=")" collection="activityIdList" index="index" item="item" open="(" separator=",">
            #{item}
        </foreach>
          ORDER BY lr.time DESC
          limit 30
    </select>

    <!--根据用户id查找我的跨年活动抽奖记录-->
    <select id="findHappyRecord" resultType="map">
        select
        lg.name,lr.time
        FROM lottery_record lr,lottery_gift lg
        WHERE
        user_id=#{userId}
        AND
        lr.gift_id=lg.id
        AND
        lr.activity_id in
        <foreach close=")" collection="activityIdList" index="index" item="item" open="(" separator=",">
            #{item}
        </foreach>
        ORDER BY lr.time DESC
    </select>
 
    <!--查询红包雨记录-->
    <select id="findRedRainRecord" resultType="map">
    SELECT date_format(lr.time,'%m-%d %H:%i') time,u.username,lg.amount FROM lottery_record lr LEFT JOIN lottery_gift lg ON lr.gift_id = lg.id
    LEFT JOIN user u on lr.user_id = u.id
    WHERE lr.user_id in (SELECT iu.invite_user_id FROM user_invite iu WHERE iu.user_id=#{userId})
    and lr.activity_id=#{activityId}
    </select>
</mapper>