<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.goochou.p2b.dao.CustomerListMapper">
    <resultMap id="BaseResultMap" type="com.goochou.p2b.model.CustomerList">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Mon Jul 11 13:31:44 CST 2016.
        -->
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="admin_id" property="adminId" jdbcType="INTEGER"/>
        <result column="user_id" property="userId" jdbcType="INTEGER"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="tag" property="tag" jdbcType="VARCHAR"/>
        <result column="t_adminname" property="adminName" jdbcType="VARCHAR"/>
        <result column="mobile" property="mobile" jdbcType="VARCHAR"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Mon Jul 11 13:31:44 CST 2016.
        -->
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Mon Jul 11 13:31:44 CST 2016.
        -->
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Mon Jul 11 13:31:44 CST 2016.
        -->
        id, admin_id, user_id, create_time,tag,t_adminname,mobile,update_time
    </sql>
    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.goochou.p2b.model.CustomerListExample">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Mon Jul 11 13:31:44 CST 2016.
        -->
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from customer_list
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
        <if test="limitStart != null and limitStart>-1">
            limit ${limitStart} , ${limitEnd}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Mon Jul 11 13:31:44 CST 2016.
        -->
        select
        <include refid="Base_Column_List"/>
        from customer_list
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Mon Jul 11 13:31:44 CST 2016.
        -->
        DELETE FROM customer_list
        WHERE id = #{id,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="com.goochou.p2b.model.CustomerListExample">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Mon Jul 11 13:31:44 CST 2016.
        -->
        delete from customer_list
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.goochou.p2b.model.CustomerList" useGeneratedKeys="true" keyProperty="id">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Mon Jul 11 13:31:44 CST 2016.
        -->
        INSERT INTO customer_list (id, admin_id, user_id,
        create_time,tag,t_adminname,mobile,update_time)
        VALUES (#{id,jdbcType=INTEGER}, #{adminId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER},
        #{createTime,jdbcType=TIMESTAMP}, #{tag,jdbcType=VARCHAR}, #{adminName,jdbcType=VARCHAR}, #{mobile,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertSelective" parameterType="com.goochou.p2b.model.CustomerList">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Mon Jul 11 13:31:44 CST 2016.
        -->
        insert into customer_list
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="adminId != null">
                admin_id,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
             <if test="updateTime != null">
                update_time,
            </if>
             <if test="mobile != null">
                mobile,
            </if>
             <if test="adminName != null">
                t_adminname,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="adminId != null">
                #{adminId,jdbcType=INTEGER},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="mobile != null">
                #{mobile,jdbcType=VARCHAR},
            </if>
            <if test="adminName != null">
                #{adminName,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.goochou.p2b.model.CustomerListExample"
            resultType="java.lang.Integer">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Mon Jul 11 13:31:44 CST 2016.
        -->
        select count(*) from customer_list
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Mon Jul 11 13:31:44 CST 2016.
        -->
        update customer_list
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.adminId != null">
                admin_id = #{record.adminId,jdbcType=INTEGER},
            </if>
            <if test="record.userId != null">
                user_id = #{record.userId,jdbcType=INTEGER},
            </if>
            <if test="record.createTime != null">
                create_time = #{record.createTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Mon Jul 11 13:31:44 CST 2016.
        -->
        update customer_list
        set id = #{record.id,jdbcType=INTEGER},
        admin_id = #{record.adminId,jdbcType=INTEGER},
        user_id = #{record.userId,jdbcType=INTEGER},
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
        mobile = #{record.mobile,jdbcType=VARCHAR},
        t_adminname = #{record.adminName,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.goochou.p2b.model.CustomerList">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Mon Jul 11 13:31:44 CST 2016.
        -->
        update customer_list
        <set>
            <if test="adminId != null">
                admin_id = #{adminId,jdbcType=INTEGER},
            </if>
            <if test="userId != null">
                user_id = #{userId,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="tag != null">
                tag = #{tag,jdbcType=VARCHAR},
            </if>
            <if test="updateTime != null">
                update_time= #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="mobile != null">
               mobile= #{mobile,jdbcType=VARCHAR},
            </if>
            <if test="adminName != null">
                t_adminname=#{adminName,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.goochou.p2b.model.CustomerList">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Mon Jul 11 13:31:44 CST 2016.
        -->
        UPDATE customer_list
        SET admin_id = #{adminId,jdbcType=INTEGER},
        user_id = #{userId,jdbcType=INTEGER},
        create_time = #{createTime,jdbcType=TIMESTAMP}
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
        tag = #{record.tag,jdbcType=VARCHAR},
        mobile = #{record.mobile,jdbcType=VARCHAR},
        t_adminname = #{record.adminName,jdbcType=VARCHAR}
        WHERE id = #{id,jdbcType=INTEGER}
    </update>

    <select id="list" resultType="map" parameterType="map">
        SELECT u.id
        ,u.phone,u.username,u.true_name,u.register_time,a.available_balance,a.huo_investment_amount,a.uncollect_capital,cl.id
        cId from
        customer_list cl,user u,`user_admin` ua,`assets` a
        where cl.admin_id=ua.id and
        cl.user_id=u.id and u.id=a.user_id

        <if test="startTime != null and endTime == null">
            and register_time &gt; #{startTime}
        </if>
        <if test="startTime == null and  endTime != null">
            and register_time &lt; #{endTime}
        </if>
        <if test="startTime != null and  endTime != null">
            and register_time &gt; #{startTime} and register_time &lt; #{endTime}
        </if>

        <if test="type == 0">
            and u.true_name is NULL
        </if>
        <if test="type == 1">
            and u.true_name is not NULL
            and u.id not in (select DISTINCT (user_id) from bank_card )
        </if>
        <if test="type == 2">
            and u.id in (select DISTINCT (user_id) from bank_card )
            and u.id not in (select DISTINCT(user_id) from trade_record where type = 0)
        </if>
        <if test="type == 3">
            and u.id in(
            select DISTINCT(inv.user_id) from investment inv where 1=1

            <if test="investStartTime != null and investndTime == null">
                and inv.time &gt; #{investStartTime}
            </if>
            <if test="investStartTime == null and  investndTime != null">
                and inv.time &lt; #{investndTime}
            </if>
            <if test="investStartTime != null and  investndTime != null">
                and inv.time &gt; #{investStartTime} and inv.time &lt; #{investndTime}
            </if>
            )

        </if>

        <if test="keyword != null">
            and (u.username like '%${keyword}%' or u.true_name like '%${keyword}%' or u.phone like '%${keyword}%')
        </if>

        <if test="adminId != null">
            and cl.admin_id = ${adminId}
        </if>


        ORDER BY u.register_time desc limit #{start},#{limit}
    </select>

    <select id="listCount" resultType="int" parameterType="map">
        SELECT count(cl.id) from customer_list cl,user u,`user_admin` ua,`assets` a where cl.admin_id=ua.id and
        cl.user_id=u.id and u.id=a.user_id
        <if test="keyword != null">
            and (u.username like '%${keyword}%' or u.true_name like '%${keyword}%' or u.phone like '%${keyword}%')
        </if>


        <if test="startTime != null and endTime == null">
            and register_time &gt; #{startTime}
        </if>
        <if test="startTime == null and  endTime != null">
            and register_time &lt; #{endTime}
        </if>
        <if test="startTime != null and  endTime != null">
            and register_time &gt; #{startTime} and register_time &lt; #{endTime}
        </if>


        <if test="type == 0">
            and u.true_name is NULL
        </if>
        <if test="type == 1">
            and u.true_name is not NULL
            and u.id not in (select DISTINCT (user_id) from bank_card )
        </if>
        <if test="type == 2">
            and u.id in (select DISTINCT (user_id) from bank_card )
            and u.id not in (select DISTINCT(user_id) from trade_record where type = 0)
        </if>

        <if test="type == 3">
            and u.id in(
            select DISTINCT(inv.user_id) from investment inv where 1=1

            <if test="investStartTime != null and investndTime == null">
                and inv.time &gt; #{investStartTime}
            </if>
            <if test="investStartTime == null and  investndTime != null">
                and inv.time &lt; #{investndTime}
            </if>
            <if test="investStartTime != null and  investndTime != null">
                and inv.time &gt; #{investStartTime} and inv.time &lt; #{investndTime}
            </if>
            )

        </if>


        <if test="keyword != null">
            and (u.username like '%${keyword}%' or u.true_name like '%${keyword}%' or u.phone like '%${keyword}%')
        </if>

        <if test="adminId != null">
            and cl.admin_id = ${adminId}
        </if>


    </select>


    <select id="sumAmount" resultType="double" parameterType="map">
        select ROUND(sum(amount)/10000,2) from investment inv

        <if test="investType != null">
            right JOIN project p on inv.project_id = p.id where 1=1
            <if test="investType == 30 ">
                and inv.type=0
            </if>
            <if test="investType == 1 or investType == 2 ">
                and p.project_type=${investType}
            </if>
            <if test="investType ==3 ">
                and p.noob=1
            </if>
        </if>
        <if test="investType == null">
            where 1=1
        </if>
        and inv.user_id in (
        SELECT u.id from customer_list cl,user u,`user_admin` ua,`assets` a where cl.admin_id=ua.id and cl.user_id=u.id
        and u.id=a.user_id
        <if test="keyword != null">
            and (u.username like '%${keyword}%' or u.true_name like '%${keyword}%' or u.phone like '%${keyword}%')
        </if>


        <if test="startTime != null and endTime == null">
            and register_time &gt; #{startTime}
        </if>
        <if test="startTime == null and  endTime != null">
            and register_time &lt; #{endTime}
        </if>
        <if test="startTime != null and  endTime != null">
            and register_time &gt; #{startTime} and register_time &lt; #{endTime}
        </if>


        <if test="type == 0">
            and u.true_name is NULL
        </if>
        <if test="type == 1">
            and u.true_name is not NULL
            and u.id not in (select DISTINCT (user_id) from bank_card )
        </if>
        <if test="type == 2">
            and u.id in (select DISTINCT (user_id) from bank_card )
            and u.id not in (select DISTINCT(user_id) from trade_record where type = 0)
        </if>


        <if test="type == 3">
            and u.id in(
            select DISTINCT(inv.user_id) from investment inv where 1=1

            <if test="investStartTime != null and investndTime == null">
                and inv.time &gt; #{investStartTime}
            </if>
            <if test="investStartTime == null and  investndTime != null">
                and inv.time &lt; #{investndTime}
            </if>
            <if test="investStartTime != null and  investndTime != null">
                and inv.time &gt; #{investStartTime} and inv.time &lt; #{investndTime}
            </if>
            )

        </if>


        <if test="keyword != null">
            and (u.username like '%${keyword}%' or u.true_name like '%${keyword}%' or u.phone like '%${keyword}%')
        </if>

        <if test="adminId != null">
            and cl.admin_id = ${adminId}
        </if>


        )

    </select>


    <select id="statistics" resultType="map" parameterType="map">
        SELECT
            sum(CASE WHEN a.type = 0 AND limit_days = 30
                THEN a.amount
                ELSE 0 END) amount_30,
            sum(CASE WHEN a.type = 0 AND limit_days = 90
                THEN a.amount
                ELSE 0 END) amount_90,
            sum(CASE WHEN a.type = 0 AND limit_days = 180
                THEN a.amount
                ELSE 0 END) amount_180,
            sum(CASE WHEN a.type = 0 AND limit_days = 240
                THEN a.amount
                ELSE 0 END) amount_240,
            sum(CASE WHEN a.type = 0 AND limit_days = 270
                THEN a.amount
                ELSE 0 END) amount_270,
            sum(CASE WHEN a.type = 0 AND limit_days = 365
                THEN a.amount
                ELSE 0 END) amount_365,
            sum(CASE WHEN a.type = 10 AND limit_days = 30
                THEN a.amount
                ELSE 0 END) amount2_30,
            sum(CASE WHEN a.type = 10 AND limit_days = 90
                THEN a.amount
                ELSE 0 END) amount2_90,
            sum(CASE WHEN a.type = 10 AND limit_days = 180
                THEN a.amount
                ELSE 0 END) amount2_180,
            sum(CASE WHEN a.type = 10 AND limit_days = 240
                THEN a.amount
                ELSE 0 END) amount2_240,
            sum(CASE WHEN a.type = 10 AND limit_days = 270
                THEN a.amount
                ELSE 0 END) amount2_270,
            sum(CASE WHEN a.type = 10 AND limit_days = 365
                THEN a.amount
                ELSE 0 END) amount2_365,
            sum(amount)     allAmount

        FROM (

                 SELECT
                     p.limit_days,
                     tr.type,
                     sum(tr.amount) amount
                 FROM
                     customer_list cl,
                     trade_record tr,
                     investment inv,
                     project p
                 WHERE
                     cl.admin_id = #{adminId}
                     AND cl.user_id = tr.user_id
                     AND tr.source IN (0, 4)
                     AND tr.type IN (0, 10)
                     AND date_format(tr.time, '%Y-%m') = #{date}
                     AND tr.other_id = inv.id AND inv.project_id = p.id AND p.`parent_id` IS NULL
                 GROUP BY p.limit_days, tr.type
             ) a
    </select>

    <select id="statisticsList" parameterType="map" resultType="map">
        select * from
        (
        SELECT
        sum(case when a.type=0 and limit_days=15 then a.amount else 0 end) amount_15,
        sum(case when a.type=0 and limit_days=30 then a.amount else 0 end) amount_30,
        sum(case when a.type=0 and limit_days=90 then a.amount else 0 end) amount_90,
        sum(case when a.type=0 and limit_days=180 then a.amount else 0 end) amount_180,
        sum(case when a.type=0 and limit_days=360 then a.amount else 0 end) amount_360,
        true_name trueName,
        admin_id,
	    company_name
        from (
        select p.limit_days ,tr.type,sum(tr.amount) amount,ua.`true_name` ,cl.`admin_id`,CASE
							  WHEN ua.company='hxwg'  THEN '华夏文冠'
							  WHEN ua.company='hxwgcf'  THEN '财富中心'
							  WHEN ua.company IS NULL  THEN '鑫聚财'
							  ELSE ua.company
				          END AS company_name
        FROM
        customer_list cl,
        trade_record tr,
        investment inv,
        project p,

        user_admin ua
        WHERE
        cl.`admin_id`=ua.id
        AND cl.user_id = tr.user_id
        AND tr.source in (0,2,4)
        and tr.type in (0,10)
        <if test="id !=null">
            and admin_id = #{id}
        </if>
        AND tr.time &gt;=CONCAT(DATE_FORMAT(#{date},'%Y-%m'),'-01',' 00:00:00') and tr.time &lt;=CONCAT(#{date},' 23:59:59')
        and tr.other_id=inv.id and inv.project_id=p.id GROUP BY p.limit_days,tr.type,cl.`admin_id`
        ) a GROUP BY admin_id
        ) m
        LEFT JOIN
        (

        select
        case when n.ct is null then 0 else m.ctTz/n.ct end touzilv ,m.admin_id
        from
        (
        select count(*) ctTz,admin_id from customer_list cl ,
        (
        select DISTINCT(user_id) id from trade_record tr
        LEFT JOIN user u on u.id = tr.user_id where u.register_time &gt;=CONCAT(DATE_FORMAT(#{date},'%Y-%m'),'-01',' 00:00:00') and u.register_time &lt;=CONCAT(#{date},' 23:59:59') and tr.type = 0 and
        tr.time &gt;=CONCAT(DATE_FORMAT(#{date},'%Y-%m'),'-01',' 00:00:00') and tr.time &lt;=CONCAT(#{date},' 23:59:59')

        ) m1
        where cl.user_id = m1.id GROUP BY admin_id
        )
        m
        LEFT JOIN
        (
        select count(*) ct ,admin_id from customer_list cl ,user u where cl.user_id = u.id and
        u.register_time &gt;=CONCAT(DATE_FORMAT(#{date},'%Y-%m'),'-01',' 00:00:00') and u.register_time &lt;=CONCAT(#{date},' 23:59:59') GROUP BY admin_id
        ) n
        ON m.admin_id = n.admin_id
        )
        n on n.admin_id = m.admin_id


    </select>


    <select id="statisticsFirst" parameterType="map" resultType="map">
    	select a.admin_id,b.id,b.register_time,c.amount,c.limit_days,c.time from customer_list a
		join `user` b on a.user_id=b.id
		join (
			select m.user_id,DATE_FORMAT(m.time,'%Y-%m-%d') time,n.limit_days,sum(m.amount) amount from investment m join project n on m.project_id=n.id where time &gt;=CONCAT(DATE_FORMAT(#{date},'%Y-%m'),'-01',' 00:00:00') and time &lt;=CONCAT(#{date},' 23:59:59') GROUP BY m.user_id,DATE_FORMAT(m.time,'%Y-%m-%d'),n.limit_days
		) c on b.id=c.user_id and DATE_FORMAT(register_time,'%Y-%m-%d')=c.time
		left join user_invite d on b.id = d.invite_user_id
		where d.id is null
		<if test="id !=null">
            and a.admin_id = #{id}
        </if>
    </select>


    <select id="statisticsList1" parameterType="map" resultType="map">
        select * from
        (
        SELECT
        sum(case when a.type=0 and out_days=30 then a.amount else 0 end) amount2_300,
        sum(case when a.type=0 and out_days=90 then a.amount else 0 end) amount2_900,
        sum(case when a.type=10 and out_days=30 then a.amount else 0 end) amount2_3000,
        sum(case when a.type=10 and out_days=90 then a.amount else 0 end) amount2_9000,
        admin_id
        from (
        select tr.type,sum(tr.amount) amount,cl.`admin_id`,pt.out_days
        FROM
        customer_list cl,
        trade_record tr,
        investment inv,
        product pt,
        user_admin ua
        WHERE
        cl.`admin_id`=ua.id
        AND cl.user_id = tr.user_id
        AND tr.source =5
        and tr.type in (0,10)
        <if test="id !=null">
            and admin_id = #{id}
        </if>
        AND date_format(tr.time,'%Y-%m') =#{date}
        and tr.other_id=inv.id and inv.product_id=pt.id GROUP BY pt.out_days,tr.type,cl.`admin_id`
        ) a GROUP BY admin_id
        ) m
    </select>

    <select id="statisticsListFirst1" parameterType="map" resultType="map">
        select * from
        (
        SELECT
        sum(case when a.type=0 and out_days=30 then a.amount else 0 end) amount2_300,
        sum(case when a.type=0 and out_days=90 then a.amount else 0 end) amount2_900,
        sum(case when a.type=10 and out_days=30 then a.amount else 0 end) amount2_3000,
        sum(case when a.type=10 and out_days=90 then a.amount else 0 end) amount2_9000,
        sum(amount) allAmount,
        admin_id
        from (
        select tr.type,sum(tr.amount) amount,cl.`admin_id`,pt.out_days
        FROM
        customer_list cl,
        (select * from (select * from (select user_id,time ,amount,type,source,other_id from trade_record where type in
        (0,10) ORDER BY time ) s GROUP BY user_id) s where date_format(s.time,'%Y-%m') =#{date} ) tr,
        investment inv,
        product pt,
        user_admin ua
        WHERE
        cl.`admin_id`=ua.id
        AND cl.user_id = tr.user_id
        AND tr.source =5
        <if test="id !=null">
            and admin_id = #{id}
        </if>
        AND date_format(tr.time,'%Y-%m') =#{date}
        and tr.other_id=inv.id and inv.product_id=pt.id GROUP BY pt.out_days,tr.type,cl.`admin_id`
        ) a GROUP BY admin_id
        ) m
    </select>


    <select id="statisticsList2" parameterType="string" resultType="map">
        SELECT *
        FROM customer_list
    </select>

    <select id="customerUser" resultType="map">
        SELECT
            u.id,
            u.register_time,
            ua.true_name,
            u.username
        FROM user u RIGHT JOIN customer_list cl ON cl.user_id = u.id
            LEFT JOIN user_admin ua ON ua.id = cl.admin_id  where u.id is not null
    </select>

    <insert id="insertBatch" parameterType="map">
        insert into customer_list (admin_id, user_id, create_time)
        values
        <foreach collection="list" item="item" separator=",">
            (#{item.admin_id}, #{item.user_id} , #{item.create_time})
        </foreach>
    </insert>

    <insert id="insertBatch2" parameterType="map">
        insert into customer_list (admin_id, user_id)
        values
        <foreach collection="list" item="item" separator=",">
            ((select id from user_admin where true_name = #{item.admin_id}), #{item.user_id})
        </foreach>
    </insert>

    <insert id="insertBatch3" parameterType="map">
        insert into customer_list (admin_id, user_id)
        values
        <foreach collection="list" item="item" separator=",">
            ((select id from user_admin where true_name = #{item.userName}), #{item.customerNum})
        </foreach>
    </insert>

    <insert id="replaceBatch" parameterType="map">

        REPLACE into customer_list (admin_id, user_id, create_time)
        values
        <foreach collection="list" item="item" separator=",">
            (#{item.admin_id}, #{item.user_id} , #{item.create_time})
        </foreach>
    </insert>

    <select id="listDetail" parameterType="map" resultType="map">
        select u.id,inv.id invId,inv.amount,inv.time,u.true_name,u.phone,u.register_time,u.username,
        case when inv.product_id is not null then pt.`name`
        when inv.project_id is not null and p.project_type!=1 then p.title
        when inv.project_id is not null and p.project_type=1 then f.title
        end title,
        case when inv.product_id is not null then pt.out_days
        when inv.project_id is not null and p.project_type=0 then p.limit_days
        when inv.project_id is not null then f.limit_days
        when inv.project_id is not null and p.project_type=2 then 0
        else 0
        end limit_days,
        case when inv.product_id is not null then '安鑫赚'
        when inv.project_id is not null and p.project_type=0 and (p.noob =0 or p.noob =3) then '普通直投'
        when inv.project_id is not null and p.project_type=0 and p.noob =1 then '新手标'
        when inv.project_id is not null and p.project_type=0 and p.noob =2 then 'VIP标'
        when inv.project_id is not null and p.project_type=1 then '债权'
        when inv.project_id is not null and p.project_type=2 then '活期'
        else '其他'
        end leixing,
        case when DATEDIFF(date_format(inv.time,'%Y-%m-%d'),date_format( u.register_time ,'%Y-%m-%d'))>30 then '否' else
        '是' end flag
        from customer_list cl LEFT JOIN investment inv on inv.user_id = cl.user_id LEFT JOIN user u on u.id = cl.user_id
        LEFT JOIN product pt on pt.id = inv.product_id
        LEFT JOIN project p on p.id = inv.project_id LEFT JOIN project f on f.id = p.parent_id
        where
        <if test="id != null">
            cl.admin_id =#{id}
        </if>
        and inv.id is not null and u.status =0
        <if test="limit != null and start>-1">
            limit #{start} , #{limit}
        </if>
    </select>
    <select id="listDetailCount" parameterType="map" resultType="int">
        select count(*) from customer_list cl LEFT JOIN investment inv on inv.user_id = cl.user_id LEFT JOIN user u on
        u.id = cl.user_id LEFT JOIN product pt on pt.id = inv.product_id
        LEFT JOIN project p on p.id = inv.project_id LEFT JOIN project f on f.id = p.parent_id
        where
        <if test="id != null">
            cl.admin_id =#{id}
        </if>
        and inv.id is not null and u.status =0
        <if test="limit != null and start>-1">
            limit #{start} , #{limit}
        </if>
    </select>
    <select id="selectTrueNameByUserId" parameterType="map" resultType="string">
        select true_name from user_admin WHERE id = #{userId}
    </select>







    <select id="statisticsListByDate" parameterType="map" resultType="map">
        select * from
        (
        SELECT
        sum(case when a.type=0 and limit_days=15 then a.amount else 0 end) amount_15,
        sum(case when a.type=0 and limit_days=30 then a.amount else 0 end) amount_30,
        sum(case when a.type=0 and limit_days=60 then a.amount else 0 end) amount_60,
        sum(case when a.type=0 and limit_days=90 then a.amount else 0 end) amount_90,
        sum(case when a.type=0 and limit_days=120 then a.amount else 0 end) amount_120,
        sum(case when a.type=0 and limit_days=150 then a.amount else 0 end) amount_150,
        sum(case when a.type=0 and limit_days=180 then a.amount else 0 end) amount_180,
        sum(case when a.type=0 and limit_days=210 then a.amount else 0 end) amount_210,
        sum(case when a.type=0 and limit_days=240 then a.amount else 0 end) amount_240,
        sum(case when a.type=0 and limit_days=270 then a.amount else 0 end) amount_270,
        sum(case when a.type=0 and limit_days=300 then a.amount else 0 end) amount_300,
        sum(case when a.type=0 and limit_days=330 then a.amount else 0 end) amount_330,
        sum(case when a.type=0 and limit_days=360 then a.amount else 0 end) amount_365,
        sum(case when a.type=10 and limit_days=0 then a.amount else 0 end) amount2_0,
        sum(case when a.type=10 and limit_days=30 then a.amount else 0 end) amount2_30,
        sum(case when a.type=10 and limit_days=60 then a.amount else 0 end) amount2_60,
        sum(case when a.type=10 and limit_days=90 then a.amount else 0 end) amount2_90,
        sum(case when a.type=10 and limit_days=120 then a.amount else 0 end) amount2_120,
        sum(case when a.type=10 and limit_days=150 then a.amount else 0 end) amount2_150,
        sum(case when a.type=10 and limit_days=180 then a.amount else 0 end) amount2_180,
        sum(case when a.type=10 and limit_days=210 then a.amount else 0 end) amount2_210,
        sum(case when a.type=10 and limit_days=240 then a.amount else 0 end) amount2_240,
        sum(case when a.type=10 and limit_days=270 then a.amount else 0 end) amount2_270,
        sum(case when a.type=10 and limit_days=300 then a.amount else 0 end) amount2_300,
        sum(case when a.type=10 and limit_days=330 then a.amount else 0 end) amount2_330,
        sum(case when a.type=10 and limit_days=360 then a.amount else 0 end) amount2_365,
        sum(amount) allAmount,
        true_name trueName,
        admin_id
        from (
        select p.limit_days ,tr.type,sum(tr.amount) amount,ua.`true_name` ,cl.`admin_id`
        FROM
        customer_list cl,
        trade_record tr,
        investment inv,
        project p,

        user_admin ua
        WHERE
        cl.`admin_id`=ua.id
        AND cl.user_id = tr.user_id
        AND tr.source in (0,2,4)
        and tr.type in (0,10)
        <if test="id !=null">
            and admin_id = #{id}
        </if>
        AND date_format(tr.time,'%Y-%m-%d') =#{date}
        and tr.other_id=inv.id and inv.project_id=p.id GROUP BY p.limit_days,tr.type,cl.`admin_id`
        ) a GROUP BY admin_id
        ) m
        LEFT JOIN
        (

        select
        case when n.ct is null then 0 else m.ctTz/n.ct end touzilv ,m.admin_id
        from
        (
        select count(*) ctTz,admin_id from customer_list cl ,
        (
        select DISTINCT(user_id) id from trade_record tr
        LEFT JOIN user u on u.id = tr.user_id where date_format(u.register_time,'%Y-%m-%d') =#{date} and tr.type = 0 and
        date_format(tr.time,'%Y-%m-%d') =#{date}

        ) m1
        where cl.user_id = m1.id GROUP BY admin_id
        )
        m
        LEFT JOIN
        (
        select count(*) ct ,admin_id from customer_list cl ,user u where cl.user_id = u.id and
        date_format(u.register_time,'%Y-%m-%d') =#{date} GROUP BY admin_id
        ) n
        ON m.admin_id = n.admin_id
        )
        n on n.admin_id = m.admin_id


    </select>


    <select id="statisticsFirstByDate" parameterType="map" resultType="map">
        SELECT
        sum(case when a.type=0 and limit_days=15 then a.amount else 0 end) amount_15,
        sum(case when a.type=0 and limit_days=30 then a.amount else 0 end) amount_30,
        sum(case when a.type=0 and limit_days=60 then a.amount else 0 end) amount_60,
        sum(case when a.type=0 and limit_days=90 then a.amount else 0 end) amount_90,
        sum(case when a.type=0 and limit_days=120 then a.amount else 0 end) amount_120,
        sum(case when a.type=0 and limit_days=150 then a.amount else 0 end) amount_150,
        sum(case when a.type=0 and limit_days=180 then a.amount else 0 end) amount_180,
        sum(case when a.type=0 and limit_days=210 then a.amount else 0 end) amount_210,
        sum(case when a.type=0 and limit_days=240 then a.amount else 0 end) amount_240,
        sum(case when a.type=0 and limit_days=270 then a.amount else 0 end) amount_270,
        sum(case when a.type=0 and limit_days=300 then a.amount else 0 end) amount_300,
        sum(case when a.type=0 and limit_days=330 then a.amount else 0 end) amount_330,
        sum(case when a.type=0 and limit_days=360 then a.amount else 0 end) amount_365,
        sum(case when a.type= 0 and limit_days in(30,60,90,120,150,180,210,240,270,300,330,360) then a.amount else 0 end) allAmount,
        admin_id
        from (
        select p.limit_days ,tr.type,sum(IFNULL(tr.amount,0)) amount,ua.`true_name` ,cl.`admin_id`
        FROM
        customer_list cl,
        (select * from (
		select s.*, wx.code from (select * from (select user_id,time ,amount,type,source,other_id from trade_record where type =0
		        ORDER BY id ) s GROUP BY user_id) s
		LEFT JOIN wx_activity wx
		on s.user_id = wx.user_id
		 where date_format(s.time,'%Y-%m') =#{date} ) t_first where t_first.`code` != 998) tr,
        investment inv,
        project p,
        user_admin ua
        WHERE
        cl.`admin_id`=ua.id
        AND cl.user_id = tr.user_id
        <if test="adminId !=null">
            and admin_id = #{adminId}
        </if>
        AND date_format(tr.time,'%Y-%m-%d') =#{date}
        and tr.other_id=inv.id and inv.project_id=p.id GROUP BY p.limit_days,tr.type,cl.`admin_id`
        ) a GROUP BY admin_id
    </select>


    <select id="statisticsListByDate1" parameterType="map" resultType="map">
        select * from
        (
        SELECT
        sum(case when a.type=0 and out_days=30 then a.amount else 0 end) amount2_300,
        sum(case when a.type=0 and out_days=90 then a.amount else 0 end) amount2_900,
        sum(case when a.type=10 and out_days=30 then a.amount else 0 end) amount2_3000,
        sum(case when a.type=10 and out_days=90 then a.amount else 0 end) amount2_9000,
        admin_id
        from (
        select tr.type,sum(tr.amount) amount,cl.`admin_id`,pt.out_days
        FROM
        customer_list cl,
        trade_record tr,
        investment inv,
        product pt,
        user_admin ua
        WHERE
        cl.`admin_id`=ua.id
        AND cl.user_id = tr.user_id
        AND tr.source =5
        and tr.type in (0,10)
        <if test="adminId !=null">
            and admin_id = #{adminId}
        </if>
        AND date_format(tr.time,'%Y-%m-%d') =#{date}
        and tr.other_id=inv.id and inv.product_id=pt.id GROUP BY pt.out_days,tr.type,cl.`admin_id`
        ) a GROUP BY admin_id
        ) m
    </select>

    <select id="statisticsListFirstByDate1" parameterType="map" resultType="map">
        select * from
        (
        SELECT
        sum(case when a.type=0 and out_days=30 then a.amount else 0 end) amount2_300,
        sum(case when a.type=0 and out_days=90 then a.amount else 0 end) amount2_900,
        sum(case when a.type=10 and out_days=30 then a.amount else 0 end) amount2_3000,
        sum(case when a.type=10 and out_days=90 then a.amount else 0 end) amount2_9000,
        sum(amount) allAmount,
        admin_id
        from (
        select tr.type,sum(tr.amount) amount,cl.`admin_id`,pt.out_days
        FROM
        customer_list cl,
        (select * from (select * from (select user_id,time ,amount,type,source,other_id from trade_record where type in
        (0,10) ORDER BY time ) s GROUP BY user_id) s where date_format(s.time,'%Y-%m-%d') =#{date} ) tr,
        investment inv,
        product pt,
        user_admin ua
        WHERE
        cl.`admin_id`=ua.id
        AND cl.user_id = tr.user_id
        AND tr.source =5
        <if test="adminId !=null">
            and admin_id = #{adminId}
        </if>
        AND date_format(tr.time,'%Y-%m-%d') =#{date}
        and tr.other_id=inv.id and inv.product_id=pt.id GROUP BY pt.out_days,tr.type,cl.`admin_id`
        ) a GROUP BY admin_id
        ) m
    </select>

	<select id="queryAchievement" parameterType="map" resultType="map">
	    select b.true_name,
		CASE
									  WHEN b.company='hxwg'  THEN '华夏文冠'
									  WHEN b.company='hxwgcf'  THEN '华夏财富'
									  WHEN b.company IS NULL  THEN '鑫聚财'
									  ELSE b.company
						          END AS company_name,
		ifnull(c.customeNum,0) customeNum,ifnull(d.investNum,0) investNum,ifnull(e.dNum,0) dNum,ifnull(f.zNum,0) zNum,ifnull(g.xNum,0) xNum,
		ifnull(e.damount,0) damount,ifnull(f.zamount,0) zamount,ifnull(g.tamount,0) tamount from customer_list a
		left join user_admin b on a.admin_id=b.id
		LEFT JOIN (
			select b.admin_id,count(1) customeNum from assets a join customer_list b on a.user_id=b.user_id where a.total_investment_amount>0 GROUP BY b.admin_id
		) c on a.admin_id=c.admin_id
		LEFT JOIN (
			select b.admin_id,count(1) investNum from assets a join customer_list b on a.user_id=b.user_id where a.uncollect_capital>0 GROUP BY b.admin_id
		) d on a.admin_id=d.admin_id
		<!-- 定期回款客户数 -->
		LEFT JOIN (
			select b.admin_id,count(DISTINCT a.user_id) dNum,sum(a.capital_amount) damount from interest a join customer_list b on a.user_id=b.user_id where a.date>=CONCAT(DATE_FORMAT(#{date},'%Y-%m'),'-01') and a.date&lt;=CONCAT(#{date}) and a.investment_detail_id is null GROUP BY b.admin_id
		) e on a.admin_id=e.admin_id
		<!-- 智投回款客户数 -->
		LEFT JOIN (
			select c.admin_id,count(DISTINCT a.user_id) zNum,sum(a.amount) zamount from investment a join monthly_gain_project_package b on a.package_id=b.id join customer_list c on a.user_id=c.user_id where DATEDIFF(#{date},a.time)>b.limit_days and a.type in (8,9) GROUP BY c.admin_id
		) f on a.admin_id=f.admin_id
		left JOIN (
			select b.admin_id,count(DISTINCT a.user_id) xNum,sum(a.amount) tamount from investment a join customer_list b on a.user_id=b.user_id where a.user_id in (
				select DISTINCT a.user_id from interest a join customer_list b on a.user_id=b.user_id where a.date>=CONCAT(DATE_FORMAT(#{date},'%Y-%m'),'-01') and a.date&lt;=CONCAT(#{date}) and a.investment_detail_id is null
				UNION
				select DISTINCT a.user_id from investment a join monthly_gain_project_package b on a.package_id=b.id join customer_list c on a.user_id=c.user_id where DATEDIFF(#{date},a.time)>b.limit_days and a.type in (8,9)
			) and a.time>=CONCAT(DATE_FORMAT(#{date},'%Y-%m'),'-01',' 00:00:00') and a.time&lt;=CONCAT(#{date},' 23:59:59') GROUP BY b.admin_id
		) g on a.admin_id=g.admin_id
		where b.true_name is not null
		<if test="adminId !=null">
            and admin_id = #{adminId}
        </if>
		GROUP BY a.admin_id
    </select>

    <select id="statisticsYyyList" parameterType="map" resultType="map">
    	select
        n.admin_id,
        s.true_name trueName,
        CASE
							  WHEN s.company='hxwg'  THEN '华夏文冠'
							  WHEN s.company='hxwgcf'  THEN '财富中心'
							  WHEN s.company IS NULL  THEN '鑫聚财'
							  ELSE s.company
				          END AS company_name,
        ifnull(sum(CASE WHEN m.limit_days = 7 THEN m.amount ELSE 0 END),0) yyy_amount_7,
		ifnull(sum(CASE WHEN m.limit_days = 30 THEN m.amount ELSE 0 END),0) yyy_amount_30,
		ifnull(sum(CASE WHEN m.limit_days = 90 THEN m.amount ELSE 0 END),0) yyy_amount_90,
		ifnull(sum(CASE WHEN m.limit_days = 180 THEN m.amount ELSE 0 END),0) yyy_amount_180,
		ifnull(sum(CASE WHEN m.limit_days = 7 THEN TRUNCATE(m.amount/365*m.days,2) ELSE 0 END),0) yyy_nh_amount_7,
		ifnull(sum(CASE WHEN m.limit_days = 30 THEN TRUNCATE(m.amount/365*m.days,2) ELSE 0 END),0) yyy_nh_amount_30,
		ifnull(sum(CASE WHEN m.limit_days = 90 THEN TRUNCATE(m.amount/365*m.days,2) ELSE 0 END),0) yyy_nh_amount_90,
		ifnull(sum(CASE WHEN m.limit_days = 180 THEN TRUNCATE(m.amount/365*m.days,2) ELSE 0 END),0) yyy_nh_amount_180
		from (
			select b.limit_days,a.amount amount,a.user_id,a.time,a.success_out_time,
				case when DATEDIFF(#{date},a.time)>b.limit_days THEN
					(DATEDIFF(#{date},a.time)-b.limit_days)
				ELSE
					0
				end days
			from investment a join monthly_gain_project_package b on a.package_id=b.id where a.type in (8,9) and a.success_out_time is null and a.time&lt;=CONCAT(#{date},' 23:59:59')
			UNION
			select b.limit_days,a.amount amount,a.user_id,a.time,a.success_out_time,
				case when DATEDIFF(a.success_out_time,a.time)>b.limit_days THEN
					(DATEDIFF(a.success_out_time,a.time)-b.limit_days)
				ELSE
					0
				end days
			from investment a join monthly_gain_project_package b on a.package_id=b.id where a.type in (8,9) and a.success_out_time is not null and a.time&lt;=CONCAT(#{date},' 23:59:59') and a.success_out_time>=CONCAT(DATE_FORMAT(#{date},'%Y-%m'),'-01',' 00:00:00')
		) m left join customer_list n on m.user_id=n.user_id
		join user_admin s on n.admin_id = s.id
		where 1=1
		<if test="adminId !=null">
            and n.admin_id = #{adminId}
        </if>
        group by n.admin_id
    </select>


    <select id="statisticsYyyFirst" parameterType="map" resultType="map">
    	select a.admin_id,b.id,b.register_time,c.amount,c.limit_days,c.time,c.nh from customer_list a
		join `user` b on a.user_id=b.id
		join (
			select j.user_id,j.limit_days,j.time,TRUNCATE(sum(j.amount/365*j.days),2) nh,sum(j.amount) amount from (
				select b.limit_days,a.amount amount,a.user_id,a.time,a.success_out_time,
				case when DATEDIFF(#{date},a.time)>b.limit_days THEN
					(DATEDIFF(#{date},a.time)-b.limit_days)
				ELSE
					0
				end days
			from investment a join monthly_gain_project_package b on a.package_id=b.id where a.type in (8,9) and a.success_out_time is null and a.time&lt;=CONCAT(#{date},' 23:59:59')
			UNION
			select b.limit_days,a.amount amount,a.user_id,a.time,a.success_out_time,
				case when DATEDIFF(a.success_out_time,a.time)>b.limit_days THEN
					(DATEDIFF(a.success_out_time,a.time)-b.limit_days)
				ELSE
					0
				end days
			from investment a join monthly_gain_project_package b on a.package_id=b.id where a.type in (8,9) and a.success_out_time is not null and a.time&lt;=CONCAT(#{date},' 23:59:59') and a.success_out_time>=CONCAT(DATE_FORMAT(#{date},'%Y-%m'),'-01',' 00:00:00')
			) j GROUP BY j.user_id,DATE_FORMAT(j.time,'%Y-%m-%d'),j.limit_days
		) c on b.id=c.user_id and DATE_FORMAT(b.register_time,'%Y-%m-%d')=c.time
		left join user_invite d on b.id = d.invite_user_id
		where d.id is null
		<if test="adminId !=null">
            and a.admin_id = #{adminId}
       	</if>
       	group by a.admin_id
    </select>

    <select id="statisticsNewOld" parameterType="map" resultType="map">
    select
		f.admin_id,
		TRUNCATE(sum(case when f.id is not null then f.amount else 0 end),2) zhuanamount,
		TRUNCATE(sum(case when f.id is not null then f.nh else 0 end),2) zhuannh,
		TRUNCATE(sum(case when f.id is null and f.invest_num=0 then f.amount-ifnull(f.register_amount,0) else 0 end),2) newamount,
		TRUNCATE(sum(case when f.id is null and f.invest_num=0 then f.nh-ifnull(f.register_nh,0) else 0 end),2) newnh,
		TRUNCATE(sum(case when f.id is null and (f.invest_num!=0 or f.invest_num is null) then f.amount-ifnull(f.register_amount,0) else 0 end),2) oldamount,
		TRUNCATE(sum(case when f.id is null and (f.invest_num!=0 or f.invest_num is null) then f.nh-ifnull(f.register_nh,0) else 0 end),2) oldnh,
		TRUNCATE(sum(f.register_amount),2),
		TRUNCATE(sum(f.register_nh),2)
		from (
		select c.admin_id,b.id,u.user_id,u.amount,u.nh,d.register_amount,d.register_nh,e.invest_num from (
			select m.user_id,sum(m.amount) amount,sum(m.nh) nh from (
				select y.limit_days,y.amount,y.user_id,y.time,y.days,(y.amount*(y.limit_days+y.days)/365) nh from (
					select b.limit_days,a.amount amount,a.user_id,a.time,a.success_out_time,
						case when DATEDIFF(#{date},a.time)>b.limit_days THEN
							(DATEDIFF(#{date},a.time)-b.limit_days)
						ELSE
							0
						end days
					from investment a join monthly_gain_project_package b on a.package_id=b.id where a.type in (8,9) and a.success_out_time is null and a.time&lt;=CONCAT(#{date},' 23:59:59')
					UNION
					select b.limit_days,a.amount amount,a.user_id,a.time,a.success_out_time,
						case when DATEDIFF(a.success_out_time,a.time)>b.limit_days THEN
							(DATEDIFF(a.success_out_time,a.time)-b.limit_days)
						ELSE
							0
						end days
					from investment a join monthly_gain_project_package b on a.package_id=b.id where a.type in (8,9) and a.success_out_time is not null and a.time&lt;=CONCAT(#{date},' 23:59:59') and a.success_out_time>=CONCAT(DATE_FORMAT(#{date},'%Y-%m'),'-01',' 00:00:00')
					UNION
					select case when b.limit_days=0 then c.limit_days else b.limit_days end limit_days,a.amount,a.user_id,a.time,null,0 from investment a join project b on a.project_id=b.id
					left join project c on b.parent_id=c.id
					where a.type=0 and b.parent_id is null and a.time>=CONCAT(DATE_FORMAT(#{date},'%Y-%m'),'-01',' 00:00:00') and a.time&lt;=CONCAT(#{date},' 23:59:59')
				) y
			)m GROUP BY m.user_id
		) u
		LEFT JOIN user_invite b on u.user_id=b.invite_user_id
		LEFT JOIN customer_list c on u.user_id=c.user_id
		left join (
			<!-- 注册当日金额&年化 -->
			select e.user_id,sum(e.amount) register_amount,sum(nh) register_nh from (
			select case when a.type=0 then case when c.limit_days=0 then e.limit_days else c.limit_days end else d.limit_days end,a.amount,a.user_id,case when a.type=0 then a.amount*case when c.limit_days=0 then e.limit_days else c.limit_days end/365 else a.amount*d.limit_days/365 end nh from investment a join `user` b on a.user_id=b.id
			LEFT JOIN project c on a.project_id=c.id
			left join project e on c.parent_id=e.id
			left join monthly_gain_project_package d on a.package_id=d.id
			where a.time >=CONCAT(DATE_FORMAT(#{date},'%Y-%m'),'-01',' 00:00:00') and a.time &lt;=CONCAT(#{date},' 23:59:59') and DATE_FORMAT(a.time,'%Y-%m-%d')=DATE_FORMAT(b.register_time,'%Y-%m-%d')
			) e GROUP BY e.user_id
		) d on u.user_id=d.user_id
		left join (
			<!--  注册之日到当月1号之前是否有投资 -->
			select a.user_id,count(1) invest_num from investment a join `user` b on a.user_id=b.id where a.time >=b.register_time and a.time &lt;CONCAT(DATE_FORMAT(#{date},'%Y-%m'),'-01',' 00:00:00') and DATE_FORMAT(b.register_time,'%Y-%m-%d')!=DATE_FORMAT(a.time,'%Y-%m-%d')
			GROUP BY a.user_id
		) e on u.user_id=e.user_id
	) f where 1=1
	<if test="adminId !=null">
        and f.admin_id = #{adminId}
   	</if>
	GROUP BY f.admin_id
	</select>
</mapper>
