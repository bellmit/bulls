<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.goochou.p2b.dao.ActivityMapper">
  <resultMap id="BaseResultMap" type="com.goochou.p2b.model.Activity">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu May 09 16:51:32 CST 2019.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="upload_id" jdbcType="INTEGER" property="uploadId" />
    <result column="descript" jdbcType="VARCHAR" property="descript" />
    <result column="start_time" jdbcType="TIMESTAMP" property="startTime" />
    <result column="end_time" jdbcType="DATE" property="endTime" />
    <result column="link" jdbcType="VARCHAR" property="link" />
    <result column="status" jdbcType="INTEGER" property="status" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu May 09 16:51:32 CST 2019.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu May 09 16:51:32 CST 2019.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu May 09 16:51:32 CST 2019.
    -->
    id, name, upload_id, descript, start_time, end_time, link, status
  </sql>
  <select id="selectByExample" parameterType="com.goochou.p2b.model.ActivityExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu May 09 16:51:32 CST 2019.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from activity
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart&gt;-1">
      limit ${limitStart} , ${limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu May 09 16:51:32 CST 2019.
    -->
    select 
    <include refid="Base_Column_List" />
    from activity
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu May 09 16:51:32 CST 2019.
    -->
    delete from activity
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.goochou.p2b.model.ActivityExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu May 09 16:51:32 CST 2019.
    -->
    delete from activity
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyProperty="id" parameterType="com.goochou.p2b.model.Activity" useGeneratedKeys="true">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu May 09 16:51:32 CST 2019.
    -->
    insert into activity (id, name, upload_id, 
      descript, start_time, end_time, 
      link, status)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{uploadId,jdbcType=INTEGER}, 
      #{descript,jdbcType=VARCHAR}, #{startTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=DATE}, 
      #{link,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.goochou.p2b.model.Activity">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu May 09 16:51:32 CST 2019.
    -->
    insert into activity
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="uploadId != null">
        upload_id,
      </if>
      <if test="descript != null">
        descript,
      </if>
      <if test="startTime != null">
        start_time,
      </if>
      <if test="endTime != null">
        end_time,
      </if>
      <if test="link != null">
        link,
      </if>
      <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="uploadId != null">
        #{uploadId,jdbcType=INTEGER},
      </if>
      <if test="descript != null">
        #{descript,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null">
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        #{endTime,jdbcType=DATE},
      </if>
      <if test="link != null">
        #{link,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.goochou.p2b.model.ActivityExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu May 09 16:51:32 CST 2019.
    -->
    select count(*) from activity
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu May 09 16:51:32 CST 2019.
    -->
    update activity
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.uploadId != null">
        upload_id = #{record.uploadId,jdbcType=INTEGER},
      </if>
      <if test="record.descript != null">
        descript = #{record.descript,jdbcType=VARCHAR},
      </if>
      <if test="record.startTime != null">
        start_time = #{record.startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.endTime != null">
        end_time = #{record.endTime,jdbcType=DATE},
      </if>
      <if test="record.link != null">
        link = #{record.link,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu May 09 16:51:32 CST 2019.
    -->
    update activity
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      upload_id = #{record.uploadId,jdbcType=INTEGER},
      descript = #{record.descript,jdbcType=VARCHAR},
      start_time = #{record.startTime,jdbcType=TIMESTAMP},
      end_time = #{record.endTime,jdbcType=DATE},
      link = #{record.link,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.goochou.p2b.model.Activity">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu May 09 16:51:32 CST 2019.
    -->
    update activity
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="uploadId != null">
        upload_id = #{uploadId,jdbcType=INTEGER},
      </if>
      <if test="descript != null">
        descript = #{descript,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null">
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        end_time = #{endTime,jdbcType=DATE},
      </if>
      <if test="link != null">
        link = #{link,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.goochou.p2b.model.Activity">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu May 09 16:51:32 CST 2019.
    -->
    update activity
    set name = #{name,jdbcType=VARCHAR},
      upload_id = #{uploadId,jdbcType=INTEGER},
      descript = #{descript,jdbcType=VARCHAR},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=DATE},
      link = #{link,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
    <select id="querys" parameterType="int" resultType="map">
        SELECT
        a.*, u.path
        FROM
        activity a
        LEFT JOIN upload u ON a.upload_id = u.id
        WHERE 1=1
        <if test="status != null">
            and a.status = #{status}
        </if>
        ORDER BY a.start_time desc
        <if test="start != null and limit != null">
            limit #{start},#{limit}
        </if>
    </select>

    <select id="query" parameterType="int" resultType="com.goochou.p2b.model.Activity">
        SELECT
        a.*, u.path
        FROM
        activity a
        LEFT JOIN upload u ON a.upload_id = u.id
        WHERE 1=1
        <if test="status != null">
            and a.status = #{status}
        </if>
        <if test="type != null">
            <if test="type == 1">
                and a.end_time <![CDATA[  >=  ]]> CURDATE()
            </if>
            <if test="type == 0">
                and a.end_time &lt;CURDATE()
            </if>
        </if>
        ORDER BY a.start_time desc
        <if test="start != null and limit != null">
            limit #{start},#{limit}
        </if>
    </select>

    <select id="queryCount" resultType="long">
        SELECT
        count(*)
        FROM
        activity a
        LEFT JOIN upload u ON a.upload_id = u.id
        WHERE 1=1
        <if test="status != null">
            and a.status = #{status}
        </if>
    </select>

    <select id="detail" parameterType="int" resultType="map">
        SELECT
            ac.*,
            u.path
        FROM activity ac
            LEFT JOIN upload u ON ac.upload_id = u.id
        WHERE ac.id = #{id}
    </select>

    <select id="queryByName" parameterType="java.lang.String" resultMap="BaseResultMap">
        SELECT *
        FROM activity
        WHERE name = #{name} AND status = 1
    </select>

    <select id="rateBreakList" resultType="map">
        SELECT
        u.true_name,
        u.phone,
        a.huo_investment_amount,
        (
        CASE
        WHEN ar.type = 0 THEN
        '银牌'
        ELSE
        '金牌'
        END
        ) pai,
        ar.create_time,
        (
        CASE
        WHEN ar. STATUS = 0 THEN
        '启用'
        ELSE
        '失效'
        END
        ) tai
        FROM
        activity_rate ar
        LEFT JOIN user u ON ar.user_id = u.id
        LEFT JOIN assets a ON a.user_id = ar.user_id
        <if test="keyword != null">
            where (u.true_name like '%${keyword}%' or u.phone like '%${keyword}%')
        </if>
        order by ar.create_time desc
        <if test="start != null and limit != null">
            limit ${start} , ${limit}
        </if>
    </select>

    <select id="rateBreakListCount" resultType="java.lang.Integer">
        SELECT
        count(*)
        FROM
        activity_rate ar
        LEFT JOIN user u ON ar.user_id = u.id
        LEFT JOIN assets a ON a.user_id = ar.user_id
        <if test="keyword != null">
            where (u.true_name like '%${keyword}%' or u.phone like '%${keyword}%')
        </if>
    </select>

    <select id="selectRegularActivityList" parameterType="java.lang.String" resultType="map">
        SELECT
            pli.*,
            IFNULL(ili.investId, 0) investId
        FROM (
                 SELECT *
                 FROM project p
                 WHERE p.project_type = 0 AND p.status NOT IN (0, 1) AND p.noob = 2
             ) pli LEFT JOIN (
                                 SELECT
                                     i.id investId,
                                     pt.id
                                 FROM investment i
                                     LEFT JOIN project pt ON pt.id = i.project_id
                                 WHERE i.user_id = #{userId,jdbcType=INTEGER} AND pt.project_type = 0 AND
                                       pt.status NOT IN (0, 1) AND pt.noob = 2
                             ) ili ON pli.id = ili.id
    </select>

    <select id="selectAll" resultType="com.goochou.p2b.model.Activity">
        SELECT *
        FROM activity
        ORDER BY id DESC
    </select>

    <select id="selectInvestmentActivity" parameterType="map" resultType="map">
        SELECT
            (@rowNO := @rowNo + 1) AS ranking,
            b.*
        FROM (
                 SELECT
                     a.*,
                     u.username
                 FROM (
                          SELECT
                              i.user_id,
                              sum(i.amount) totalAmount
                          FROM investment i
                              LEFT JOIN project p ON p.id = i.project_id
                          WHERE p.parent_id IS NULL AND p.noob = 0 AND p.project_type = 0 AND p.limit_days <![CDATA[ >= ]]>90
                                AND date_format(i.time, '%Y-%m-%d') BETWEEN date_format(#{startTime},
                                                                                        '%Y-%m-%d') AND date_format(
                                  #{endTime}, '%Y-%m-%d')
                          GROUP BY i.user_id
                      ) a
                     LEFT JOIN user u ON u.id = a.user_id
                 WHERE u.`status` = 0
                 ORDER BY a.totalAmount DESC) b, (SELECT @rowNO := 0) c
    </select>

    <select id="selectAppleActivity" parameterType="map" resultType="double">
        SELECT sum(i.amount) totalAmount
        FROM investment i
            LEFT JOIN project p ON p.id = i.project_id
        WHERE i.user_id = #{userId,jdbcType=INTEGER} AND p.parent_id IS NULL AND p.limit_days &gt;= #{limitDays} AND
              i.type = 0 AND p.noob = 0
              AND
              date_format(i.time, '%Y-%m-%d') BETWEEN date_format(#{startTime}, '%Y-%m-%d') AND date_format(#{endTime},
                                                                                                            '%Y-%m-%d')
    </select>

    <select id="selectAppleActivity2" parameterType="map" resultType="double">
        SELECT sum(i.amount) totalAmount
        FROM investment i
            LEFT JOIN project p ON p.id = i.project_id
        WHERE i.user_id = #{userId,jdbcType=INTEGER} AND p.parent_id IS NULL AND p.limit_days = #{limitDays} AND
              i.type = 0 AND p.noob = 0
              AND
              date_format(i.time, '%Y-%m-%d') BETWEEN date_format(#{startTime}, '%Y-%m-%d') AND date_format(#{endTime},
                                                                                                            '%Y-%m-%d')
    </select>


    <select id="selectAppleActivityUserList" parameterType="map" resultType="map">
        select ii.*,lg.`name`,lr.time,lr.remark,concat(ua.remarks,ua.detail) address from (
        select sum(i.amount) totalAmount,i.user_id,u.true_name,u.phone,u.register_time from investment i
        left join user u on i.user_id=u.id
        left join project p on i.project_id=p.id
        where u.`status`=0 and date_format(i.time,'%Y-%m-%d') between date_format(#{startTime},'%Y-%m-%d') and
        date_format(#{endTime},'%Y-%m-%d')
        <if test="keyword != null">
            and (u.username like '%${keyword}%' or u.true_name like '%${keyword}%' or u.phone like '%${keyword}%')
        </if>
        and p.parent_id is null and p.project_type=0 and p.limit_days=#{limitDays} GROUP BY i.user_id
        )ii
        left join lottery_record lr on lr.user_id=ii.user_id
        left join lottery_gift lg on lr.gift_id=lg.id
        left join user_address ua on ii.user_id=ua.user_id where lr.activity_id=#{activityId}
        <if test="keyword1 != null">
            and lg.name like '%${keyword1}%'
        </if>
        <if test="keyword2 != null">
            and date_format(lr.time,'%Y-%m-%d')=date_format(#{keyword2},'%Y-%m-%d')
        </if>
        <if test="start != null and limit != null">
            limit ${start} , ${limit}
        </if>
    </select>

    <select id="selectAppleActivityUserCount" parameterType="map" resultType="int">
        select count(*) from (
        select sum(i.amount) totalAmount,i.user_id,u.true_name,u.phone,u.register_time from investment i
        left join user u on i.user_id=u.id
        left join project p on i.project_id=p.id
        where u.`status`=0 and date_format(i.time,'%Y-%m-%d') between date_format(#{startTime},'%Y-%m-%d') and
        date_format(#{endTime},'%Y-%m-%d')
        <if test="keyword != null">
            and (u.username like '%${keyword}%' or u.true_name like '%${keyword}%' or u.phone like '%${keyword}%')
        </if>
        and p.parent_id is null and p.project_type=0 and p.limit_days=#{limitDays} GROUP BY i.user_id
        )ii
        left join lottery_record lr on lr.user_id=ii.user_id
        where lr.activity_id=#{activityId}
    </select>


    <select id="selectWeekInvestmentActivity" parameterType="map" resultType="map">
        SELECT
            (@rowNO := @rowNo + 1) AS ranking,
            b.*
        FROM (
                 SELECT
                     a.*,
                     u.phone
                 FROM (
                          SELECT
                              i.user_id,
                              i.amount totalAmount,
                              i.time   time
                          FROM investment i
                              LEFT JOIN project p ON p.id = i.project_id
                          WHERE p.parent_id IS NULL AND p.noob = 0 AND p.project_type = 0
                                AND date_format(i.time, '%Y-%m-%d') BETWEEN date_format(#{startTime},
                                                                                        '%Y-%m-%d') AND date_format(
                                  #{endTime}, '%Y-%m-%d')
                      ) a
                     LEFT JOIN user u ON u.id = a.user_id
                 WHERE u.`status` = 0
                 ORDER BY a.time DESC, a.totalAmount DESC) b, (SELECT @rowNO := 0) c
    </select>

    <select id="selectWeekInvestmentActivityByUserId" parameterType="map" resultType="map">
        SELECT
            (@rowNO := @rowNo + 1) AS ranking,
            b.*
        FROM (
                 SELECT
                     a.*,
                     u.phone
                 FROM (
                          SELECT
                              i.user_id,
                              sum(i.amount) totalAmount,
                              i.time        time
                          FROM investment i
                              LEFT JOIN project p ON p.id = i.project_id
                          WHERE p.parent_id IS NULL AND p.noob = 0 AND p.project_type = 0
                                AND date_format(i.time, '%Y-%m-%d') BETWEEN date_format(#{startTime},
                                                                                        '%Y-%m-%d') AND date_format(
                                  #{endTime}, '%Y-%m-%d')
                          GROUP BY i.user_id
                      ) a
                     LEFT JOIN user u ON u.id = a.user_id
                 WHERE u.`status` = 0 AND u.id = #{userid}
                 ORDER BY a.time DESC, a.totalAmount DESC) b, (SELECT @rowNO := 0) c
    </select>

    <select id="selectWeekInvestmentAward" parameterType="map" resultType="map">
        select (@rowNO := @rowNo+1) AS ranking,b.*,floor(b.totalAmount/10000)*50 jingdong from (
        select a.*,u.phone,u.true_name,u.username,u.address,u.register_time from (
        select i.user_id,sum(i.amount) totalAmount ,i.time time from investment i
        left join project p on p.id=i.project_id
        where p.parent_id is null and p.noob=0 and p.project_type=0
        and date_format(i.time,'%Y-%m-%d') between date_format(#{startTime},'%Y-%m-%d') and
        date_format(#{endTime},'%Y-%m-%d') group by i.user_id having SUM(amount)&gt;=10000
        ) a
        left join user u on u.id=a.user_id where u.`status`=0
        <if test="keyword != null">
            and (u.username like '%${keyword}%' or u.true_name like '%${keyword}%' or u.phone like '%${keyword}%')
        </if>

        order by a.totalAmount desc) b ,(select @rowNO :=0) c
    </select>


    <select id="countWeekInvestmentAward" parameterType="map" resultType="int">
        select count(*) from (
        select a.*,u.phone,u.true_name,u.username,u.address,u.register_time from (
        select i.user_id,sum(i.amount) totalAmount ,i.time time from investment i
        left join project p on p.id=i.project_id
        where p.parent_id is null and p.noob=0 and p.project_type=0
        and date_format(i.time,'%Y-%m-%d') between date_format(#{startTime},'%Y-%m-%d') and
        date_format(#{endTime},'%Y-%m-%d') group by i.user_id having SUM(amount)&gt;=10000
        ) a
        left join user u on u.id=a.user_id where u.`status`=0
        <if test="keyword != null">
            and (u.username like '%${keyword}%' or u.true_name like '%${keyword}%' or u.phone like '%${keyword}%')
        </if>

        order by a.totalAmount desc) b ,(select @rowNO :=0) c
    </select>


    <select id="selectHongbaoInvestmentAward" parameterType="map" resultType="map">
        SELECT
            u.id,
            u.true_name,
            u.phone,
            h.descript,
            h.send_time,
            h.amount,
            i.amount amonutInv,
            p.limit_days,
            p.annualized
        FROM hongbao h
            LEFT JOIN hongbao_redeem hr ON hr.id = h.redeem_id
            LEFT JOIN user u ON u.id = h.user_id
            LEFT JOIN investment i ON i.hongbao_id = h.id
            LEFT JOIN project p ON p.id = i.project_id
        WHERE date_format(h.send_time, '%Y-%m-%d') BETWEEN date_format(#{startTime}, '%Y-%m-%d') AND date_format(
                #{endTime}, '%Y-%m-%d') AND hr.id = 33
        ORDER BY u.true_name
        LIMIT ${start}, ${limit}
    </select>


    <select id="countHongbaoInvestmentAward" parameterType="map" resultType="int">
        SELECT count(*)
        FROM hongbao h
            LEFT JOIN hongbao_redeem hr ON hr.id = h.redeem_id
            LEFT JOIN user u ON u.id = h.user_id
            LEFT JOIN investment i ON i.hongbao_id = h.id
            LEFT JOIN project p ON p.id = i.project_id
        WHERE date_format(h.send_time, '%Y-%m-%d') BETWEEN date_format(#{startTime}, '%Y-%m-%d') AND
              date_format(#{endTime}, '%Y-%m-%d') AND hr.id = 33
        ORDER BY u.true_name
    </select>


    <select id="selectJingdongInvestmentAward" parameterType="map" resultType="map">
        select a.amount totalAmount,a.limit_days, u.phone,u.true_name,u.username,u.address,u.register_time from user u
        LEFT JOIN (
        select p.limit_days ,i.user_id,sum(i.amount) amount from investment i,project p where i.project_id = p.id
        and
        p.parent_id is null and p.noob=0 and p.project_type=0
        and date_format(i.time,'%Y-%m-%d') between date_format(#{startTime},'%Y-%m-%d') and
        date_format(#{endTime},'%Y-%m-%d') GROUP BY user_id,limit_days
        ) a on u.id = a.user_id
        where
        u.id in (
        select i.user_id from investment i
        left join project p on p.id=i.project_id
        where p.parent_id is null and p.noob=0 and p.project_type=0
        and date_format(i.time,'%Y-%m-%d') between date_format(#{startTime},'%Y-%m-%d') and
        date_format(#{endTime},'%Y-%m-%d') group by i.user_id having SUM(amount)&gt;=10000
        )
        <if test="keyword != null">
            and (u.username like '%${keyword}%' or u.true_name like '%${keyword}%' or u.phone like '%${keyword}%')
        </if>

        ORDER BY username
        limit ${start} , ${limit}
    </select>


    <select id="countJingdongInvestmentAward" parameterType="map" resultType="int">
        select count(*) from user u LEFT JOIN (
        select p.limit_days ,i.user_id,i.amount from investment i,project p where i.project_id = p.id
        and
        p.parent_id is null and p.noob=0 and p.project_type=0
        and date_format(i.time,'%Y-%m-%d') between date_format(#{startTime},'%Y-%m-%d') and
        date_format(#{endTime},'%Y-%m-%d') GROUP BY user_id,limit_days
        ) a on u.id = a.user_id
        where
        u.id in (
        select i.user_id from investment i
        left join project p on p.id=i.project_id
        where p.parent_id is null and p.noob=0 and p.project_type=0
        and date_format(i.time,'%Y-%m-%d') between date_format(#{startTime},'%Y-%m-%d') and
        date_format(#{endTime},'%Y-%m-%d') group by i.user_id having SUM(amount)&gt;=10000
        )
        <if test="keyword != null">
            and (u.username like '%${keyword}%' or u.true_name like '%${keyword}%' or u.phone like '%${keyword}%')
        </if>


    </select>


    <select id="selectProjectTerminator" parameterType="map" resultType="map">
        select u.phone,a.name,a.amount from project_award p
        left join user u on u.id=p.user_id
        left join award a on p.award_id=a.id
        <if test="startTime != null and endTime != null">
            where date_format(p.time,'%Y-%m-%d %H:%i:%s') between date_format(#{startTime},'%Y-%m-%d %H:%i:%s') and
            date_format(#{endTime},'%Y-%m-%d %H:%i:%s')
        </if>
        order by p.id desc limit 20;
    </select>

    <select id="projectAwardList" parameterType="map" resultType="map">
        select u.phone,u.true_name,a.name,a.amount,p.time from project_award p
        left join user u on u.id=p.user_id
        left join award a on p.award_id=a.id
        where 1=1
        <if test="keyword != null">
            and (u.username like '%${keyword}%' or u.true_name like '%${keyword}%' or u.phone like '%${keyword}%')
        </if>
        <if test="startTime != null and endTime != null">
            and date_format(p.time,'%Y-%m-%d %H:%i:%s') between date_format(#{startTime},'%Y-%m-%d %H:%i:%s') and
            date_format(#{endTime},'%Y-%m-%d %H:%i:%s')
        </if>
        order by p.id desc
        <if test="start != null and limit != null">
            limit ${start} , ${limit}
        </if>
    </select>

    <select id="projectAwardListCount" parameterType="map" resultType="int">
        select count(*) from project_award p
        left join user u on u.id=p.user_id
        left join award a on p.award_id=a.id
        where 1=1
        <if test="keyword != null">
            and (u.username like '%${keyword}%' or u.true_name like '%${keyword}%' or u.phone like '%${keyword}%')
        </if>
        <if test="startTime != null and endTime != null">
            and date_format(p.time,'%Y-%m-%d %H:%i:%s') between date_format(#{startTime},'%Y-%m-%d %H:%i:%s') and
            date_format(#{endTime},'%Y-%m-%d %H:%i:%s')
        </if>
    </select>


    <select id="selectInvestmentAwardActivity" parameterType="map" resultType="map">
        SELECT
            (@rowNO := @rowNo + 1) AS ranking,
            b.*
        FROM (
                 SELECT
                     a.*,
                     u.username
                 FROM (
                          SELECT
                              i.user_id,
                              sum(i.amount)                        totalAmount,
                              sum((i.amount * p.limit_days) / 365) yearAmount
                          FROM investment i
                              LEFT JOIN project p ON p.id = i.project_id
                          WHERE p.parent_id IS NULL AND p.noob = 0 AND p.project_type = 0
                                AND date_format(i.time, '%Y-%m-%d') BETWEEN date_format(#{startTime}, '%Y-%m-%d') AND
                                date_format(#{endTime}, '%Y-%m-%d')
                          GROUP BY i.user_id
                          ORDER BY i.time
                      ) a
                     LEFT JOIN user u ON u.id = a.user_id
                 WHERE u.`status` = 0
                 ORDER BY a.yearAmount DESC) b, (SELECT @rowNO := 0) c
    </select>
    <!--- 查询投资额和年化额 筛选定期和安鑫赚用户,过滤债权转让用户-->
    <select id="selectInvestmentActivityFilter" parameterType="map" resultType="map">
        SELECT
            b.*,
            u.username
        FROM
            (SELECT
                 user_id,
                 SUM(amount)                      totalAmount,
                 SUM((amount * limit_days) / 365) yearAmount
             FROM
                 (SELECT
                      p.project_type,
                      i.product_id,
                      i.user_id,
                      i.amount,
                      i.time,
                      CASE
                      WHEN i.product_id IS NOT NULL
                          THEN pt.out_days
                      ELSE p.limit_days
                      END AS limit_days
                  FROM
                      investment i
                      LEFT JOIN project p
                          ON p.id = i.project_id
                      LEFT JOIN product pt
                          ON pt.id = i.product_id
                  WHERE DATE_FORMAT(i.time, '%Y-%m-%d') BETWEEN DATE_FORMAT(
                          #{startTime}, '%Y-%m-%d') AND
                        DATE_FORMAT(
                                #{endTime}, '%Y-%m-%d')
                        AND
                        CASE
                        WHEN i.product_id IS NULL
                            THEN p.project_type = 0
                        ELSE i.product_id IS NOT NULL
                        END
                 ) AS a
             WHERE limit_days &gt;= 15
             GROUP BY user_id
             ORDER BY `time`
            ) b
            LEFT JOIN `user` u
                ON u.id = b.user_id
        WHERE u.`status` = 0
    </select>


    <select id="queryActivityByGift" parameterType="map" resultType="int">
        SELECT count(*)
        FROM lottery_gift
        WHERE id = #{giftId} AND activity_id = (SELECT id
                                                FROM activity
                                                WHERE `name` = #{activityName})
    </select>

    <select id="selectNationalGoldList" parameterType="map" resultType="map">
        SELECT
        bb.*,cc.totalAmount
        FROM
        (
        SELECT
        lr.time,
        lg. name,
        u.true_name,
        u.phone,
        u.register_time,
        CONCAT(a.remarks, a.detail) address,
        lr.user_id
        FROM
        (
        SELECT
        *
        FROM
        lottery_record r
        WHERE
        r.activity_id = #{activityId}
        ) lr
        LEFT JOIN lottery_gift lg ON lr.gift_id = lg.id
        LEFT JOIN user u ON u.id = lr.user_id
        LEFT JOIN user_address a ON lr.user_id = a.user_id
        where (a.reserve=1 or a.reserve is null)
        <if test="keyword != null">
            and (u.username like '%${keyword}%' or u.true_name like '%${keyword}%' or u.phone like '%${keyword}%' or
            lg.name like '%${keyword}%')
        </if>
        ) bb,
        (
        SELECT
        sum(i.amount) totalAmount,
        i.user_id
        FROM
        investment i
        left join project p on i.project_id =p.id
        WHERE p.project_type=0 and p.noob=0 and
        date_format(i.time, '%Y-%m-%d') BETWEEN date_format(
        #{startTime},
        '%Y-%m-%d'
        )
        AND date_format(
        #{endTime},
        '%Y-%m-%d'
        )   GROUP BY  i.user_id
        ) cc
        WHERE
        bb.user_id = cc.user_id
        <if test="start != null and limit != null">
            limit ${start} , ${limit}
        </if>
    </select>
    <select id="selectNationalGoldCount" parameterType="map" resultType="int">
        SELECT
        count(*)
        FROM
        (
        SELECT
        lr.time,
        lg. name,
        u.true_name,
        u.phone,
        u.register_time,
        CONCAT(a.remarks, a.detail) address,
        lr.user_id
        FROM
        (
        SELECT
        *
        FROM
        lottery_record r
        WHERE
        r.activity_id = #{activityId}
        ) lr
        LEFT JOIN lottery_gift lg ON lr.gift_id = lg.id
        LEFT JOIN user u ON u.id = lr.user_id
        LEFT JOIN user_address a ON lr.user_id = a.user_id
        where 1=1
        <if test="keyword != null">
            and (u.username like '%${keyword}%' or u.true_name like '%${keyword}%' or u.phone like '%${keyword}%' or
            lg.name like '%${keyword}%' )
        </if>
        ) bb,
        (
        SELECT
        sum(i.amount) totalAmount,
        i.user_id
        FROM
        investment i
        left join project p on i.project_id =p.id
        WHERE p.project_type=0 and p.noob=0 and
        date_format(i.time, '%Y-%m-%d') BETWEEN date_format(
        #{startTime},
        '%Y-%m-%d'
        )
        AND date_format(
        #{endTime},
        '%Y-%m-%d'
        )
        GROUP BY
        i.user_id
        ) cc
        WHERE
        bb.user_id = cc.user_id
    </select>

    <!---查询定期和安鑫赚投资用户的年化额-->
    <select id="select666ActivityList" parameterType="map" resultType="map">
        SELECT bb.*,
        cc.totalAmount,
        dd.giftAmount
        FROM(
        SELECT lr.create_date, lg. name, u.true_name, u.phone, CONCAT(a.remarks, a.detail) address, lr.user_id
        FROM(
        SELECT *
        FROM lottery_record r
        WHERE r.activity_id= #{activityId}
        ) lr
        LEFT JOIN lottery_gift lg ON lr.gift_id= lg.id
        LEFT JOIN user u ON u.id= lr.user_id
        LEFT JOIN user_address a ON lr.user_id= a.user_id
        where(a.reserve= 1
        or a.reserve is null)
        <if test="keyword != null">
            and (u.username like '%${keyword}%' or u.true_name like '%${keyword}%' or u.phone like '%${keyword}%' or
            lg.name like '%${keyword}%')
        </if>
        ) bb,
        (
        SELECT
        i.user_id,
        SUM(
        CASE
        WHEN i.product_id IS NULL
        AND p.project_type = 0
        AND p.limit_days &gt;= 15
        THEN i.amount * p.limit_days / 365
        ELSE i.amount * pd.out_days / (365)
        END
        ) totalAmount
        FROM
        investment i
        LEFT JOIN project p
        ON i.project_id = p.id
        LEFT JOIN product pd
        ON i.product_id = pd.id where 1=1 and
        date_format(i.create_date, '%Y-%m-%d') BETWEEN date_format(
        #{startTime},
        '%Y-%m-%d'
        )
        AND date_format(
        #{endTime},
        '%Y-%m-%d'
        )
        GROUP BY
        i.user_id
        ) cc,
        (SELECT
        lr.user_id,
        SUM(lg.amount) giftAmount
        FROM
        lottery_record lr
        LEFT JOIN lottery_gift lg
        ON lr.gift_id = lg.id
        WHERE lr.activity_id = #{activityId}
        GROUP BY lr.user_id) dd
        WHERE bb.user_id= cc.user_id
        and bb.user_id= dd.user_id
        <if test="start != null and limit != null">
            limit ${start} , ${limit}
        </if>
    </select>
    <select id="select666ActivityCount" parameterType="map" resultType="int">
        SELECT count(*)
        FROM(
        SELECT lr.create_date, lg. name, u.true_name, u.phone, CONCAT(a.remarks, a.detail) address, lr.user_id
        FROM(
        SELECT *
        FROM lottery_record r
        WHERE r.activity_id= #{activityId}
        ) lr
        LEFT JOIN lottery_gift lg ON lr.gift_id= lg.id
        LEFT JOIN user u ON u.id= lr.user_id
        LEFT JOIN user_address a ON lr.user_id= a.user_id
        where(a.reserve= 1
        OR a.reserve IS NULL)
        <if test="keyword!= null">
        and(u.username like '%${keyword}%'
        or u.true_name like '%${keyword}%'
        or u.phone like '%${keyword}%'
        or lg.name like '%${keyword}%')
        </if>
        ) bb,(
        SELECT i.user_id, SUM(CASE WHEN i.product_id IS NULL
        AND p.project_type= 0
        AND p.limit_days&gt;= 15 THEN i.amount * p.limit_days / 365 ELSE i.amount * pd.out_days /(365) END) totalAmount
        FROM investment i
        LEFT JOIN project p ON i.project_id= p.id
        LEFT JOIN product pd ON i.product_id= pd.id
        WHERE date_format(i.create_date, '%Y-%m-%d') BETWEEN date_format( #{startTime},
        '%Y-%m-%d')
        AND date_format( #{endTime},
        '%Y-%m-%d')
        GROUP BY i.user_id) cc
        WHERE bb.user_id= cc.user_id
    </select>


    <select id="selecthalloweenActivity" parameterType="map" resultType="map">
        SELECT
            (@rowNO := @rowNo + 1) AS ranking,
            b.*
        FROM (
                 SELECT
                     a.*,
                     u.username phone
                 FROM (
                          SELECT
                              i.user_id,
                              sum(i.totalAmount) totalAmount,
                              i.t
                          FROM (
                                   SELECT
                                       i.user_id,
                                       i.amount totalAmount,
                                       i.time   t
                                   FROM investment i
                                       LEFT JOIN project p ON p.id = i.project_id
                                   WHERE p.parent_id IS NULL AND p.project_type = 0 AND p.limit_days &gt;= 30


                                         AND date_format(i.time, '%Y-%m-%d') BETWEEN date_format(#{startTime},
                                                                                                 '%Y-%m-%d') AND date_format(
                                           #{endTime}, '%Y-%m-%d')

                                   ORDER BY i.time DESC) i
                          GROUP BY i.user_id
                          ORDER BY i.t DESC
                      ) a
                     LEFT JOIN user u ON u.id = a.user_id
                 ORDER BY a.totalAmount DESC) b, (SELECT @rowNO := 0) c
        ORDER BY b.totalAmount DESC, b.t
    </select>


    <select id="selectGetDoubleGiftList" parameterType="map" resultType="map">
        select ii.id,ii.type,ii.user_id,p.`title` ,ii.amount,ii.time, p.limit_days,u.phone,u.true_name from (
        select * from investment i GROUP BY i.user_id
        )ii
        left join project p on ii.project_id =p.id
        left join user u on ii.user_id=u.id
        where 1=1
        <if test="endTime != null">
            and ii.time BETWEEN '2016-10-20' and #{endTime}
        </if>
        <if test="endTime == null">
            and ii.time&gt;= '2016-10-20'
        </if>
        <if test="keyword != null">
            and (u.username like '%${keyword}%' or u.true_name like '%${keyword}%' or u.phone like '%${keyword}%')
        </if>
        and p.parent_id is null order by ii.time desc
        <if test="start != null and limit != null">
            limit ${start} , ${limit}
        </if>
    </select>


    <select id="selectGetDoubleGiftCount" parameterType="map" resultType="int">
        select count(*) from (
        select * from investment i GROUP BY i.user_id
        )ii
        left join project p on ii.project_id =p.id
        left join user u on ii.user_id=u.id
        where 1=1
        <if test="endTime != null">
            and ii.time BETWEEN '2016-10-20' and #{endTime}
        </if>
        <if test="endTime == null">
            and ii.time&gt;= '2016-10-20'
        </if>
        <if test="keyword != null">
            and (u.username like '%${keyword}%' or u.true_name like '%${keyword}%' or u.phone like '%${keyword}%')
        </if>
        and p.parent_id is null
    </select>


    <select id="selectGetDoubleGiftMap" parameterType="map" resultType="map">
        SELECT
            count(IF(ii.type IN (0, 2), ii.user_id, NULL))            rCount,
            count(IF(ii.type = 1, ii.user_id, NULL))                  huoCount,
            sum(if(ii.type IN (0, 2), ii.amount, 0))                  rAmount,
            sum(if(ii.type = 1, ii.amount, 0))                        huoAmount,
            (SELECT count(*)
             FROM user
             WHERE register_time BETWEEN '2016-10-20' AND #{endTime}) uCount
        FROM (
                 SELECT *
                 FROM investment i
                 GROUP BY i.user_id
             ) ii
            LEFT JOIN project p ON ii.project_id = p.id
            LEFT JOIN user u ON ii.user_id = u.id
        WHERE ii.time BETWEEN '2016-10-20' AND #{endTime} AND p.parent_id IS NULL
    </select>


    <select id="selectSinglesDayActivity" parameterType="map" resultType="map">
        SELECT
            i.user_id,
            sum(CASE WHEN limit_days = 30
                THEN i.amount
                ELSE 0 END) amount_30,
            sum(CASE WHEN limit_days = 90
                THEN i.amount
                ELSE 0 END) amount_90,
            sum(CASE WHEN limit_days = 180
                THEN i.amount
                ELSE 0 END) amount_180
        FROM investment i LEFT JOIN project p ON p.id = i.project_id
        WHERE p.parent_id IS NULL AND p.project_type = 0 AND p.limit_days &gt;= 30 AND i.user_id = #{userId}
              AND
              date_format(i.time, '%Y-%m-%d') BETWEEN date_format(#{startTime}, '%Y-%m-%d') AND date_format(#{endTime},
                                                                                                            '%Y-%m-%d')
        GROUP BY i.user_id

    </select>

    <select id="beforeSinglesDayActivity" parameterType="map" resultType="map">
        SELECT i.user_id
        FROM investment i
        WHERE i.user_id = #{userId}
              AND date_format(i.time, '%Y-%m-%d') &lt; date_format(#{startTime}, '%Y-%m-%d')
    </select>


    <select id="listSelectSinglesDay" parameterType="map" resultType="map">
        select m.* ,u.true_name,u.register_time,u.address,u.phone ,u.id from user u right JOIN
        (
        select i.user_id,sum(case when limit_days=30 or limit_days=90 or limit_days=180 then i.amount else 0 end)
        totalAmount,
        sum(case when limit_days=30 then i.amount else 0 end) amount_30,
        sum(case when limit_days=90 then i.amount else 0 end) amount_90,
        sum(case when limit_days=180 then i.amount else 0 end) amount_180 ,
        us.address
        from investment i
        left join project p on p.id=i.project_id LEFT JOIN (select CONCAT(ua.remarks, ua.detail) address ,user_id from
        user_address ua where ua.reserve = 1 ) us on i.user_id = us.user_id LEFT join user u on u.id=i.user_id
        where p.parent_id is null and p.project_type=0 and p.limit_days &gt;=7 and u.status=0

        and date_format(i.time,'%Y-%m-%d') between date_format(#{startTime},'%Y-%m-%d') and
        date_format(#{endTime},'%Y-%m-%d')
        GROUP BY i.user_id ) m
        on u.id = m.user_id
        <if test="keyword != null">
            where (u.true_name like '%${keyword}%' or u.phone like '%${keyword}%')
        </if>

        <if test="start != null and limit != null">
            limit ${start} , ${limit}
        </if>
    </select>


    <select id="countSelectSinglesDay" parameterType="map" resultType="int">
        select count(*) from user u right JOIN
        (
        select i.user_id,sum(case when limit_days=30 or limit_days=90 or limit_days=180 then i.amount else 0 end)
        totalAmount,
        sum(case when limit_days=30 then i.amount else 0 end) amount_30,
        sum(case when limit_days=90 then i.amount else 0 end) amount_90,
        sum(case when limit_days=180 then i.amount else 0 end) amount_180 ,
        us.address
        from investment i
        left join project p on p.id=i.project_id LEFT JOIN (select CONCAT(ua.remarks, ua.detail) address ,user_id from
        user_address ua where ua.reserve = 1 ) us on i.user_id = us.user_id
        where p.parent_id is null and p.project_type=0 and p.limit_days &gt;=7

        and date_format(i.time,'%Y-%m-%d') between date_format(#{startTime},'%Y-%m-%d') and
        date_format(#{endTime},'%Y-%m-%d')
        GROUP BY i.user_id ) m
        on u.id = m.user_id
        <if test="keyword != null">
            where (u.true_name like '%${keyword}%' or u.phone like '%${keyword}%')
        </if>
    </select>


    <select id="thanksgivingDay" parameterType="map" resultType="map">
        select m.* ,u.true_name,u.register_time,u.address,u.phone ,u.id from user u right JOIN
        (
        select i.user_id,sum(case when limit_days=90 or limit_days=180 then i.amount else 0 end)
        totalAmount,
        sum(case when limit_days=30 then i.amount else 0 end) amount_30,
        sum(case when limit_days=90 then i.amount else 0 end) amount_90,
        sum(case when limit_days=180 then i.amount else 0 end) amount_180 ,
        us.address
        from investment i
        left join project p on p.id=i.project_id LEFT JOIN (select CONCAT(ua.remarks, ua.detail) address ,user_id from
        user_address ua where ua.reserve = 1 ) us on i.user_id = us.user_id
        where p.parent_id is null and p.project_type=0 and p.limit_days &gt;=30

        and date_format(i.time,'%Y-%m-%d') between date_format(#{startTime},'%Y-%m-%d') and
        date_format(#{endTime},'%Y-%m-%d')
        GROUP BY i.user_id ) m
        on u.id = m.user_id where 1=1
        and u.status = 0
        <if test="keyword != null">
            and (u.true_name like '%${keyword}%' or u.phone like '%${keyword}%')
        </if>

        <if test="start != null and limit != null">
            limit ${start} , ${limit}
        </if>
    </select>


    <select id="selectValentinesDayActivity" parameterType="map" resultType="map">
        SELECT
            c.*,
            IFNULL((c.amount_30 * 30 / 365), 0)          yearAmount_30,
            IFNULL((c.amount_30 * 30 / 365 * 0.01), 0)   romanticAmount_30,
            IFNULL((c.amount_90 * 90 / 365), 0)          yearAmount_90,
            IFNULL((c.amount_90 * 90 / 365 * 0.02), 0)   romanticAmount_90,
            IFNULL((c.amount_180 * 180 / 365), 0)        yearAmount_180,
            IFNULL((c.amount_180 * 180 / 365 * 0.03), 0) romanticAmount_180,
            IFNULL((c.amount_30 * 30 / 365 * 0.01), 0) + IFNULL((c.amount_90 * 90 / 365 * 0.02), 0) +
            IFNULL((c.amount_180 * 180 / 365 * 0.03), 0) romanticTotalAmount
        FROM (
                 SELECT
                     sum(CASE WHEN p.limit_days = 30 OR p.limit_days = 90 OR p.limit_days = 180
                         THEN i.amount
                         ELSE 0 END)
                                     totalAmount,
                     sum(CASE WHEN limit_days = 30
                         THEN i.amount
                         ELSE 0 END) amount_30,
                     sum(CASE WHEN limit_days = 90
                         THEN i.amount
                         ELSE 0 END) amount_90,
                     sum(CASE WHEN limit_days = 180
                         THEN i.amount
                         ELSE 0 END) amount_180
                 FROM investment i
                     LEFT JOIN project p ON p.id = i.project_id
                 WHERE p.parent_id IS NULL AND p.project_type = 0 AND p.limit_days &gt;= 30
                       AND date_format(i.time, '%Y-%m-%d') BETWEEN date_format(#{startTime}, '%Y-%m-%d') AND
                       date_format(#{endTime}, '%Y-%m-%d') AND i.user_id = #{userId}
             ) c
    </select>

    <select id="selectActivityTimeInvestmentAmount" parameterType="map" resultType="double">
        SELECT sum(CASE WHEN p.limit_days = 30 OR p.limit_days = 90 OR p.limit_days = 180
            THEN i.amount
                   ELSE 0 END) totalAmount
        FROM investment i
            LEFT JOIN project p ON p.id = i.project_id
        WHERE p.parent_id IS NULL AND p.project_type = 0 AND p.limit_days &gt;= 30
              AND date_format(i.time, '%Y-%m-%d') BETWEEN date_format(#{startTime}, '%Y-%m-%d') AND
              date_format(#{endTime}, '%Y-%m-%d') AND i.user_id = #{userId}
    </select>

    <select id="selectInvestmentTotal" parameterType="map" resultType="map">
        SELECT
            g.*,
            h.*
        FROM (
                 SELECT
                     sum(i.amount)                                                     investTotalAmount,
                     sum(if(i.hongbao_id IS NOT NULL, i.amount, 0))                    investHongbaoTotalAmount,
                     sum(h.amount)                                                     hongbaoTotalAmount,
                     (
                         ifnull(truncate((sum(CASE WHEN limit_days = 30
                             THEN i.amount
                                              ELSE 0 END) * 30 / 365 * 0.01), 2), 0) +
                         ifnull(truncate((sum(CASE WHEN limit_days = 90
                             THEN i.amount
                                              ELSE 0 END) * 90 / 365 * 0.02), 2), 0) +
                         ifnull(truncate((sum(CASE WHEN limit_days = 180
                             THEN i.amount
                                              ELSE 0 END) * 180 / 365 * 0.03), 2), 0)) fanTotalAmount
                 FROM investment i
                     LEFT JOIN hongbao h ON i.hongbao_id = h.id
                     LEFT JOIN project p ON p.id = i.project_id
                 WHERE p.parent_id IS NULL AND p.project_type = 0 AND p.limit_days &gt;= 30
                       AND date_format(i.time, '%Y-%m-%d') BETWEEN date_format(#{startTime}, '%Y-%m-%d') AND
                       date_format(#{endTime}, '%Y-%m-%d')
             ) g, (
                      SELECT sum(e.amount) expAmount
                      FROM activity_prize a
                          LEFT JOIN exp_money e ON a.other_id = e.id
                      WHERE a.type = 3 AND
                            date_format(a.create_time, '%Y-%m-%d') BETWEEN date_format(#{startTime}, '%Y-%m-%d') AND
                            date_format(#{endTime}, '%Y-%m-%d')
                  ) h
    </select>


    <select id="selectValentinesDayActivityList" parameterType="map" resultType="map">
        select d.* from (
        select c.*,
        IFNULL((c.amount_30*30/365),0) yearAmount_30,IFNULL((c.amount_30*30/365*0.01),0) romanticAmount_30,
        IFNULL((c.amount_90*90/365),0) yearAmount_90,IFNULL((c.amount_90*90/365*0.02),0) romanticAmount_90,
        IFNULL((c.amount_180*180/365),0) yearAmount_180,IFNULL((c.amount_180*180/365*0.03),0) romanticAmount_180,
        IFNULL((c.amount_30*30/365*0.01),0) +IFNULL((c.amount_90*90/365*0.02),0)+IFNULL((c.amount_180*180/365*0.03),0)
        romanticTotalAmount
        from (
        select u.username,u.true_name,u.phone ,u.register_time,
        sum(case when limit_days=30 then i.amount else 0 end) amount_30,
        sum(case when limit_days=90 then i.amount else 0 end) amount_90,
        sum(case when limit_days=180 then i.amount else 0 end) amount_180
        from investment i
        left join user u on i.user_id=u.id
        left join project p on p.id=i.project_id
        where p.parent_id is null and p.project_type=0 and p.limit_days &gt;=30
        and date_format(i.time,'%Y-%m-%d') between date_format(#{startTime},'%Y-%m-%d') and
        date_format(#{endTime},'%Y-%m-%d') and u.status=0
        <if test="keyword != null">
            and (u.true_name like '%${keyword}%' or u.phone like '%${keyword}%')
        </if>
        group by i.user_id
        ) c
        )d
        ORDER by d.register_time
        <if test="start != null and limit != null">
            limit ${start} , ${limit}
        </if>
    </select>

    <select id="selectValentinesDayActivityCount" parameterType="map" resultType="int">
        select count(*) from (
        select c.*
        from (
        select u.id
        from investment i
        left join user u on i.user_id=u.id
        left join activity_prize a on u.id=a.user_id
        left join project p on p.id=i.project_id
        where p.parent_id is null and p.project_type=0 and p.limit_days &gt;=30
        and date_format(i.time,'%Y-%m-%d') between date_format(#{startTime},'%Y-%m-%d') and
        date_format(#{endTime},'%Y-%m-%d') and u.status=0
        <if test="keyword != null">
            and (u.true_name like '%${keyword}%' or u.phone like '%${keyword}%')
        </if>
        group by i.user_id
        ) c
        )d
    </select>

    <select id="selectInvest" parameterType="map" resultType="map">
        SELECT sum(inv.amount) inv_total_amount from investment inv LEFT JOIN user u on u.id = inv.user_id LEFT JOIN
        project p on inv.project_id = p.id where
        p.project_type=0 and p.limit_days&gt;=30
        and
        date_format(inv.time,'%Y-%m-%d') between date_format(#{startTime},'%Y-%m-%d') and
        date_format(#{endTime},'%Y-%m-%d')
        and u.status=0
        <if test="keyword != null">
            and (u.true_name like '%${keyword}%' or u.phone like '%${keyword}%')
        </if>
    </select>
    <select id="selectExpMobey" parameterType="map" resultType="map">
        select sum(amount) exp_amount from exp_money exp LEFT JOIN user u on u.id = exp.user_id where activity_id =
        #{activityId}
        and
        date_format(exp.create_time,'%Y-%m-%d') between date_format(#{startTime},'%Y-%m-%d') and
        date_format(#{endTime},'%Y-%m-%d') and u.status=0
        <if test="keyword != null">
            and (u.true_name like '%${keyword}%' or u.phone like '%${keyword}%')
        </if>
    </select>
    <select id="selectHongbao" parameterType="map" resultType="map">
        SELECT sum(inv.amount) inv_amount,sum(hb.amount) hb_amount from investment inv LEFT JOIN user u on u.id =
        inv.user_id LEFT JOIN hongbao hb on hb.id = inv.hongbao_id where inv.hongbao_id is not null and
        date_format(inv.time,'%Y-%m-%d') between date_format(#{startTime},'%Y-%m-%d') and
        date_format(#{endTime},'%Y-%m-%d')
        and u.status=0 and hb.type=2
        <if test="keyword != null">
            and (u.true_name like '%${keyword}%' or u.phone like '%${keyword}%')
        </if>
    </select>


    <select id="selectActivityInvestment" parameterType="map" resultType="map">
        SELECT
            i.id,
            i.amount
        FROM investment i LEFT JOIN project p ON p.id = i.project_id
        WHERE p.parent_id IS NULL AND p.project_type = 0 AND p.limit_days &gt;= 30 AND i.user_id = #{userId}
              AND
              date_format(i.time, '%Y-%m-%d') BETWEEN date_format(#{startTime}, '%Y-%m-%d') AND date_format(#{endTime},
                                                                                                            '%Y-%m-%d')
        UNION
        SELECT
            inv.id,
            inv.amount
        FROM investment inv
        WHERE inv.type = 5 AND inv.user_id = #{userId}
              AND date_format(inv.time, '%Y-%m-%d') BETWEEN date_format(#{startTime}, '%Y-%m-%d') AND date_format(
                #{endTime}, '%Y-%m-%d')
    </select>

    <select id="newAnniversary" parameterType="map" resultType="map">
        select inv.product_id, inv.id ,inv.project_id ,u.id,u.phone,u.username,u.true_name,u.register_time,inv.time,case
        when inv.project_id is null then pt.name when inv.product_id is null then p.title else '债权' end
        title,inv.amount,wx.code from user u LEFT JOIN
        (select inv.user_id,inv.id,inv.project_id,inv.amount,inv.product_id ,inv.time from (select
        inv.user_id,inv.id,inv.project_id,inv.amount,inv.product_id ,inv.time from investment inv ORDER BY id )
        inv GROUP BY user_id )
        inv on inv.user_id = u.id LEFT JOIN project p on p.id = inv.project_id LEFT JOIN product pt on pt.id =
        inv.product_id LEFT JOIN wx_activity wx on wx.user_id = u.id where
        u.register_time &gt; #{acstartTime} and u.register_time &lt; #{acendTime} and u.status = 0 and inv.id is not
        null
        <if test="startTime != null">
            and inv.time &gt; #{startTime}
        </if>
        <if test="endTime != null">
            and inv.time &lt; #{endTime}
        </if>
        <if test="keyword != null">
            and (u.username like '%${keyword}%' or u.true_name like '%${keyword}%' or u.phone like '%${keyword}%')
        </if>
        order by inv.time desc
        <if test="start != null and limit != null">
            limit ${start} , ${limit}
        </if>
    </select>

    <select id="newAnniversaryCount" parameterType="map" resultType="int">
        select count(*) from (
        select inv.product_id, inv.id from user u LEFT JOIN
        (select inv.user_id,inv.id,inv.project_id,inv.amount,inv.product_id ,inv.time from (select
        inv.user_id,inv.id,inv.project_id,inv.amount,inv.product_id ,inv.time from investment inv ORDER BY id )
        inv GROUP BY user_id )
        inv on inv.user_id = u.id LEFT JOIN project p on p.id = inv.project_id LEFT JOIN product pt on pt.id =
        inv.product_id LEFT JOIN wx_activity wx on wx.user_id = u.id where
        u.register_time &gt; #{acstartTime} and u.register_time &lt; #{acendTime} and u.status = 0 and inv.id is not
        null
        <if test="startTime != null">
            and inv.time &gt; #{startTime}
        </if>
        <if test="endTime != null">
            and inv.time &lt; #{endTime}
        </if>
        <if test="keyword != null">
            and (u.username like '%${keyword}%' or u.true_name like '%${keyword}%' or u.phone like '%${keyword}%')
        </if>
        )s
    </select>

    <select id="twoYearsThanksActivity" parameterType="map" resultType="map">
        select inv.product_id, inv.id ,inv.project_id ,u.phone,u.username,u.true_name,u.register_time,exp.* ,hb.amount
        hbAmount,rc.rate,
        case when inv.project_id is null then pt.name when inv.product_id is null then p.title end title,
        case when inv.project_id is null then pt.out_days when inv.product_id is null then p.limit_days end limit_days,
        inv.amount invAmount,wx.code from user u right JOIN
        (select inv.user_id,inv.id,inv.project_id,inv.amount,inv.product_id,inv.exp_money_id,inv.hongbao_id
        ,inv.coupon_id,inv.time from investment inv where inv.amount&gt;=10000 and inv.exp_money_id is not null
        )
        inv on inv.user_id = u.id LEFT JOIN project p on p.id = inv.project_id LEFT JOIN product pt on pt.id =
        inv.product_id LEFT JOIN wx_activity wx
        on wx.user_id = u.id LEFT JOIN exp_money exp on exp.id = inv.exp_money_id LEFT JOIN hongbao hb on hb.id =
        inv.hongbao_id
        LEFT join rate_coupon rc on rc.id = inv.coupon_id
        where
        u.status = 0 and inv.id is not null and u.register_time &lt; '2017-04-11' and u.register_time &gt; '2015-04-10'
        <if test="startTime != null">
            and inv.time &gt; #{startTime}
        </if>
        <if test="endTime != null">
            and inv.time &lt; #{endTime}
        </if>
        <if test="keyword != null">
            and (u.username like '%${keyword}%' or u.true_name like '%${keyword}%' or u.phone like '%${keyword}%')
        </if>
        order by inv.time desc
        <if test="start != null and limit != null">
            limit ${start} , ${limit}
        </if>
    </select>

    <select id="twoYearsThanksActivityCount" parameterType="map" resultType="int">
        select count(*) from (
        select inv.product_id ,inv.project_id ,u.id,u.phone,u.username,u.true_name,u.register_time from user u right
        JOIN
        (select inv.user_id,inv.id,inv.project_id,inv.amount,inv.product_id,inv.exp_money_id,inv.hongbao_id,inv.time
        from investment inv where inv.amount&gt;=10000 and inv.exp_money_id is not null
        )
        inv on inv.user_id = u.id LEFT JOIN project p on p.id = inv.project_id LEFT JOIN product pt on pt.id =
        inv.product_id LEFT JOIN wx_activity wx
        on wx.user_id = u.id LEFT JOIN exp_money exp on exp.id = inv.exp_money_id LEFT JOIN hongbao hb on hb.id =
        inv.hongbao_id where
        u.status = 0 and inv.id is not null and u.register_time &lt; '2017-04-11' and u.register_time &gt; '2015-04-10'
        <if test="startTime != null">
            and inv.time &gt; #{startTime}
        </if>
        <if test="endTime != null">
            and inv.time &lt; #{endTime}
        </if>
        <if test="keyword != null">
            and (u.username like '%${keyword}%' or u.true_name like '%${keyword}%' or u.phone like '%${keyword}%')
        </if>
        )s
    </select>
    <!--年化投资额排名-->
    <select id="selectYearInvestmentRank" parameterType="map" resultType="map">
        <!--SELECT
        &amp;#45;&amp;#45; @rownum := @rownum + 1 rownum,
        user_id,
        username,
        yearAmount,
        investmentAmount
        FROM (
        SELECT @rownum := 0, i.user_id,CONCAT(SUBSTRING(u.username, 1, 1), '****',
        SUBSTRING(u.username, CHAR_LENGTH(u.username), CHAR_LENGTH(u.username) + 1)) username,
        IFNULL(SUM(CASE WHEN i.product_id IS NULL
        THEN i.amount * p.limit_days / 365
        ELSE i.amount * pd.out_days / (365) END), 0) AS yearAmount,
        IFNULL(SUM(amount), 0) AS investmentAmount
        FROM investment i LEFT JOIN project p ON i.project_id = p.id
        LEFT JOIN product pd ON i.product_id = pd.id
        LEFT JOIN `user` u ON i.`user_id` = u.id
        WHERE CASE WHEN i.product_id IS NULL
        THEN p.project_type = 0 AND p.limit_days &gt;= #{limitDays}
        ELSE pd.out_days &gt;= #{limitDays} END
        AND DATE_FORMAT(i.time, '%Y-%m-%d') BETWEEN DATE_FORMAT(#{startTime}, '%Y-%m-%d')AND DATE_FORMAT(#{endTime},
        '%Y-%m-%d')
        group by i.user_id
        ORDER BY yearAmount DESC
        &lt;if test="start != null and limit != null"&gt;
            limit #{start},#{limit}
        &lt;/if&gt;
        ) AS a
        WHERE yearAmount &gt;0-->
        SELECT i.user_id,CONCAT(SUBSTRING(u.username, 1, 1), '****',
        SUBSTRING(u.username, CHAR_LENGTH(u.username), CHAR_LENGTH(u.username) + 1)) username,
        IFNULL(SUM(i.amount * p.limit_days / 365), 0) AS yearAmount,
        IFNULL(SUM(i.amount), 0) AS investmentAmount
        FROM investment i LEFT JOIN project p ON i.project_id = p.id
        LEFT JOIN `user` u ON i.`user_id` = u.id WHERE p.project_type = 0 AND p.limit_days &gt;= #{limitDays}
        AND DATE_FORMAT(i.time, '%Y-%m-%d') BETWEEN DATE_FORMAT(#{startTime}, '%Y-%m-%d')AND
        DATE_FORMAT(#{endTime},'%Y-%m-%d')
        GROUP BY i.user_id
        ORDER BY yearAmount DESC
        <if test="start != null and limit != null">
            limit #{start},#{limit}
        </if>
    </select>

    <select id="selectInviteRank" parameterType="map" resultType="map">
        SELECT @rownum:=@rownum+1 rownum,user_id,username,inviteCount, register_time FROM (
        SELECT @rownum:=0, user_id,COUNT(invite_user_id) AS inviteCount,u2.username,a.register_time FROM (
        SELECT i.user_id,invite_user_id,u.register_time FROM user_invite i,`user` u WHERE
        i.invite_user_id = u.id
        AND DATE_FORMAT(u.register_time, '%Y-%m-%d')
        BETWEEN DATE_FORMAT(#{startTime},'%Y-%m-%d') AND date_format(#{endTime}, '%Y-%m-%d')
        ORDER BY u.register_time DESC
        ) AS a LEFT JOIN `user` u2 ON a.user_id = u2.id
        GROUP BY user_id
        ORDER BY inviteCount DESC ,register_time ASC
        ) AS b
        <if test="start != null and limit != null">
            limit #{start},#{limit}
        </if>
    </select>
    <!--查询投资金额和年华额 （包含安心赚）-->
    <select id="selectInvestmentAmount" parameterType="map" resultType="map">
        SELECT
            IFNULL(SUM(CASE WHEN i.product_id IS NULL
                THEN i.amount * p.limit_days / 365
                       ELSE i.amount * pd.out_days / (365) END), 0) AS yearAmount,
            IFNULL(SUM(amount), 0)                                  AS investmentAmount
        FROM investment i LEFT JOIN project p ON i.project_id = p.id
            LEFT JOIN product pd ON i.product_id = pd.id
        WHERE CASE WHEN i.product_id IS NULL
            THEN p.project_type = 0 AND p.limit_days &gt;= #{limitDays}
              ELSE pd.out_days &gt;= #{limitDays} END
              AND i.user_id = #{userId} AND
              DATE_FORMAT(i.time, '%Y-%m-%d') BETWEEN DATE_FORMAT(#{startTime}, '%Y-%m-%d')
              AND DATE_FORMAT(#{endTime}, '%Y-%m-%d')
    </select>
    <!--查询投资金额和年华额 （不包含安心赚）-->
    <select id="selectInvestmentAmount2" parameterType="map" resultType="map">
        select t.user_id, sum(t.yearAmount) yearAmount from (
        select i.amount, p.limit_days, i.user_id, (i.amount*p.limit_days/365) yearAmount from investment i
        inner join project p
        on i.project_id = p.id
        where i.user_id =  #{userId}
        and p.project_type = 0  AND p.noob!=1 and DATE_FORMAT(i.time, '%Y-%m-%d') BETWEEN DATE_FORMAT(#{startTime}, '%Y-%m-%d') AND DATE_FORMAT(#{endTime},'%Y-%m-%d')
        ) t
    </select>
    <select id="selectUserLottery" parameterType="map" resultType="map">
        SELECT
            ifnull(COUNT(user_id), 0) AS count,
            ifnull(SUM(lg.amount), 0) AS amount
        FROM activity a LEFT JOIN lottery_gift lg ON a.id = lg.activity_id
            LEFT JOIN lottery_record lr ON lg.id = lr.gift_id
        WHERE a.id = #{activityId} AND user_id = #{userId}
        <if test="startTime!=null and endTime!=null">
            and DATE_FORMAT(lr.time, '%Y-%m-%d')
            BETWEEN DATE_FORMAT(#{startTime}, '%Y-%m-%d') AND DATE_FORMAT(#{endTime},'%Y-%m-%d')
        </if>
    </select>
    <select id="selectNoverberActivityList" parameterType="map" resultType="map">
        SELECT u.id,
        u.`true_name`,i.`time`,p.`tag`,a.yearAmount,i.amount
        FROM
        investment i
        LEFT JOIN project p
        ON i.project_id = p.id
        LEFT JOIN user u
        ON i.`user_id` = u.id
        LEFT JOIN
        (SELECT
        i.`user_id`,
        IFNULL(SUM(i.amount * p.limit_days / 365), 0) AS yearAmount
        FROM
        investment i
        LEFT JOIN project p
        ON i.project_id = p.id WHERE p.project_type = 0 AND p.limit_days &gt;= 30
        <if test="startTime!=null and endTime==null">
            and `i.time` &gt;= DATE_FORMAT(#{startTime}, '%Y-%m-%d')
        </if>
        <if test="endTime!=null and startTime==null">
            and i.time &lt;= DATE_FORMAT(#{endTime}, '%Y-%m-%d')
        </if>
        <if test="startTime!=null and endTime!=null">
            and DATE_FORMAT(i.time, '%Y-%m-%d')
            BETWEEN DATE_FORMAT(#{startTime}, '%Y-%m-%d') AND DATE_FORMAT(#{endTime},'%Y-%m-%d')
        </if>
        GROUP BY i.`user_id`
        ) AS a
        ON i.`user_id` = a.user_id
        WHERE p.project_type = 0 AND p.limit_days &gt;= 30
        <if test="startTime!=null and endTime==null">
            and `i.time` &gt;= DATE_FORMAT(#{startTime}, '%Y-%m-%d')
        </if>
        <if test="endTime!=null and startTime==null">
            and i.time &lt;= DATE_FORMAT(#{endTime}, '%Y-%m-%d')
        </if>
        <if test="startTime!=null and endTime!=null">
            and DATE_FORMAT(i.time, '%Y-%m-%d')
            BETWEEN DATE_FORMAT(#{startTime}, '%Y-%m-%d') AND DATE_FORMAT(#{endTime},'%Y-%m-%d')
        </if>
        <if test="keyword!=null and !keyword.isEmpty()">
            and p.tag like '%${keyword}%'
        </if>
        ORDER BY yearAmount DESC
        <if test="start != null and limit != null">
            limit #{start},#{limit}
        </if>
    </select>
    <select id="selectNoverberActivityCount" parameterType="map" resultType="int">
        SELECT count(*)
        FROM
        investment i
        LEFT JOIN project p
        ON i.project_id = p.id
        LEFT JOIN user u
        ON i.`user_id` = u.id
        LEFT JOIN
        (SELECT
        i.`user_id`,
        IFNULL(SUM(i.amount * p.limit_days / 365), 0) AS yearAmount
        FROM
        investment i
        LEFT JOIN project p
        ON i.project_id = p.id WHERE p.project_type = 0 AND p.limit_days &gt;= 30
        <if test="startTime!=null and endTime==null">
            and `i.time` &gt;= DATE_FORMAT(#{startTime}, '%Y-%m-%d')
        </if>
        <if test="endTime!=null and startTime==null">
            and i.time &lt;= DATE_FORMAT(#{endTime}, '%Y-%m-%d')
        </if>
        <if test="startTime!=null and endTime!=null">
            and DATE_FORMAT(i.time, '%Y-%m-%d')
            BETWEEN DATE_FORMAT(#{startTime}, '%Y-%m-%d') AND DATE_FORMAT(#{endTime},'%Y-%m-%d')
        </if>
        GROUP BY i.`user_id`
        ) AS a
        ON i.`user_id` = a.user_id
        WHERE p.project_type = 0 AND p.limit_days &gt;= 30
        <if test="startTime!=null and endTime==null">
            and `i.time` &gt;= DATE_FORMAT(#{startTime}, '%Y-%m-%d')
        </if>
        <if test="endTime!=null and startTime==null">
            and i.time &lt;= DATE_FORMAT(#{endTime}, '%Y-%m-%d')
        </if>
        <if test="startTime!=null and endTime!=null">
            and DATE_FORMAT(i.time, '%Y-%m-%d')
            BETWEEN DATE_FORMAT(#{startTime}, '%Y-%m-%d') AND DATE_FORMAT(#{endTime},'%Y-%m-%d')
        </if>
    </select>

    <!--根据用户id查询时间在2017-01-01到2017-12-31 投资的金额-->
    <select id="getAvgAmount" parameterType="int" resultType="map">
        SELECT convert(sum(i.amount/365*p.limit_days)  ,decimal(10,2)) AS avgAmount from
        investment i, project p
        WHERE "2017-1-1 00:00:00" &lt;= i.time and "2018-1-1 23:59:59"&gt;= i.time and i.user_id=#{userId}
        and i.project_id = p.id and p.limit_days &gt;= 30 and p.project_type=0

    </select>

    <select id="findActivityId" resultType="com.goochou.p2b.model.Activity">
        SELECT
        id
        FROM
        activity
        where name in
        <foreach close=")" collection="nameList" index="index" item="name" open="(" separator=",">
            #{name}
        </foreach>
    </select>
    <select id="selectAdminActivityListNew" parameterType="map" resultType="map">
        SELECT bb.*, cc.yearAmount,cc.investmentAmount, dd.giftAmount
        FROM(
        SELECT lr.time, lg. name, u.true_name, u.phone, u.register_time, CONCAT(a.remarks, a.detail) address, lr.user_id
        FROM(
        SELECT *
        FROM lottery_record r
        WHERE 1=1
        <if test="activityId!=null and activityId!=''">
            and r.activity_id= #{activityId}
        </if>
        <if test="startTime != null and endTime != null">
            AND date_format(r.time, '%Y-%m-%d') BETWEEN date_format( #{startTime},'%Y-%m-%d')
            AND date_format(#{endTime},'%Y-%m-%d')
        </if>
        ) lr
        LEFT JOIN lottery_gift lg ON lr.gift_id= lg.id
        LEFT JOIN user u ON u.id= lr.user_id
        LEFT JOIN user_address a ON lr.user_id= a.user_id
        where(a.reserve= 1
        or a.reserve is null)
        <if test="keyword!= null">
            and(u.username like '%${keyword}%'
            or u.true_name like '%${keyword}%'
            or u.phone like '%${keyword}%'
            or lg.name like '%${keyword}%')
        </if>) bb,(
        SELECT i.user_id, IFNULL(SUM(i.amount * p.limit_days / 365), 0) AS yearAmount,SUM(i.amount) investmentAmount
        FROM investment i
        LEFT JOIN project p ON i.project_id= p.id
        WHERE p.project_type = 0 AND p.limit_days &gt;= 30
        <if test="startTime != null and endTime != null">
            AND date_format(i.time, '%Y-%m-%d') BETWEEN date_format( #{startTime},'%Y-%m-%d')
            AND date_format(#{endTime},'%Y-%m-%d')
        </if>
        GROUP BY i.user_id) cc,(
        SELECT lr.user_id, SUM(lg.amount) giftAmount
        FROM lottery_record lr
        LEFT JOIN lottery_gift lg ON lr.gift_id= lg.id
        WHERE 1=1
        <if test="activityId!=null and activityId!=''">
            and lr.activity_id= #{activityId}
        </if>
        <if test="startTime != null and endTime != null">
            AND date_format(lr.time, '%Y-%m-%d') BETWEEN date_format( #{startTime},'%Y-%m-%d')
            AND date_format(#{endTime},'%Y-%m-%d')
        </if>
        GROUP BY lr.user_id) dd
        WHERE bb.user_id= cc.user_id
        and bb.user_id= dd.user_id
        ORDER BY TIME DESC
    </select>
</mapper>