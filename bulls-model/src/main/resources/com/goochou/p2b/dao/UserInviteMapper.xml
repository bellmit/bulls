<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.goochou.p2b.dao.UserInviteMapper">
    <resultMap id="BaseResultMap" type="com.goochou.p2b.model.UserInvite">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Wed Oct 28 10:59:26 CST 2015.
        -->
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="user_id" jdbcType="INTEGER" property="userId"/>
        <result column="invite_user_id" jdbcType="INTEGER" property="inviteUserId"/>
        <result column="hongbao_id" jdbcType="INTEGER" property="hongbaoId"/>
        <result column="coupon_id" jdbcType="INTEGER" property="couponId"/>
        <result column="exp_id" jdbcType="INTEGER" property="expId"/>
        <result column="status" jdbcType="INTEGER" property="status"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Wed Oct 28 10:59:26 CST 2015.
        -->
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Wed Oct 28 10:59:26 CST 2015.
        -->
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Wed Oct 28 10:59:26 CST 2015.
        -->
        id, user_id, invite_user_id, hongbao_id, coupon_id, exp_id, status
    </sql>
    <select id="selectByExample" parameterType="com.goochou.p2b.model.UserInviteExample" resultMap="BaseResultMap">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Wed Oct 28 10:59:26 CST 2015.
        -->
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from user_invite
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
        <if test="limitStart != null and limitStart&gt;-1">
            limit ${limitStart} , ${limitEnd}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Wed Oct 28 10:59:26 CST 2015.
        -->
        select
        <include refid="Base_Column_List"/>
        from user_invite
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Wed Oct 28 10:59:26 CST 2015.
        -->
        delete from user_invite
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="com.goochou.p2b.model.UserInviteExample">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Wed Oct 28 10:59:26 CST 2015.
        -->
        delete from user_invite
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" keyProperty="id" parameterType="com.goochou.p2b.model.UserInvite" useGeneratedKeys="true">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Wed Oct 28 10:59:26 CST 2015.
        -->
        insert into user_invite (id, user_id, invite_user_id,
        hongbao_id, coupon_id, exp_id,
        status)
        values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{inviteUserId,jdbcType=INTEGER},
        #{hongbaoId,jdbcType=INTEGER}, #{couponId,jdbcType=INTEGER}, #{expId,jdbcType=INTEGER},
        #{status,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" parameterType="com.goochou.p2b.model.UserInvite">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Wed Oct 28 10:59:26 CST 2015.
        -->
        insert into user_invite
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="inviteUserId != null">
                invite_user_id,
            </if>
            <if test="hongbaoId != null">
                hongbao_id,
            </if>
            <if test="couponId != null">
                coupon_id,
            </if>
            <if test="expId != null">
                exp_id,
            </if>
            <if test="status != null">
                status,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=INTEGER},
            </if>
            <if test="inviteUserId != null">
                #{inviteUserId,jdbcType=INTEGER},
            </if>
            <if test="hongbaoId != null">
                #{hongbaoId,jdbcType=INTEGER},
            </if>
            <if test="couponId != null">
                #{couponId,jdbcType=INTEGER},
            </if>
            <if test="expId != null">
                #{expId,jdbcType=INTEGER},
            </if>
            <if test="status != null">
                #{status,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.goochou.p2b.model.UserInviteExample" resultType="java.lang.Integer">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Wed Oct 28 10:59:26 CST 2015.
        -->
        select count(*) from user_invite
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Wed Oct 28 10:59:26 CST 2015.
        -->
        update user_invite
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.userId != null">
                user_id = #{record.userId,jdbcType=INTEGER},
            </if>
            <if test="record.inviteUserId != null">
                invite_user_id = #{record.inviteUserId,jdbcType=INTEGER},
            </if>
            <if test="record.hongbaoId != null">
                hongbao_id = #{record.hongbaoId,jdbcType=INTEGER},
            </if>
            <if test="record.couponId != null">
                coupon_id = #{record.couponId,jdbcType=INTEGER},
            </if>
            <if test="record.expId != null">
                exp_id = #{record.expId,jdbcType=INTEGER},
            </if>
            <if test="record.status != null">
                status = #{record.status,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Wed Oct 28 10:59:26 CST 2015.
        -->
        update user_invite
        set id = #{record.id,jdbcType=INTEGER},
        user_id = #{record.userId,jdbcType=INTEGER},
        invite_user_id = #{record.inviteUserId,jdbcType=INTEGER},
        hongbao_id = #{record.hongbaoId,jdbcType=INTEGER},
        coupon_id = #{record.couponId,jdbcType=INTEGER},
        exp_id = #{record.expId,jdbcType=INTEGER},
        status = #{record.status,jdbcType=INTEGER}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.goochou.p2b.model.UserInvite">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Wed Oct 28 10:59:26 CST 2015.
        -->
        update user_invite
        <set>
            <if test="userId != null">
                user_id = #{userId,jdbcType=INTEGER},
            </if>
            <if test="inviteUserId != null">
                invite_user_id = #{inviteUserId,jdbcType=INTEGER},
            </if>
            <if test="hongbaoId != null">
                hongbao_id = #{hongbaoId,jdbcType=INTEGER},
            </if>
            <if test="couponId != null">
                coupon_id = #{couponId,jdbcType=INTEGER},
            </if>
            <if test="expId != null">
                exp_id = #{expId,jdbcType=INTEGER},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.goochou.p2b.model.UserInvite">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Wed Oct 28 10:59:26 CST 2015.
        -->
        update user_invite
        set user_id = #{userId,jdbcType=INTEGER},
        invite_user_id = #{inviteUserId,jdbcType=INTEGER},
        hongbao_id = #{hongbaoId,jdbcType=INTEGER},
        coupon_id = #{couponId,jdbcType=INTEGER},
        exp_id = #{expId,jdbcType=INTEGER},
        status = #{status,jdbcType=INTEGER}
        where id = #{id,jdbcType=INTEGER}
    </update>

    <select id="getInviteList" parameterType="int" resultType="map">
        select * from (select u.username,u.true_name trueName,u.phone,ui.status,u.register_time registTime,ui.hongbao_id from user_invite ui,user u where ui.invite_user_id=u.id
        and ui.user_id=#{userId}) a left join hongbao b on a.hongbao_id=b.id
    </select>

    <select id="getInviteListCount" parameterType="int" resultType="int">
        select count(a.id) from (select ui.id,u.username,ui.status,u.register_time,ui.hongbao_id from user_invite ui,user u where ui.invite_user_id=u.id
        and ui.user_id=#{userId}) a left join hongbao b on a.hongbao_id=b.id
    </select>

    <select id="inviteReport" parameterType="map" resultType="map">
        SELECT
        ui.user_id userId,
        u.username,
        u.true_name trueName,
        u.phone,
        count(IF(source = 4, TRUE, NULL)) shareNum,
        sum(hbNum) hbNum,
        registNum,
        investNum
        FROM
        (
        SELECT
        *, count(IF(STATUS = 0, TRUE, NULL)) registNum,
        count(IF(STATUS = 1, TRUE, NULL)) investNum,
        count(
        IF (
        hongbao_id IS NOT NULL,
        TRUE,
        NULL
        )
        ) hbNum
        FROM
        user_invite
        GROUP BY
        user_id,
        STATUS
        ) ui
        LEFT JOIN rate_coupon r ON ui.user_id = r.user_id

        inner JOIN user u ON ui.user_id = u.id
        <if test="keyword != null">
            and (u.username like '%${keyword}%' or u.true_name like '%${keyword}%' or u.phone like '%${keyword}%')
        </if>
        <if test="adminId != null">
            and (u.id in (select user_id from customer_list cl join user_admin ua on cl.admin_id=ua.id where (ua.parent_id=#{adminId} or cl.admin_id=#{adminId})))
        </if>
        GROUP BY
        ui.user_id
        limit #{start},#{limit}
    </select>

    <select id="inviteReportCount" parameterType="map" resultType="int">
        select count(*) from (
        SELECT
        ui.user_id userId,
        u.username,
        u.true_name trueName,
        u.phone,
        count(IF(source = 4, TRUE, NULL)) shareNum,
        sum(hbNum) hbNum,
        registNum,
        investNum
        FROM
        (
        SELECT
        *, count(IF(STATUS = 0, TRUE, NULL)) registNum,
        count(IF(STATUS = 1, TRUE, NULL)) investNum,
        count(
        IF (
        hongbao_id IS NOT NULL,
        TRUE,
        NULL
        )
        ) hbNum
        FROM
        user_invite
        GROUP BY
        user_id,
        STATUS
        ) ui
        LEFT JOIN rate_coupon r ON ui.user_id = r.user_id
        inner JOIN user u ON ui.user_id = u.id
        <if test="keyword != null">
            and (u.username like '%${keyword}%' or u.true_name like '%${keyword}%' or u.phone like '%${keyword}%')
        </if>
        <if test="adminId != null">
            and (u.id in (select user_id from customer_list cl join user_admin ua on cl.admin_id=ua.id where (ua.parent_id=#{adminId} or cl.admin_id=#{adminId})))
        </if>
        GROUP BY
        ui.user_id
        ) a
    </select>

    <select id="getInviteDetail" parameterType="int" resultType="map">
        SELECT
        a.*,
        sum(if(tr.type=1,tr.amount,0)) rechargeAmount,
        sum(if(tr.type=0,tr.amount,0)) investAmount,
        sum(if(tr.type=2,tr.amount,0)) withdrawAmount
        FROM
        (
        SELECT
        u.id userId,
        u.username,
        u.true_name trueName,
        u.phone,
        ui.status,
        u.register_time registTime
        FROM
        user_invite ui,
        user u
        WHERE
        ui.invite_user_id = u.id
        AND ui.user_id = #{userId}
        ) a left join
        trade_record tr
        on
        a.userId = tr.user_id
        GROUP BY a.userId
    </select>

    <select id="getInviteDetailCount" parameterType="int" resultType="int">
        select count(*) from (SELECT
        a.userId
        FROM
        (
        SELECT
        u.id userId,
        u.username,
        u.true_name trueName,
        u.phone,
        ui.status,
        u.register_time registTime
        FROM
        user_invite ui,
        user u
        WHERE
        ui.invite_user_id = u.id
        AND ui.user_id = #{userId}
        ) a left join
        trade_record tr
        on
        a.userId = tr.user_id
        GROUP BY a.userId)s
    </select>
    <select id="getInviteCount" parameterType="int" resultType="int">
        SELECT count(a.user_id) from user_invite ui,assets a where ui.user_id=#{userId} and ui.invite_user_id=a.user_id and a.huo_investment_amount>=200
    </select>

    <select id="userInviteDetail" parameterType="map" resultType="map">
        SELECT
        a.*,
        sum(if(tr.type=1,tr.amount,0)) rechargeAmount,
        sum(if(tr.type=0,tr.amount,0)) investAmount,
        sum(if(tr.type=2,tr.amount,0)) withdrawAmount
        FROM
        (
        SELECT
        u.id userId,
        u.username,
        u.true_name trueName,
        u.phone,
        ui.status,
        u.register_time registTime
        FROM
        user_invite ui
        left join user u on u.id=ui.user_id
        WHERE
        ui.invite_user_id in (select id from user u2 where (u2.true_name like '%${keywords}%' or u2.phone like '%${keywords}%'))
        ) a left join
        trade_record tr
        on
        a.userId = tr.user_id
        GROUP BY a.userId
    </select>

    <select id="getMyCommission" resultType="double">
        SELECT sum(uid.award_amount) from user_invite ui,user_invite_detail uid,user u where ui.user_id=#{userId} and ui.id=uid.ui_id
        and ui.invite_user_id=u.id
        <if test="status != null">
            and uid.status = #{status}
            <if test="status == 0">
                and u.register_time >= DATE_SUB(NOW(),INTERVAL 1 YEAR)
            </if>
        </if>
        <if test="month != null">
            and DATE_FORMAT(uid.investment_time,'%Y-%m')=DATE_FORMAT(DATE_SUB(#{month},INTERVAL 1 MONTH),'%Y-%m')
        </if>
    </select>

    <select id="listDetail" parameterType="map" resultType="map">
        SELECT
        sum(case when status=0 then amount else 0 end) unSettlementAmount,
        sum(case when status=1 then amount else 0 end) settlementAmount,
        phone
        from (
        SELECT sum(uid.award_amount) amount,u.phone,uid.status from user_invite ui,user_invite_detail uid,user u
        where ui.user_id=#{userId} and ui.id=uid.ui_id
        and ui.invite_user_id=u.id
        and u.register_time >= DATE_SUB(NOW(),INTERVAL 1 YEAR)
        GROUP BY ui.invite_user_id,uid.status
        order by u.register_time desc
        ) a
        GROUP BY phone
        limit #{start},#{limit}

    </select>

    <select id="listDetailCount" parameterType="int" resultType="int">
        select count(*) from (
        SELECT
        *
        from (
        SELECT sum(uid.award_amount) amount,u.phone,uid.status from user_invite ui,user_invite_detail uid,user u
        where ui.user_id=#{userId} and ui.id=uid.ui_id
        and ui.invite_user_id=u.id
        and u.register_time >= DATE_SUB(NOW(),INTERVAL 1 YEAR)
        GROUP BY ui.invite_user_id,uid.status
        order by u.register_time desc
        ) a
        GROUP BY phone
        )b


    </select>

    <select id="getUnsettlement" resultType="com.goochou.p2b.model.UserInviteDetail">
        SELECT uid.* from user_invite_detail uid,user u,user_invite ui
         where uid.ui_id=ui.id and ui.invite_user_id=u.id
         and DATE_FORMAT(investment_time,'%Y-%m')=DATE_FORMAT(DATE_SUB(NOW(),INTERVAL 1 MONTH),'%Y-%m')
        and uid.status=0;
    </select>

    <select id="getUnsettlementGroupByUser" resultType="map">
        SELECT sum(award_amount) amount,ui.user_id userId from user_invite_detail uid,user_invite ui,user u where uid.ui_id=ui.id and
        ui.invite_user_id=u.id   and
        DATE_FORMAT(investment_time,'%Y-%m')=DATE_FORMAT(DATE_SUB(NOW(),INTERVAL 1 MONTH),'%Y-%m') and uid.`status`=0
        group by ui.user_id;
    </select>


    <select id="selectInvestmentAward" resultType="map" parameterType="map">
       select a.`true_name` ,a.`phone` ,a.`register_time` , b.`true_name` byTrueName,b.phone byPhone,b.`register_time` byRegisterTime,i.amount,p.`limit_days` ,p.`annualized`
        from `user_invite` ui
        left join user a on ui.`user_id` =a.`id`
        left join user b on ui.`invite_user_id`  =b.`id`
        left join `investment` i on b.id=i.`user_id`
        left join project p on i.`project_id` =p.id  where date_format(b.`register_time`, '%Y-%m-%d %H:%i:%s') between date_format(#{startTime},'%Y-%m-%d %H:%i:%s') and date_format(#{endTime},'%Y-%m-%d %H:%i:%s')

        limit ${start} , ${limit}
    </select>


    <select id="countInvestmentAward" resultType="int" parameterType="map">
        select COUNT(*)
        from `user_invite` ui
        left join user a on ui.`user_id` =a.`id`
        left join user b on ui.`invite_user_id`  =b.`id`
        left join `investment` i on b.id=i.`user_id`
        left join project p on i.`project_id` =p.id  where date_format(b.`register_time`, '%Y-%m-%d %H:%i:%s') between date_format(#{startTime},'%Y-%m-%d %H:%i:%s') and date_format(#{endTime},'%Y-%m-%d %H:%i:%s')

    </select>


    <select id="selectInviteAmountList" resultType="map" parameterType="map">
        select * from (
        SELECT
            sum(
                CASE
                WHEN status = 1 THEN
                    amount
                ELSE
                    0
                END
            ) settlementAmount,
            username
        FROM
            (
                SELECT
                    sum(uid.award_amount) amount,
                    u.username,
                    u.phone,
                    uid. status
                FROM
                    user_invite ui,
                    user_invite_detail uid,
                    user u
                WHERE
                    ui.id = uid.ui_id
                AND ui.invite_user_id = u.id
                AND u.register_time >= DATE_SUB(NOW(), INTERVAL 1 YEAR)
                GROUP BY
                    ui.invite_user_id,
                    uid. status
                ORDER BY
                    amount DESC
            ) a
        GROUP BY
            phone
        ) ii order by ii.settlementAmount
        <if test="start != null and limit != null">
            limit #{start},#{limit}
        </if>
    </select>
    
    
	<select id="selectInvitedCountTopOne" resultType="map" parameterType="map">
		select user_id userId,  t.count, true_name trueName, username from user u,
		( 
		select user_id, count(1) count from user_invite group by user_id order by count desc limit 1) t
		where u.id = t.user_id
	</select>
	
	<select id="selectInvitedAmountTopOne" resultType="map" parameterType="map">
		select * from (
        SELECT
            sum(
                CASE
                WHEN status = 1 THEN
                    amount
                ELSE
                    0
                END
            ) settlementAmount,
            username
        FROM
            (
                SELECT
                    sum(uid.award_amount) amount,
                    u.username,
                    u.phone,
                    uid. status
                FROM
                    user_invite ui,
                    user_invite_detail uid,
                    user u
                WHERE
                    ui.id = uid.ui_id
                AND ui.invite_user_id = u.id
                GROUP BY
                    ui.invite_user_id,
                    uid. status
                ORDER BY
                    amount DESC
            ) a
        GROUP BY
            phone
        ) ii order by ii.settlementAmount desc
				limit 1
	</select>
	
	<select id="getInvitedUserDetail" parameterType="map" resultType="com.goochou.p2b.model.vo.InvitedUserDetailVO">
		select date(u.register_time) registTime, ui.status, ui.invite_user_id, u.phone, bank_id bankId,  
		(select count(1) from trade_record where user_id = ui.invite_user_id and type = 1) chargeCount 
		from user_invite ui 
		left join user u
		on u.id = ui.invite_user_id
		left join bank_card bc
		on ui.invite_user_id = bc.user_id
		where ui.user_id = #{userId}
		and register_time between #{beginTime} and #{endTime}
	</select>
	
	<select id="sumAwardAmount" parameterType="map" resultType="map">
		
		select sum(award_amount) sum from user_invite_detail 
		where ui_id in (select id from user_invite where user_id = #{userId})
		and investment_time between #{beginTime} and #{endTime}
	</select>


    <select id="getInviteUserCount" parameterType="int" resultType="map">
    SELECT COUNT(*) awardAll,COUNT(t2.invite_user_id) award,COUNT(*)-COUNT(t2.invite_user_id) awardNoInvest FROM user_invite ui
    LEFT JOIN (SELECT DISTINCT(invite_user_id) FROM (SELECT * FROM (SELECT ui.*
                            FROM user_invite ui ,user_invite_detail uid WHERE ui.id = uid.ui_id AND ui.user_id =#{userId}) t1
                            UNION ALL
                            (SELECT ui.*
                            FROM user_invite ui, hongbao h WHERE h.user_id = ui.invite_user_id
                            AND ((h.type = 2 AND amount IN (50,100) AND descript = '双重壕礼') or (h.type=1 and source in (1003,1004))) AND ui.user_id =#{userId} )
                        ) t1
    ) t2 ON ui.invite_user_id = t2.invite_user_id
    WHERE ui.user_id = #{userId}
    </select>

    <select id="getInviteUserAmount" parameterType="int" resultType="double">
        SELECT IFNULL(SUM(award_amount),0)  FROM (
	SELECT ui.user_id,award_amount FROM user_invite ui , user_invite_detail uid WHERE ui.id = uid.ui_id
	AND uid.status=1
	UNION ALL
	SELECT user_id,amount FROM hongbao WHERE TYPE = 1 AND
	CASE WHEN source IN (0,1) THEN descript = '双重壕礼' ELSE source IN (1001,1003) END
    ) t
  WHERE user_id=#{userId}
    </select>
    
    <!-- 新邀请活动，获取用户的邀请好友信息，包含（新老版本）好友是否已让用户获取奖励 -->
    <select id="getUserInviteFriendsPageList" parameterType="map" resultType="map">
    	SELECT 
			u.true_name as trueName,
			u.phone as phone,
			DATE_FORMAT(u.register_time,'%Y-%m-%d %H:%i') as registerTime,
			inviteUser.inviteUserId
		FROM user_invite ui
		LEFT JOIN USER u 
		ON ui.invite_user_id=u.id
		LEFT JOIN (SELECT DISTINCT(invite_user_id) as inviteUserId FROM (SELECT * FROM (SELECT ui.*
                            FROM user_invite ui ,user_invite_detail uid WHERE ui.id = uid.ui_id AND ui.user_id =#{userId,jdbcType=INTEGER}) t1
                            UNION ALL
                            (SELECT ui.*
                            FROM user_invite ui, hongbao h WHERE h.user_id = ui.invite_user_id
                            AND ((h.type = 2 AND amount IN (50,100) AND descript = '双重壕礼') or (h.type=1 and source in (1004, 1003))) AND ui.user_id =#{userId,jdbcType=INTEGER})
                        ) t1
    ) inviteUser
		on ui.invite_user_id = inviteUser.inviteUserId
		where ui.user_id = #{userId,jdbcType=INTEGER}
		order by u.register_time desc
		
		<if test="start != null and limit != null">
            limit #{start},#{limit}
        </if>
    </select>
</mapper>