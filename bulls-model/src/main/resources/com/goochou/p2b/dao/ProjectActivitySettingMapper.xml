<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.goochou.p2b.dao.ProjectActivitySettingMapper">
    <resultMap id="BaseResultMap" type="com.goochou.p2b.model.ProjectActivitySetting">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="project_id" jdbcType="INTEGER" property="projectId"/>
        <result column="period" jdbcType="INTEGER" property="period"/>
        <result column="win_number" jdbcType="INTEGER" property="winNumber"/>
        <result column="user_id" jdbcType="INTEGER" property="userId"/>
        <result column="true_name" jdbcType="VARCHAR" property="trueName"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="open_time" jdbcType="TIMESTAMP" property="openTime"/>
        <result column="operate_id" jdbcType="INTEGER" property="operateId"/>
        <result column="operate_name" jdbcType="VARCHAR" property="operateName"/>
    </resultMap>

    <resultMap id="BaseResultVoMap" type="com.goochou.p2b.model.vo.ProjectActivitySettingVO">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="project_id" jdbcType="INTEGER" property="projectId"/>
        <result column="period" jdbcType="INTEGER" property="period"/>
        <result column="win_number" jdbcType="INTEGER" property="winNumber"/>
        <result column="user_id" jdbcType="INTEGER" property="userId"/>
        <result column="true_name" jdbcType="VARCHAR" property="trueName"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="open_time" jdbcType="TIMESTAMP" property="openTime"/>
        <result column="operate_id" jdbcType="INTEGER" property="operateId"/>
        <result column="operate_name" jdbcType="VARCHAR" property="operateName"/>
        <result column="status" jdbcType="VARCHAR" property="status"/>
        <result column="title" jdbcType="VARCHAR" property="projectName"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        id, project_id, period, win_number, user_id, true_name, create_time, update_time,
        open_time, operate_id, operate_name
    </sql>
    <select id="selectByExample" parameterType="com.goochou.p2b.model.ProjectActivitySettingExample"
            resultMap="BaseResultMap">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from project_activity_setting
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select
        <include refid="Base_Column_List"/>
        from project_activity_setting
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        delete from project_activity_setting
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="com.goochou.p2b.model.ProjectActivitySettingExample">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        delete from project_activity_setting
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.goochou.p2b.model.ProjectActivitySetting">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        insert into project_activity_setting (id, project_id, period,
        win_number, user_id, true_name,
        create_time, update_time, open_time,
        operate_id, operate_name)
        values (#{id,jdbcType=INTEGER}, #{projectId,jdbcType=INTEGER}, #{period,jdbcType=INTEGER},
        #{winNumber,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{trueName,jdbcType=VARCHAR},
        #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{openTime,jdbcType=TIMESTAMP},
        #{operateId,jdbcType=INTEGER}, #{operateName,jdbcType=VARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="com.goochou.p2b.model.ProjectActivitySetting">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        insert into project_activity_setting
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="projectId != null">
                project_id,
            </if>
            <if test="period != null">
                period,
            </if>
            <if test="winNumber != null">
                win_number,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="trueName != null">
                true_name,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="openTime != null">
                open_time,
            </if>
            <if test="operateId != null">
                operate_id,
            </if>
            <if test="operateName != null">
                operate_name,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="projectId != null">
                #{projectId,jdbcType=INTEGER},
            </if>
            <if test="period != null">
                #{period,jdbcType=INTEGER},
            </if>
            <if test="winNumber != null">
                #{winNumber,jdbcType=INTEGER},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=INTEGER},
            </if>
            <if test="trueName != null">
                #{trueName,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="openTime != null">
                #{openTime,jdbcType=TIMESTAMP},
            </if>
            <if test="operateId != null">
                #{operateId,jdbcType=INTEGER},
            </if>
            <if test="operateName != null">
                #{operateName,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.goochou.p2b.model.ProjectActivitySettingExample"
            resultType="java.lang.Integer">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select count(*) from project_activity_setting
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update project_activity_setting
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.projectId != null">
                project_id = #{record.projectId,jdbcType=INTEGER},
            </if>
            <if test="record.period != null">
                period = #{record.period,jdbcType=INTEGER},
            </if>
            <if test="record.winNumber != null">
                win_number = #{record.winNumber,jdbcType=INTEGER},
            </if>
            <if test="record.userId != null">
                user_id = #{record.userId,jdbcType=INTEGER},
            </if>
            <if test="record.trueName != null">
                true_name = #{record.trueName,jdbcType=VARCHAR},
            </if>
            <if test="record.createTime != null">
                create_time = #{record.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.updateTime != null">
                update_time = #{record.updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.openTime != null">
                open_time = #{record.openTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.operateId != null">
                operate_id = #{record.operateId,jdbcType=INTEGER},
            </if>
            <if test="record.operateName != null">
                operate_name = #{record.operateName,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update project_activity_setting
        set id = #{record.id,jdbcType=INTEGER},
        project_id = #{record.projectId,jdbcType=INTEGER},
        period = #{record.period,jdbcType=INTEGER},
        win_number = #{record.winNumber,jdbcType=INTEGER},
        user_id = #{record.userId,jdbcType=INTEGER},
        true_name = #{record.trueName,jdbcType=VARCHAR},
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
        open_time = #{record.openTime,jdbcType=TIMESTAMP},
        operate_id = #{record.operateId,jdbcType=INTEGER},
        operate_name = #{record.operateName,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.goochou.p2b.model.ProjectActivitySetting">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update project_activity_setting
        <set>
            <if test="projectId != null">
                project_id = #{projectId,jdbcType=INTEGER},
            </if>
            <if test="period != null">
                period = #{period,jdbcType=INTEGER},
            </if>
            <if test="winNumber != null">
                win_number = #{winNumber,jdbcType=INTEGER},
            </if>
            <if test="userId != null">
                user_id = #{userId,jdbcType=INTEGER},
            </if>
            <if test="trueName != null">
                true_name = #{trueName,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="openTime != null">
                open_time = #{openTime,jdbcType=TIMESTAMP},
            </if>
            <if test="operateId != null">
                operate_id = #{operateId,jdbcType=INTEGER},
            </if>
            <if test="operateName != null">
                operate_name = #{operateName,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.goochou.p2b.model.ProjectActivitySetting">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update project_activity_setting
        set project_id = #{projectId,jdbcType=INTEGER},
        period = #{period,jdbcType=INTEGER},
        win_number = #{winNumber,jdbcType=INTEGER},
        user_id = #{userId,jdbcType=INTEGER},
        true_name = #{trueName,jdbcType=VARCHAR},
        create_time = #{createTime,jdbcType=TIMESTAMP},
        update_time = #{updateTime,jdbcType=TIMESTAMP},
        open_time = #{openTime,jdbcType=TIMESTAMP},
        operate_id = #{operateId,jdbcType=INTEGER},
        operate_name = #{operateName,jdbcType=VARCHAR}
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="dropProjectActivityRecordTable" parameterType="map">
  		drop table `project_activity_record_${period}`
  </update>

    <select id="selectProjectActivityRecordUserInfo" parameterType="map" resultType="com.goochou.p2b.model.User">
        select u.* from project_activity_record_${period} p
        inner join user u
        on p.user_id = u.id
        <if test="id != null">
            where p.id = #{id};
        </if>

    </select>

    <select id="selectProjectActivityRecordWithUserInfo" parameterType="map"
            resultType="com.goochou.p2b.model.vo.ProjectActivityRecordVO">
  	select p.*, u.phone, u.true_name, u.username, count(user_id) count from project_activity_record_${period} p
	inner join user u
	on p.user_id = u.id
	group by user_id
	limit #{start}, #{limit}
  </select>

    <select id="queryProjectActivityDetailCount" parameterType="map" resultType="java.lang.Integer">
  	select count(1) from (
	select p.user_id from project_activity_record_${period} p
		inner join user u
		on p.user_id = u.id
	group by user_id) t
  </select>

    <select id="queryProjectActivityByUser" parameterType="map"
            resultType="com.goochou.p2b.model.vo.ProjectActivityRecordVO">
	select p.*, u.phone, u.true_name from project_activity_record_${period} p
	inner join user u
	on p.user_id = u.id
	where user_id = ${userId}
  </select>


    <update id="createProjectActivityRecordTable" parameterType="map">
  		CREATE TABLE `project_activity_record_${period}` (
		  `id` int(11) NOT NULL AUTO_INCREMENT,
		  `user_id` int(11) DEFAULT NULL COMMENT '用户ID',
		  `project_id` int(11) DEFAULT NULL COMMENT '项目ID',
		  `investment_id` int(11) DEFAULT NULL COMMENT '投资ID',
		  `create_time` datetime DEFAULT NULL,
		  `update_time` datetime DEFAULT NULL COMMENT '更新时间',
		  PRIMARY KEY (`id`)
		) ENGINE=InnoDB DEFAULT CHARSET=utf8 AUTO_INCREMENT=#{increment};
  </update>


    <insert id="insertProjectActivityRecordBatch" parameterType="map">
        insert into project_activity_record_${period} (user_id, project_id, investment_id, create_time)
        values
        <foreach collection="recordList" item="item" separator=",">
            (#{item.userId}, #{item.projectId} , #{item.investmentId}, #{item.createTime})
        </foreach>
    </insert>

    <!--查询幸运号码列表-->
    <select id="findProjectActivitySettingById" parameterType="java.lang.Integer" resultMap="BaseResultVoMap">
        select
        pas.id,pas.project_id,pas.period,pas.win_number,pas.user_id,
        u.true_name,pas.create_time,pas.open_time,pas.operate_id,
        pas.operate_id,pas.operate_name,p.title,p.status
        from project_activity_setting pas LEFT JOIN user u ON pas.user_id=u.id,project p
        where 1=1
        AND
        pas.project_id = p.id
        <if test="period != null">
            AND
            pas.period = #{period,jdbcType=INTEGER}
        </if>
        order by
        pas.period DESC
        <if test="limitStart != null and limitStart&gt;-1">
            limit ${limitStart} , ${limitEnd}
        </if>
    </select>

    <!--查询幸运号列表条数-->
    <select id="queryProjectActivityRecordCountForAdmin" parameterType="java.lang.Integer"
            resultType="java.lang.Integer">
        select count(1) from project_activity_setting pas LEFT JOIN user u ON pas.user_id=u.id,project p
        where 1=1
        AND
        pas.project_id = p.id

        <if test="period != null">
            AND
            pas.period = #{period,jdbcType=INTEGER}
        </if>
        order by pas.period DESC
    </select>

    <select id="queryProjectAndActivity" parameterType="map" resultType="map">
        SELECT p.id,pas.period ,FORMAT(total_amount,0) totalAmount,FORMAT(invested_amount,0)
        investedAmount,FORMAT(total_amount-invested_amount,0) remainAmount ,
        total_amount total_amount,invested_amount invested_amount,total_amount-invested_amount remain_amount,
        CASE WHEN p.status=2 THEN '进行中'
        WHEN p.status in (3,4,5) AND win_number IS NULL THEN '待开奖'
        WHEN win_number IS NOT NULL THEN '已开奖'
        ELSE '即将开始' END `descript`,
        CASE WHEN (total_amount-invested_amount)>1000 AND `status`=2 THEN '1'
        WHEN `status`=0 THEN '2'
        ELSE 0 END `status`
        FROM project_activity_setting pas LEFT JOIN project p
        ON pas.project_id = p.id
        where 1=1
        <if test="period != null">
            and pas.period=#{period}
        </if>
        ORDER BY pas.period
    </select>

    <select id="queryProjectActivityRecordX" parameterType="map" resultType="map">
    SELECT CONCAT(SUBSTRING(pas.true_name, 1, 1), '****',
        SUBSTRING(pas.true_name, CHAR_LENGTH(pas.true_name), CHAR_LENGTH(pas.true_name) + 1)) trueName,
    pas.win_number winNumber ,COUNT(p.user_id) winNumberNo ,open_time openTime
    FROM project_activity_setting  pas LEFT JOIN  ${project_activity_record} p
    ON pas.period = RIGHT(#{project_activity_record},LENGTH(#{period}))
    WHERE pas.user_id =p.user_id
    ORDER BY pas.open_time DESC
    LIMIT 1
  </select>

    <select id="queryWinNumberDetailX" parameterType="map" resultType="map">
        SELECT pas.win_number winNumber, p.id number , p.user_id userId,
        CASE WHEN p1.status=2 THEN '进行中'
        WHEN p1.status in (3,4,5) AND win_number IS NULL THEN '待开奖'
        WHEN win_number IS NOT NULL THEN '已开奖'
        ELSE '即将开始' END `descript`
        FROM project_activity_setting pas LEFT JOIN ${project_activity_record} p
        ON pas.period=RIGHT(#{project_activity_record},LENGTH(#{period}))
        <if test="userId!=null">
            AND p.user_id= #{userId}
        </if>
        LEFT JOIN project p1 ON pas.project_id = p1.id
        WHERE pas.period= #{period}
        ORDER BY p.id
    </select>

</mapper>