<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.goochou.p2b.dao.UserSignAwardMapper">
  <resultMap id="BaseResultMap" type="com.goochou.p2b.model.UserSignAward">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="is_invested" jdbcType="INTEGER" property="isInvested" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="prize_type" jdbcType="VARCHAR" property="prizeType" />
    <result column="count" jdbcType="INTEGER" property="count" />
    <result column="amount" jdbcType="DOUBLE" property="amount" />
    <result column="rule" jdbcType="VARCHAR" property="rule" />
    <result column="is_deleted" jdbcType="INTEGER" property="isDeleted" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="update_date" jdbcType="TIMESTAMP" property="updateDate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, is_invested, user_id, prize_type, count, amount, rule, is_deleted, create_date, 
    update_date
  </sql>
  <select id="selectByExample" parameterType="com.goochou.p2b.model.UserSignAwardExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user_sign_award
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from user_sign_award
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from user_sign_award
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.goochou.p2b.model.UserSignAwardExample">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from user_sign_award
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.goochou.p2b.model.UserSignAward">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into user_sign_award (id, is_invested, user_id, 
      prize_type, count, amount, 
      rule, is_deleted, create_date, 
      update_date)
    values (#{id,jdbcType=INTEGER}, #{isInvested,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, 
      #{prizeType,jdbcType=VARCHAR}, #{count,jdbcType=INTEGER}, #{amount,jdbcType=DOUBLE}, 
      #{rule,jdbcType=VARCHAR}, #{isDeleted,jdbcType=INTEGER}, #{createDate,jdbcType=TIMESTAMP}, 
      #{updateDate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.goochou.p2b.model.UserSignAward">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into user_sign_award
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="isInvested != null">
        is_invested,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="prizeType != null">
        prize_type,
      </if>
      <if test="count != null">
        count,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="rule != null">
        rule,
      </if>
      <if test="isDeleted != null">
        is_deleted,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="updateDate != null">
        update_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="isInvested != null">
        #{isInvested,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="prizeType != null">
        #{prizeType,jdbcType=VARCHAR},
      </if>
      <if test="count != null">
        #{count,jdbcType=INTEGER},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=DOUBLE},
      </if>
      <if test="rule != null">
        #{rule,jdbcType=VARCHAR},
      </if>
      <if test="isDeleted != null">
        #{isDeleted,jdbcType=INTEGER},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.goochou.p2b.model.UserSignAwardExample" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from user_sign_award
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update user_sign_award
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.isInvested != null">
        is_invested = #{record.isInvested,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.prizeType != null">
        prize_type = #{record.prizeType,jdbcType=VARCHAR},
      </if>
      <if test="record.count != null">
        count = #{record.count,jdbcType=INTEGER},
      </if>
      <if test="record.amount != null">
        amount = #{record.amount,jdbcType=DOUBLE},
      </if>
      <if test="record.rule != null">
        rule = #{record.rule,jdbcType=VARCHAR},
      </if>
      <if test="record.isDeleted != null">
        is_deleted = #{record.isDeleted,jdbcType=INTEGER},
      </if>
      <if test="record.createDate != null">
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateDate != null">
        update_date = #{record.updateDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update user_sign_award
    set id = #{record.id,jdbcType=INTEGER},
      is_invested = #{record.isInvested,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      prize_type = #{record.prizeType,jdbcType=VARCHAR},
      count = #{record.count,jdbcType=INTEGER},
      amount = #{record.amount,jdbcType=DOUBLE},
      rule = #{record.rule,jdbcType=VARCHAR},
      is_deleted = #{record.isDeleted,jdbcType=INTEGER},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      update_date = #{record.updateDate,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.goochou.p2b.model.UserSignAward">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update user_sign_award
    <set>
      <if test="isInvested != null">
        is_invested = #{isInvested,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="prizeType != null">
        prize_type = #{prizeType,jdbcType=VARCHAR},
      </if>
      <if test="count != null">
        count = #{count,jdbcType=INTEGER},
      </if>
      <if test="amount != null">
        amount = #{amount,jdbcType=DOUBLE},
      </if>
      <if test="rule != null">
        rule = #{rule,jdbcType=VARCHAR},
      </if>
      <if test="isDeleted != null">
        is_deleted = #{isDeleted,jdbcType=INTEGER},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null">
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.goochou.p2b.model.UserSignAward">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update user_sign_award
    set is_invested = #{isInvested,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      prize_type = #{prizeType,jdbcType=VARCHAR},
      count = #{count,jdbcType=INTEGER},
      amount = #{amount,jdbcType=DOUBLE},
      rule = #{rule,jdbcType=VARCHAR},
      is_deleted = #{isDeleted,jdbcType=INTEGER},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      update_date = #{updateDate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <insert id="insertSelectiveBatch" parameterType="list">
       insert into user_sign_award 
       (is_invested, user_id, prize_type, count, amount, rule, is_deleted, create_date, 
    update_date)
       VALUES
       <foreach collection="list" item="award" separator=",">
           (
           #{award.isInvested},
           #{award.userId},
           #{award.prizeType},
           #{award.count},
           #{award.amount},
           #{award.rule},
           #{award.isDeleted},
           #{award.createDate},
           #{award.updateDate}
           )
       </foreach>
   </insert>
  
  <select id="queryUserSignAwardList" parameterType="map" resultType="map">
  
  	select DATE_FORMAT(create_date, '%Y-%m-%d') time, prize_type type, amount from user_sign_award where user_id = #{userId}
	union all
	select DATE_FORMAT(time, '%Y-%m-%d'), type, amount from trade_record where user_id = #{userId} and type = 11
	order by time desc
	limit #{limit}, #{offset}
  </select>
  
  
  <select id="queryUserSignAwardCount" parameterType="map" resultType="java.lang.Integer">
  	select count(1) count from (
	select create_date, prize_type, amount from user_sign_award where user_id = #{userId}
	union all
	select time, type, amount from trade_record where user_id = #{userId} and type = 11) t
  </select>
  
</mapper>