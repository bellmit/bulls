<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.goochou.p2b.dao.InvestmentViewMapper">
  <resultMap id="BaseResultMap" type="com.goochou.p2b.model.InvestmentView">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <result column="id" jdbcType="INTEGER" property="id" />
    <result column="order_no" jdbcType="VARCHAR" property="orderNo" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="product_id" jdbcType="INTEGER" property="productId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="project_id" jdbcType="INTEGER" property="projectId" />
    <result column="amount" jdbcType="DOUBLE" property="amount" />
    <result column="interest_amount" jdbcType="DOUBLE" property="interestAmount" />
    <result column="balance_pay_money" jdbcType="DECIMAL" property="balancePayMoney" />
    <result column="rate_coupon_id" jdbcType="INTEGER" property="rateCouponId" />
    <result column="hongbao_id" jdbcType="INTEGER" property="hongbaoId" />
    <result column="hongbao_money" jdbcType="DECIMAL" property="hongbaoMoney" />
    <result column="remain_amount" jdbcType="DECIMAL" property="remainAmount" />
    <result column="client" jdbcType="VARCHAR" property="client" />
    <result column="pay_status" jdbcType="INTEGER" property="payStatus" />
    <result column="order_status" jdbcType="INTEGER" property="orderStatus" />
    <result column="add_interest" jdbcType="DOUBLE" property="addInterest" />
    <result column="version" jdbcType="INTEGER" property="version" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="update_date" jdbcType="TIMESTAMP" property="updateDate" />
    <result column="deadline" jdbcType="TIMESTAMP" property="deadline" />
    <result column="due_time" jdbcType="TIMESTAMP" property="dueTime" />
    <result column="pay_time" jdbcType="TIMESTAMP" property="payTime" />
    <result column="buy_back_time" jdbcType="TIMESTAMP" property="buyBackTime" />
    <result column="department_id" jdbcType="INTEGER" property="departmentId" />
    <result column="inviter_user_id" jdbcType="INTEGER" property="inviterUserId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, order_no, type, product_id, user_id, project_id, amount, interest_amount, balance_pay_money, 
    rate_coupon_id, hongbao_id, hongbao_money, remain_amount, client, pay_status, order_status, 
    add_interest, version, create_date, update_date, deadline, due_time, pay_time, buy_back_time, 
    department_id, inviter_user_id
  </sql>
  <select id="selectByExample" parameterType="com.goochou.p2b.model.InvestmentViewExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from investment_view
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart&gt;-1">
      limit ${limitStart} , ${limitEnd}
    </if>
  </select>
  <select id="countByExample" parameterType="com.goochou.p2b.model.InvestmentViewExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from investment_view
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update investment_view
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.orderNo != null">
        order_no = #{record.orderNo,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.productId != null">
        product_id = #{record.productId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.projectId != null">
        project_id = #{record.projectId,jdbcType=INTEGER},
      </if>
      <if test="record.amount != null">
        amount = #{record.amount,jdbcType=DOUBLE},
      </if>
      <if test="record.interestAmount != null">
        interest_amount = #{record.interestAmount,jdbcType=DOUBLE},
      </if>
      <if test="record.balancePayMoney != null">
        balance_pay_money = #{record.balancePayMoney,jdbcType=DECIMAL},
      </if>
      <if test="record.rateCouponId != null">
        rate_coupon_id = #{record.rateCouponId,jdbcType=INTEGER},
      </if>
      <if test="record.hongbaoId != null">
        hongbao_id = #{record.hongbaoId,jdbcType=INTEGER},
      </if>
      <if test="record.hongbaoMoney != null">
        hongbao_money = #{record.hongbaoMoney,jdbcType=DECIMAL},
      </if>
      <if test="record.remainAmount != null">
        remain_amount = #{record.remainAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.client != null">
        client = #{record.client,jdbcType=VARCHAR},
      </if>
      <if test="record.payStatus != null">
        pay_status = #{record.payStatus,jdbcType=INTEGER},
      </if>
      <if test="record.orderStatus != null">
        order_status = #{record.orderStatus,jdbcType=INTEGER},
      </if>
      <if test="record.addInterest != null">
        add_interest = #{record.addInterest,jdbcType=DOUBLE},
      </if>
      <if test="record.version != null">
        version = #{record.version,jdbcType=INTEGER},
      </if>
      <if test="record.createDate != null">
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateDate != null">
        update_date = #{record.updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.deadline != null">
        deadline = #{record.deadline,jdbcType=TIMESTAMP},
      </if>
      <if test="record.dueTime != null">
        due_time = #{record.dueTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.payTime != null">
        pay_time = #{record.payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.buyBackTime != null">
        buy_back_time = #{record.buyBackTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.departmentId != null">
        department_id = #{record.departmentId,jdbcType=INTEGER},
      </if>
      <if test="record.inviterUserId != null">
        inviter_user_id = #{record.inviterUserId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update investment_view
    set id = #{record.id,jdbcType=INTEGER},
      order_no = #{record.orderNo,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=INTEGER},
      product_id = #{record.productId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      project_id = #{record.projectId,jdbcType=INTEGER},
      amount = #{record.amount,jdbcType=DOUBLE},
      interest_amount = #{record.interestAmount,jdbcType=DOUBLE},
      balance_pay_money = #{record.balancePayMoney,jdbcType=DECIMAL},
      rate_coupon_id = #{record.rateCouponId,jdbcType=INTEGER},
      hongbao_id = #{record.hongbaoId,jdbcType=INTEGER},
      hongbao_money = #{record.hongbaoMoney,jdbcType=DECIMAL},
      remain_amount = #{record.remainAmount,jdbcType=DECIMAL},
      client = #{record.client,jdbcType=VARCHAR},
      pay_status = #{record.payStatus,jdbcType=INTEGER},
      order_status = #{record.orderStatus,jdbcType=INTEGER},
      add_interest = #{record.addInterest,jdbcType=DOUBLE},
      version = #{record.version,jdbcType=INTEGER},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      update_date = #{record.updateDate,jdbcType=TIMESTAMP},
      deadline = #{record.deadline,jdbcType=TIMESTAMP},
      due_time = #{record.dueTime,jdbcType=TIMESTAMP},
      pay_time = #{record.payTime,jdbcType=TIMESTAMP},
      buy_back_time = #{record.buyBackTime,jdbcType=TIMESTAMP},
      department_id = #{record.departmentId,jdbcType=INTEGER},
      inviter_user_id = #{record.inviterUserId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>

  <!--                                                                            -->
  <select id="sumAmountByExample" parameterType="com.goochou.p2b.model.InvestmentViewExample" resultType="java.lang.Double">
    select sum(amount) from investment_view
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>

  <select id="countUserByExample" parameterType="com.goochou.p2b.model.InvestmentViewExample" resultType="java.lang.Long">
    select count(*)
    from (
    select user_id
    from investment_view
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    group by user_id
    )user
  </select>
  <select id="listUserByExample" resultType="java.lang.Long">

    select user_id
    from investment_view
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    group by user_id

  </select>
  <select id="listInvestmentVoByExampleAndCondition" resultType="com.goochou.p2b.model.vo.InvestmentOrderVO">
    select investment_view.*,

    project.limit_days,project.ear_number,project.raise_fee,project.manage_fee,project.total_amount,project.noob,project.yue_ling,
    user.true_name,
    parent.buy_back_time parent_buy_back_time,parent.total_amount+parent.interest_amount  parent_buy_back_amount
    from (
    select *
    from investment_view
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    )investment_view
    left join user on user.id=investment_view.user_id
    <if test="params.adminId != null ">
		inner join admin_responsible 
			on admin_responsible.admin_id=${params.adminId} 
			and admin_responsible.department_id=user.department_id
    </if>
    <if test="params.departmentId != null">
    	inner join department_relation
			on department_relation.department_id=${params.departmentId} 
			and department_relation.sub_department_id=user.department_id
    </if>
    left join project_view project on investment_view.project_id=project.id
    left join project_view parent on project.parent_id=parent.id
    where 1=1
    <if test="params.yueLing != null">
      and project.yue_ling = #{params.yueLing}
    </if>
    <if test="params.keyword != null">
      and (user.username like '%${params.keyword}%' or user.true_name like '%${params.keyword}%' or user.phone like '%${params.keyword}%')
    </if>
    <if test="params.userId != null">
      and user.id = #{params.userId}
    </if>
    <if test="example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
    <if test="example.limitStart != null and example.limitStart>-1">
      limit ${example.limitStart} , ${example.limitEnd}
    </if>
  </select>

  <select id="countInvestmentVoByExampleAndCondition" resultType="java.lang.Long">
    select count(1)
    from (
    select *
    from investment_view
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    )investment_view
    left join user on user.id=investment_view.user_id
    <if test="params.adminId != null ">
		inner join admin_responsible 
			on admin_responsible.admin_id=${params.adminId} 
			and admin_responsible.department_id=user.department_id
    </if>
    <if test="params.departmentId != null">
    	inner join department_relation
			on department_relation.department_id=${params.departmentId} 
			and department_relation.sub_department_id=user.department_id
    </if>
    left join project_view project on investment_view.project_id=project.id
    left join project_view parent on project.parent_id=parent.id
    where 1=1
    <if test="params.yueLing != null">
      and project.yue_ling = #{params.yueLing}
    </if>
    <if test="params.keyword != null">
      and (user.username like '%${params.keyword}%' or user.true_name like '%${params.keyword}%' or user.phone like '%${params.keyword}%')
    </if>
    <if test="params.userId != null">
      and user.id = #{params.userId}
    </if>
  </select>

  <select id="sumInvestmentVoByExampleAndCondition" resultType="map">
    select sum( investment_view.amount) amount,
    sum( investment_view.hongbao_money) hongbao_money,
    sum( CASE WHEN project.noob = 1 THEN 1 else 0 end  ) noob_num,
    sum( CASE WHEN project.limit_days=30 THEN 1 else 0 end ) 30_num,
    sum( CASE WHEN project.limit_days=90 THEN 1 else 0 end ) 90_num,
    sum( CASE WHEN project.limit_days=180 THEN 1 else 0 end ) 180_num,
    sum( CASE WHEN project.limit_days=360 THEN 1 else 0 end ) 360_num
    from (
    select *
    from investment_view
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    )investment_view
    left join user on user.id=investment_view.user_id
    left join project_view project on investment_view.project_id=project.id
    left join project_view parent on project.parent_id=parent.id
    where 1=1
    <if test="params.yueLing != null">
      and project.yue_ling = #{params.yueLing}
    </if>
    <if test="params.keyword != null">
      and (user.username like '%${params.keyword}%' or user.true_name like '%${params.keyword}%' or user.phone like '%${params.keyword}%')
    </if>
    <if test="params.userId != null">
      and user.id = #{params.userId}
    </if>
  </select>


</mapper>