<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.goochou.p2b.dao.InterestMapper">
  <resultMap id="BaseResultMap" type="com.goochou.p2b.model.Interest">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri May 17 10:54:09 CST 2019.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="investment_id" jdbcType="INTEGER" property="investmentId" />
    <result column="interest_amount" jdbcType="DOUBLE" property="interestAmount" />
    <result column="capital_amount" jdbcType="DOUBLE" property="capitalAmount" />
    <result column="date" jdbcType="DATE" property="date" />
    <result column="stage" jdbcType="INTEGER" property="stage" />
    <result column="has_dividended" jdbcType="INTEGER" property="hasDividended" />
    <result column="add_interest" jdbcType="DOUBLE" property="addInterest" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="update_date" jdbcType="TIMESTAMP" property="updateDate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri May 17 10:54:09 CST 2019.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri May 17 10:54:09 CST 2019.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri May 17 10:54:09 CST 2019.
    -->
    id, type, user_id, investment_id, interest_amount, capital_amount, date, stage, has_dividended,
    add_interest, create_date, update_date
  </sql>
  <select id="selectByExample" parameterType="com.goochou.p2b.model.InterestExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri May 17 10:54:09 CST 2019.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from interest
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart&gt;-1">
      limit ${limitStart} , ${limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri May 17 10:54:09 CST 2019.
    -->
    select
    <include refid="Base_Column_List" />
    from interest
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri May 17 10:54:09 CST 2019.
    -->
    delete from interest
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.goochou.p2b.model.InterestExample">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri May 17 10:54:09 CST 2019.
    -->
    delete from interest
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyProperty="id" parameterType="com.goochou.p2b.model.Interest" useGeneratedKeys="true">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri May 17 10:54:09 CST 2019.
    -->
    insert into interest (id, type, user_id,
      investment_id, interest_amount, capital_amount,
      date, stage, has_dividended,
      add_interest, create_date, update_date
      )
    values (#{id,jdbcType=INTEGER}, #{type,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER},
      #{investmentId,jdbcType=INTEGER}, #{interestAmount,jdbcType=DOUBLE}, #{capitalAmount,jdbcType=DOUBLE},
      #{date,jdbcType=DATE}, #{stage,jdbcType=INTEGER}, #{hasDividended,jdbcType=INTEGER},
      #{addInterest,jdbcType=DOUBLE}, #{createDate,jdbcType=TIMESTAMP}, #{updateDate,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.goochou.p2b.model.Interest">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri May 17 10:54:09 CST 2019.
    -->
    insert into interest
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="investmentId != null">
        investment_id,
      </if>
      <if test="interestAmount != null">
        interest_amount,
      </if>
      <if test="capitalAmount != null">
        capital_amount,
      </if>
      <if test="date != null">
        date,
      </if>
      <if test="stage != null">
        stage,
      </if>
      <if test="hasDividended != null">
        has_dividended,
      </if>
      <if test="addInterest != null">
        add_interest,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="updateDate != null">
        update_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="investmentId != null">
        #{investmentId,jdbcType=INTEGER},
      </if>
      <if test="interestAmount != null">
        #{interestAmount,jdbcType=DOUBLE},
      </if>
      <if test="capitalAmount != null">
        #{capitalAmount,jdbcType=DOUBLE},
      </if>
      <if test="date != null">
        #{date,jdbcType=DATE},
      </if>
      <if test="stage != null">
        #{stage,jdbcType=INTEGER},
      </if>
      <if test="hasDividended != null">
        #{hasDividended,jdbcType=INTEGER},
      </if>
      <if test="addInterest != null">
        #{addInterest,jdbcType=DOUBLE},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.goochou.p2b.model.InterestExample" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri May 17 10:54:09 CST 2019.
    -->
    select count(*) from interest
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri May 17 10:54:09 CST 2019.
    -->
    update interest
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.investmentId != null">
        investment_id = #{record.investmentId,jdbcType=INTEGER},
      </if>
      <if test="record.interestAmount != null">
        interest_amount = #{record.interestAmount,jdbcType=DOUBLE},
      </if>
      <if test="record.capitalAmount != null">
        capital_amount = #{record.capitalAmount,jdbcType=DOUBLE},
      </if>
      <if test="record.date != null">
        date = #{record.date,jdbcType=DATE},
      </if>
      <if test="record.stage != null">
        stage = #{record.stage,jdbcType=INTEGER},
      </if>
      <if test="record.hasDividended != null">
        has_dividended = #{record.hasDividended,jdbcType=INTEGER},
      </if>
      <if test="record.addInterest != null">
        add_interest = #{record.addInterest,jdbcType=DOUBLE},
      </if>
      <if test="record.createDate != null">
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateDate != null">
        update_date = #{record.updateDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri May 17 10:54:09 CST 2019.
    -->
    update interest
    set id = #{record.id,jdbcType=INTEGER},
      type = #{record.type,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      investment_id = #{record.investmentId,jdbcType=INTEGER},
      interest_amount = #{record.interestAmount,jdbcType=DOUBLE},
      capital_amount = #{record.capitalAmount,jdbcType=DOUBLE},
      date = #{record.date,jdbcType=DATE},
      stage = #{record.stage,jdbcType=INTEGER},
      has_dividended = #{record.hasDividended,jdbcType=INTEGER},
      add_interest = #{record.addInterest,jdbcType=DOUBLE},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      update_date = #{record.updateDate,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.goochou.p2b.model.Interest">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri May 17 10:54:09 CST 2019.
    -->
    update interest
    <set>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="investmentId != null">
        investment_id = #{investmentId,jdbcType=INTEGER},
      </if>
      <if test="interestAmount != null">
        interest_amount = #{interestAmount,jdbcType=DOUBLE},
      </if>
      <if test="capitalAmount != null">
        capital_amount = #{capitalAmount,jdbcType=DOUBLE},
      </if>
      <if test="date != null">
        date = #{date,jdbcType=DATE},
      </if>
      <if test="stage != null">
        stage = #{stage,jdbcType=INTEGER},
      </if>
      <if test="hasDividended != null">
        has_dividended = #{hasDividended,jdbcType=INTEGER},
      </if>
      <if test="addInterest != null">
        add_interest = #{addInterest,jdbcType=DOUBLE},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null">
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.goochou.p2b.model.Interest">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri May 17 10:54:09 CST 2019.
    -->
    update interest
    set type = #{type,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      investment_id = #{investmentId,jdbcType=INTEGER},
      interest_amount = #{interestAmount,jdbcType=DOUBLE},
      capital_amount = #{capitalAmount,jdbcType=DOUBLE},
      date = #{date,jdbcType=DATE},
      stage = #{stage,jdbcType=INTEGER},
      has_dividended = #{hasDividended,jdbcType=INTEGER},
      add_interest = #{addInterest,jdbcType=DOUBLE},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      update_date = #{updateDate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>

    <select id="statisticsByYear" parameterType="int" resultType="map">
        SELECT
        month(interest.date) AS month,
        SUM(interest.interest_amount) AS amount
        FROM
        interest
        WHERE
        user_id = #{userId}
        AND YEAR(interest.date) = YEAR(now()) AND interest.has_dividended = 1
        GROUP BY
        MONTH(interest.date)
    </select>

    <select id="statisticsByMonth" parameterType="int" resultType="map">
        SELECT
        (i.amount * p.annualized / 365) interest,
        i.amount,
        ADDDATE(
        p.deadline,
        INTERVAL p.limit_days DAY
        ) endTime
        FROM
        investment i,
        project p
        WHERE
        i.project_id = p.id
        AND i.user_id = #{userId}
        AND ADDDATE(
        p.deadline,
        INTERVAL p.limit_days DAY
        ) &gt; now()
    </select>

    <select id="findCapitalByUserId" parameterType="map" resultType="map">
        SELECT a.*
        FROM
        (
        SELECT
        i.id id,
        i.date date,
        i.capital_amount amount,
        p.title title,
        p.id projectId
        FROM
        interest i,
        investment v,
        project p
        WHERE
        i.date IS NOT NULL
        AND i.investment_id = v.id
        AND v.project_id = p.id
        AND p.parent_id IS NULL
        AND v.user_id = #{userId}
        AND i.has_dividended = 0
        AND i.capital_amount != 0
        UNION ALL
        SELECT
        i.id id,
        i.date date,
        i.capital_amount amount,
        f.title title,
        f.id projectId
        FROM
        interest i,
        investment v,
        project p,
        project f
        WHERE i.date IS NOT NULL AND
        i.investment_id = v.id
        AND v.project_id = p.id
        AND p.parent_id IS NOT NULL
        AND p.parent_id = f.id
        AND v.user_id = #{userId}
        AND i.has_dividended = 0
        AND i.capital_amount != 0
        ) a
        ORDER BY
        date ASC
        LIMIT #{start}, #{limit}
    </select>

    <select id="findByUserId" parameterType="map" resultType="map">
        SELECT a.*
        FROM
        (
        SELECT
        i.id id,
        i.date date,
        i.interest_amount amount,
        p.title title,
        p.id projectId
        FROM
        interest i,
        investment v,
        project p
        WHERE i.date IS NOT NULL AND
        i.investment_id = v.id
        AND v.project_id = p.id
        AND p.parent_id IS NULL
        AND v.user_id = #{userId}
        AND i.has_dividended = 0
        UNION ALL
        SELECT
        i.id id,
        i.date date,
        i.interest_amount amount,
        f.title title,
        f.id projectId
        FROM
        interest i,
        investment v,
        project p,
        project f
        WHERE i.date IS NOT NULL AND
        i.investment_id = v.id
        AND v.project_id = p.id
        AND p.parent_id IS NOT NULL
        AND p.parent_id = f.id
        AND v.user_id = #{userId}
        AND i.has_dividended = 0
        ) a
        ORDER BY
        date ASC
        LIMIT #{start}, #{limit}
    </select>

    <select id="lastDividendOfInvestment" parameterType="int" resultMap="BaseResultMap">
        SELECT *
        FROM interest
        WHERE investment_id = #{investmentId} AND has_dividended = 1
        ORDER BY date DESC
        LIMIT 1;
    </select>

    <select id="lastCastOfInvestment" parameterType="int" resultMap="BaseResultMap">
        SELECT *
        FROM interest
        WHERE investment_detail_id = #{investmentDetailId} AND has_cast IN (1, 3) AND has_dividended = 1
        ORDER BY date DESC
        LIMIT 1;
    </select>

    <update id="updateByCurrent" parameterType="map">
        UPDATE interest
        SET has_dividended = 1
        WHERE investment_id = #{investmentId} AND date &lt;= #{date} AND has_cast = 0 AND has_dividended = 0
    </update>

    <delete id="deleteByAfter" parameterType="map">
        DELETE FROM interest
        WHERE date &gt; #{date} AND investment_id = #{investmentId} AND has_dividended = 0
    </delete>

    <delete id="deleteByAfterWithDetailId" parameterType="map">
        DELETE FROM interest
        WHERE date &gt; #{date} AND investment_detail_id = #{fromInvestmentDetailId} AND has_dividended = 0
    </delete>

    <insert id="addInterestBatch" parameterType="list">
        insert into interest (investment_id,user_id,interest_amount,capital_amount,date,stage,type,investment_detail_id, add_interest, has_dividended)
        VALUES
        <foreach collection="list" item="interest" separator=",">
            (#{interest.investmentId},#{interest.userId},#{interest.interestAmount},#{interest.capitalAmount},#{interest.date},#{interest.stage},#{interest.type},#{interest.investmentDetailId}

            <if test="interest.addInterest != null">
            	,#{interest.addInterest}
            </if>
            <if test="interest.addInterest == null">
            	,0
            </if>
            <if test="interest.hasDividended != null">
            	,#{interest.hasDividended}
            </if>
            <if test="interest.hasDividended == null">
            	,0
            </if>
            )
        </foreach>
    </insert>


    <select id="getUndividendedByDate" parameterType="map" resultMap="BaseResultMap">
        SELECT *
        FROM interest
        WHERE TO_DAYS(date) = TO_DAYS(#{date}) AND has_dividended = 0 AND type = 1
        LIMIT #{limit}
    </select>

    <select id="getUndividendedByDateMessage" resultType="map">
        SELECT
        u.phone,
        sum(i.`interest_amount`) + sum(i.`capital_amount`) amount,
        i.user_id userId,
        i.date
        FROM interest i
        LEFT JOIN investment v ON v.id = i.investment_id
        LEFT JOIN user u ON v.user_id = u.id
        WHERE TO_DAYS(i.date) = TO_DAYS(CURDATE()) AND i.has_dividended = 1 AND u.status = 0 AND v.`type` IN (0, 2, 4)
        GROUP BY i.`user_id`
    </select>

    <select id="getUncollectInterestAmountByUserId" parameterType="int" resultType="double">
        SELECT sum(interest.interest_amount)
        FROM interest
        WHERE has_dividended IN (0, 2) AND investment_id IN (
        SELECT i.id
        FROM investment i
        LEFT JOIN project p ON i.project_id = p.id
        WHERE p.project_type IN (0, 1) AND i.user_id = #{userId})
    </select>

    <select id="getInterestedAmountByUserId" parameterType="int" resultType="double">
        SELECT sum(i.interest_amount)
        FROM interest i, investment v
        WHERE i.investment_id = v.id AND i.has_dividended = 1 AND v.user_id = #{userId}
    </select>

    <select id="getDynamicInterestAmount" resultType="map">
        SELECT
        user_id userId,
        sum(interest_usable_amount) interestUsableAmount
        FROM
        (
        SELECT *
        FROM
        investment
        WHERE
        type = 1
        AND interest_usable_amount &gt; 0
        AND TO_DAYS(time) &lt;= TO_DAYS(DATE_SUB(NOW(), INTERVAL 1 DAY))
        ORDER BY
        time DESC
        ) a
        GROUP BY user_id
    </select>
    <select id="query" resultType="map">
        SELECT u.`phone` ,u.`true_name` trueName ,u.`username`,a.user_id id,format(sum(huo),2)
        hAmount,format(sum(ding),2) rAmount,format(sum(huo)+sum(ding),2) as tAmount from (
        SELECT user_id,sum(`interest_amount`) huo,0 as ding from interest where user_id is not null
        <if test="startTime != null and endTime != null">
            and date between date_format(#{startTime}, '%Y-%m-%d') and date_format(#{endTime}, '%Y-%m-%d')
        </if>
        <if test="startTime == null and endTime != null">
            and date &lt; date_format(#{endTime}, '%Y-%m-%d')
        </if>
        <if test="startTime != null and endTime == null">
            and date between date_format(#{startTime}, '%Y-%m-%d') and date_format(now(), '%Y-%m-%d')
        </if>
        GROUP by user_id
        union all
        SELECT inv.user_id,0 as huo,sum(`interest_amount`) ding from interest i,`investment` inv where i.user_id is null
        and i.investment_id=inv.id
        <if test="startTime != null and endTime != null">
            and date between date_format(#{startTime}, '%Y-%m-%d') and date_format(#{endTime}, '%Y-%m-%d')
        </if>
        <if test="startTime == null and endTime != null">
            and date &lt; date_format(#{endTime}, '%Y-%m-%d')
        </if>
        <if test="startTime != null and endTime == null">
            and date between date_format(#{startTime}, '%Y-%m-%d') and date_format(now(), '%Y-%m-%d')
        </if>
        GROUP by inv.user_id
        ) a ,user u where a.user_id=u.id and u.`status` =0

        <if test="keyword != null">
            and (u.username like '%${keyword}%' or u.true_name like '%${keyword}%' or u.phone like '%${keyword}%' )
        </if>
        GROUP BY a.user_id
        <if test="start !=null and end != null">
            limit #{start},#{end}
        </if>
    </select>

    <select id="queryCount" resultType="long">
        SELECT count(user_id) from (
        SELECT * from (
        SELECT user_id,sum(`interest_amount`) huo,0 as ding from interest where user_id is not null
        <if test="startTime != null and endTime != null">
            and date between date_format(#{startTime}, '%Y-%m-%d') and date_format(#{endTime}, '%Y-%m-%d')
        </if>
        <if test="startTime == null and endTime != null">
            and date &lt; date_format(#{endTime}, '%Y-%m-%d')
        </if>
        <if test="startTime != null and endTime == null">
            and date between date_format(#{startTime}, '%Y-%m-%d') and date_format(now(), '%Y-%m-%d')
        </if>
        GROUP by user_id
        union all
        SELECT inv.user_id,0 as huo,sum(`interest_amount`) ding from interest i,`investment` inv where i.user_id is null
        and i.investment_id=inv.id
        <if test="startTime != null and endTime != null">
            and date between date_format(#{startTime}, '%Y-%m-%d') and date_format(#{endTime}, '%Y-%m-%d')
        </if>
        <if test="startTime == null and endTime != null">
            and date &lt; date_format(#{endTime}, '%Y-%m-%d')
        </if>
        <if test="startTime != null and endTime == null">
            and date between date_format(#{startTime}, '%Y-%m-%d') and date_format(now(), '%Y-%m-%d')
        </if>
        GROUP by inv.user_id
        ) a ,user u where a.user_id=u.id and u.`status` =0

        <if test="keyword != null">
            and (u.username like '%${keyword}%' or u.true_name like '%${keyword}%' or u.phone like '%${keyword}%' )
        </if>
        GROUP BY a.user_id
        ) a
    </select>

    <select id="queryTotalAmount" resultType="map">
        SELECT
        IFNULL(h.huoAmount,0) huoAmount,
        IFNULL(r.regularAmount,0) regularAmount,
        IFNULL((IFNULL(h.huoAmount,0) + IFNULL(r.regularAmount,0)),0) totalAmount
        FROM
        (
        SELECT
        sum(i.interest_amount) huoAmount
        FROM
        interest i,user u
        WHERE
        i.user_id=u.id
        and u.status=0
        <if test="keyword != null">
            and (u.username like '%${keyword}%' or u.true_name like '%${keyword}%' or u.phone like '%${keyword}%' )
        </if>
        <if test="startTime != null and endTime != null">
            and i.date between date_format(#{startTime}, '%Y-%m-%d') and date_format(#{endTime}, '%Y-%m-%d')
        </if>
        <if test="startTime == null and endTime != null">
            and i.date &lt; date_format(#{endTime}, '%Y-%m-%d')
        </if>
        <if test="startTime != null and endTime == null">
            and i.date between date_format(#{startTime}, '%Y-%m-%d') and date_format(now(), '%Y-%m-%d')
        </if>
        AND has_dividended = 1
        ) h,
        (
        SELECT
        sum(ie.interest_amount) regularAmount
        FROM
        interest ie
        LEFT JOIN investment ment ON ment.id = ie.investment_id
        LEFT JOIN user us ON us.id = ment.user_id
        WHERE
        ie.user_id IS NULL
        AND us.status != 3
        <if test="keyword != null">
            and (us.username like '%${keyword}%' or us.true_name like '%${keyword}%' or us.phone like '%${keyword}%' )
        </if>
        <if test="startTime != null and endTime != null">
            and ie.date between date_format(#{startTime}, '%Y-%m-%d') and date_format(#{endTime}, '%Y-%m-%d')
        </if>
        <if test="startTime == null and endTime != null">
            and ie.date &lt; date_format(#{endTime}, '%Y-%m-%d')
        </if>
        <if test="startTime != null and endTime == null">
            and ie.date between date_format(#{startTime}, '%Y-%m-%d') and date_format(now(), '%Y-%m-%d')
        </if>
        AND ie.has_dividended = 1
        ) r
    </select>

    <select id="queryDailyExtractInterest" parameterType="int" resultType="map">
        SELECT
        u.true_name AS trueName,
        u.phone,
        u.register_time AS time,
        tr2.allinvestment,
        tr2.allrecharge,
        tr2.allwithdraw,
        a.available_balance
        FROM
        (
        SELECT
        temp.user_id,
        count(temp.user_id) cnt,
        temp.user_id AS userId
        FROM (
        SELECT
        i.user_id,
        i.date,
        i.interest_amount AS interest,
        t.time,
        t.amount
        FROM
        interest i LEFT JOIN trade_record t
        ON i.user_id = t.user_id AND t.amount = i.interest_amount
        WHERE
        i.date BETWEEN date_sub(curdate(), INTERVAL #{timeSlot+1} DAY) AND date_sub(curdate(),
        INTERVAL 1 DAY)
        AND t.type = 2
        AND DATE_FORMAT(i.date, '%Y-%m-%d') = DATE_FORMAT(t.time, '%Y-%m-%d')
        ) AS temp
        GROUP BY temp.user_id
        ) AS res
        LEFT JOIN user u ON res.user_id = u.id
        LEFT JOIN assets a ON a.user_id = res.user_id
        LEFT JOIN
        (SELECT
        user_id,
        sum(if(type = 0, amount, 0)) AS allinvestment,
        sum(if(type = 1, amount, 0)) AS allrecharge,
        sum(if(type = 2, amount, 0)) AS allwithdraw
        FROM trade_record
        GROUP BY user_id)
        AS tr2 ON tr2.user_id = res.user_id
        WHERE res.cnt &gt;= #{timeSlot+1};
    </select>

    <select id="get7Day" parameterType="int" resultMap="BaseResultMap">
        SELECT
        it.id,
        it.user_id,
        it.date,
        it.has_dividended,
        it.interest_amount interest_amount
        FROM (
        SELECT *
        FROM
        interest i
        WHERE
        i.user_id = #{userId} AND i.type = 0
        AND i.date BETWEEN DATE_SUB(NOW(), INTERVAL 7 DAY) AND NOW()
        ORDER BY
        i.date ASC
        ) it LEFT JOIN trade_record t ON it.user_id = t.user_id
        AND t.type = 11 AND it.date = date_format(t.time, '%Y-%m-%d')
    </select>

    <select id="queryLatestPaymentInfo" parameterType="map" resultType="com.goochou.p2b.model.Interest">
        SELECT *
        FROM interest
        WHERE user_id = #{userId} AND date = current_date() AND capital_amount &gt; 0 AND has_dividended = 0
        <if test="investmentId != null">
            and investment_id = #{investmentId}
        </if>
        <if test="investmentDetailId != null">
            and investment_detail_id = #{investmentDetailId}
        </if>
        LIMIT 0, 1
    </select>

    <select id="detailByUser" parameterType="map" resultType="com.goochou.p2b.model.Interest">
        select * from (
        select * from interest i where i.user_id=#{userId}
        <if test="startTime != null and endTime != null">
            and date between date_format(#{startTime}, '%Y-%m-%d') and date_format(#{endTime}, '%Y-%m-%d')
        </if>
        <if test="startTime == null and endTime != null">
            and date &lt; date_format(#{endTime}, '%Y-%m-%d')
        </if>
        <if test="startTime != null and endTime == null">
            and date between date_format(#{startTime}, '%Y-%m-%d') and date_format(now(), '%Y-%m-%d')
        </if>
        union ALL
        select i2.* from interest i2
        left join investment i3 on i2.investment_id=i3.id
        where i3.user_id=#{userId}
        <if test="startTime != null and endTime != null">
            and date between date_format(#{startTime}, '%Y-%m-%d') and date_format(#{endTime}, '%Y-%m-%d')
        </if>
        <if test="startTime == null and endTime != null">
            and date &lt; date_format(#{endTime}, '%Y-%m-%d')
        </if>
        <if test="startTime != null and endTime == null">
            and date between date_format(#{startTime}, '%Y-%m-%d') and date_format(now(), '%Y-%m-%d')
        </if>
        ) a order by date desc
        <if test="start != null and limit != null">
            limit #{start}, #{limit}
        </if>
    </select>

    <select id="detailCount" parameterType="int" resultType="int">
        select count(id) from (
        select * from interest i where i.user_id=#{userId}
        <if test="startTime != null and endTime != null">
            and date between date_format(#{startTime}, '%Y-%m-%d') and date_format(#{endTime}, '%Y-%m-%d')
        </if>
        <if test="startTime == null and endTime != null">
            and date &lt; date_format(#{endTime}, '%Y-%m-%d')
        </if>
        <if test="startTime != null and endTime == null">
            and date between date_format(#{startTime}, '%Y-%m-%d') and date_format(now(), '%Y-%m-%d')
        </if>
        union ALL
        select i2.* from interest i2
        left join investment i3 on i2.investment_id=i3.id
        where i3.user_id=#{userId}
        <if test="startTime != null and endTime != null">
            and date between date_format(#{startTime}, '%Y-%m-%d') and date_format(#{endTime}, '%Y-%m-%d')
        </if>
        <if test="startTime == null and endTime != null">
            and date &lt; date_format(#{endTime}, '%Y-%m-%d')
        </if>
        <if test="startTime != null and endTime == null">
            and date between date_format(#{startTime}, '%Y-%m-%d') and date_format(now(), '%Y-%m-%d')
        </if>
        ) a
    </select>

    <select id="getCountByTime" resultType="int">

    </select>


    <select id="selectUserPaymentList" parameterType="map" resultType="map">
        SELECT
        u.username,u.id,
        u.true_name,
        u.phone,
        i.interest_amount interest,
        i.capital_amount capital,
        v.time,
        case when pt.id is null then i.date
        when pt.id is not null then date_add(v.time,INTERVAL pt.out_days+1 day) end date
        ,case when pt.id is null then '否'
        when pt.id is not null then '是' end flag,
        IFNULL(iii.todayAmount,0) todayAmount,
        (select true_name from user_admin where id in (select admin_id from customer_list where user_id=i.user_id)) cusName
        FROM
        interest i
        LEFT JOIN investment v ON v.id = i.investment_id
        LEFT JOIN product pt on pt.id = v.product_id
        LEFT JOIN user u ON v.user_id = u.id
        left join (select sum(ii.amount) todayAmount,ii.user_id from investment ii where TO_DAYS(ii.time) =
        TO_DAYS(CURDATE()) group by ii.user_id) iii on i.user_id=iii.user_id
        WHERE
        u.status =0
        <if test="adminId != null">
            and (i.user_id in (select user_id from customer_list cl join user_admin ua on cl.admin_id=ua.id where (ua.parent_id=#{adminId} or cl.admin_id=#{adminId})))
        </if>
        <if test="keyword != null">
            and (username like '%${keyword}%' or true_name like '%${keyword}%' or phone like '%${keyword}%')
        </if>
        <if test="startTime != null">
            AND TO_DAYS(i.date) &gt;= TO_DAYS(#{startTime})
        </if>
        <if test="endTime != null">
            AND TO_DAYS(i.date) &lt;= TO_DAYS(#{endTime})
        </if>

        AND i.capital_amount != 0 order by i.date desc
        <if test="start != null and limit != null">
            limit #{start}, #{limit}
        </if>
    </select>
    <select id="selectUserPaymentCount" parameterType="map" resultType="int">
        SELECT
        count(*)
        FROM
        interest i
        LEFT JOIN investment v ON v.id = i.investment_id
        LEFT JOIN user u ON v.user_id = u.id
        WHERE
        u.status =0
        <if test="adminId != null">
            and (i.user_id in (select user_id from customer_list cl join user_admin ua on cl.admin_id=ua.id where (ua.parent_id=#{adminId} or cl.admin_id=#{adminId})))
        </if>
        <if test="keyword != null">
            and (username like '%${keyword}%' or true_name like '%${keyword}%' or phone like '%${keyword}%')
        </if>
        <if test="startTime != null">
            AND TO_DAYS(i.date) &gt;= TO_DAYS(#{startTime})
        </if>
        <if test="endTime != null">
            AND TO_DAYS(i.date) &lt;= TO_DAYS(#{endTime})
        </if>
        AND i.capital_amount != 0
    </select>

    <select id="selectUserPaymentSum" parameterType="map" resultType="map">
        SELECT
        sum(i.interest_amount) interest,
        sum(i.capital_amount) capital,
        sum(IFNULL(iii.todayAmount,0)) todayAmount
        FROM
        interest i
        LEFT JOIN investment v ON v.id = i.investment_id
        LEFT JOIN user u ON v.user_id = u.id
        left join (
        	select sum(ii.amount) todayAmount,ii.user_id from investment ii where TO_DAYS(ii.time) = TO_DAYS(CURDATE())
        	<if test="adminId != null">
	            and (ii.user_id in (select user_id from customer_list cl join user_admin ua on cl.admin_id=ua.id where (ua.parent_id=#{adminId} or cl.admin_id=#{adminId})))
	        </if>
        	group by ii.user_id
        ) iii on i.user_id=iii.user_id
        WHERE
        u.status =0
        <if test="adminId != null">
            and (i.user_id in (select user_id from customer_list cl join user_admin ua on cl.admin_id=ua.id where (ua.parent_id=#{adminId} or cl.admin_id=#{adminId})))
        </if>
        <if test="keyword != null">
            and (username like '%${keyword}%' or true_name like '%${keyword}%' or phone like '%${keyword}%')
        </if>
        <if test="startTime != null">
            AND TO_DAYS(i.date) &gt;= TO_DAYS(#{startTime})
        </if>
        <if test="endTime != null">
            AND TO_DAYS(i.date) &lt;= TO_DAYS(#{endTime})
        </if>

        AND i.capital_amount != 0 order by i.date desc
        <if test="start != null and limit != null">
            limit #{start}, #{limit}
        </if>
    </select>


    <select id="selectRegularInterestList" parameterType="map" resultType="com.goochou.p2b.model.Interest">
        SELECT
        t.id,
        t.investment_id,
        cast(
        (
        CASE
        WHEN t.stage = 1
        THEN
        (

        IF(
        datediff(#{now}, i.time) &gt;= 0,
        datediff(#{now}, i.time),
        0
        ) * #{annualized} / 365 * i.amount + t.interest_amount
        )
        ELSE
        t.interest_amount
        END
        ) AS DECIMAL(10, 2)) interest_amount,
        t.capital_amount,
        t.date,
        t.stage,
        t.has_dividended
        FROM
        interest t
        LEFT JOIN investment i ON t.investment_id = i.id
        WHERE
        i.project_id = #{projectId}
    </select>

    <select id="selectRegularInterestListTwo" parameterType="map" resultType="com.goochou.p2b.model.Interest">
        SELECT
        t.id,
        t.investment_id,
        cast(
        (
        CASE
        WHEN t.stage = 1
        THEN
        (

        IF(
        datediff(#{now}, i.time) &gt;= 0,
        datediff(#{now}, i.time),
        0
        ) * #{annualized} / 365 * i.amount + t.interest_amount
        )
        ELSE
        t.interest_amount
        END
        ) AS DECIMAL(10, 2)) interest_amount,
        t.capital_amount,
        t.date,
        t.stage,
        t.has_dividended
        FROM
        interest t
        LEFT JOIN investment i ON t.investment_id = i.id
        LEFT JOIN investment_detail d ON i.id = d.investment_id
        WHERE date IS NULL AND
        d.project_id = #{projectId}
    </select>


    <select id="getInterestedAmountByMonth" parameterType="map" resultType="double">
        SELECT sum(interest_amount)
        FROM interest
        WHERE has_dividended = 1 AND date_format(date, '%Y-%m') = date_format(#{date }, '%Y-%m')
    </select>


    <select id="selectFirstHuoInterestList" parameterType="map" resultType="com.goochou.p2b.model.Interest">
        SELECT
        sum(cast(
        (
        CASE
        WHEN t.stage = 1
        THEN
        (

        IF(
        datediff(#{now}, i.time) &gt;= 0,
        datediff(#{now}, i.time),
        0
        ) * #{annualized} / 365 * i.amount
        )
        ELSE
        t.interest_amount
        END
        ) AS DECIMAL(10, 2))) interest_amount,
        i.user_id
        FROM
        interest t
        LEFT JOIN investment i ON t.investment_id = i.id
        WHERE t.stage = 1 AND
        i.project_id = #{projectId}
        GROUP BY i.user_id
    </select>

    <select id="getOutDaysInterest" parameterType="int" resultMap="BaseResultMap">
        SELECT *
        FROM interest i, investment inv
        WHERE i.investment_id = inv.id AND inv.id = #{investmentId} AND i.has_dividended = 2
        AND to_days(date) &lt;= to_days(now());
    </select>

    <select id="getTodayInterest" parameterType="int" resultMap="BaseResultMap">
        SELECT *
        FROM interest
        WHERE investment_id = #{investmentId} AND to_days(date) = to_days(now()) AND type = 2;
    </select>

    <select id="getTodayPayPackageProjectInterestList" resultType="map">
        SELECT
        GROUP_CONCAT(i.id) ids,
        i.user_id userId,
        i.investment_id investmentId,
        GROUP_CONCAT(DISTINCT (id.id)) detailId,
        sum(i.interest_amount) totalInterestAmount,
        sum(i.capital_amount) totalCapitalAmount
        FROM investment_detail id, interest i, project p, project_pay_plan ppp
        WHERE p.id = ppp.project_id AND p.project_type = 5 AND p.status = 3 AND to_days(ppp.date) = to_days(now()) AND
        ppp.has_payed = 0
        AND id.id = i.investment_detail_id AND (id.project_id = p.id OR id.project_id = p.parent_id)
        AND id.status = 0 AND id.interest_usable_amount &gt; 0 AND
        (i.has_cast IN (0, 2) OR (i.has_cast_capital IN (0, 2) AND i.capital_amount &gt; 0)) AND
        to_days(i.date) &lt;= to_days(ppp.date)
        GROUP BY i.investment_id;
    </select>

    <select id="getTodayPayPackageProjectInterestListDetail" parameterType="map" resultType="map">
        select GROUP_CONCAT(i.id) ids,id.interest_usable_amount detailAmount,sum(i.capital_amount) capitalAmount
        from investment_detail id,interest i ,project p,project_pay_plan ppp
        WHERE p.id = ppp.project_id AND p.project_type = 5 AND p.status = 3 AND to_days(ppp.date) = to_days(now()) and
        ppp.has_payed=0
        and id.id=i.investment_detail_id and (id.project_id=p.id or id.project_id=p.parent_id)
        and id.status =0 and id.interest_usable_amount&gt;0
        and to_days(i.date)&lt;=to_days(ppp.date) and id.id=#{investmentDetailId}
        <choose>
            <when test="isInterest">
                and i.has_cast in(0,2)
            </when>
            <otherwise>
                and i.has_cast_capital in(0,2)
            </otherwise>
        </choose>
        GROUP BY i.investment_detail_id;
    </select>

    <select id="getMaxCastDateByInvestmentDetailId" parameterType="int" resultType="date">
        SELECT max(date)
        FROM interest
        WHERE investment_detail_id = #{investmentId} AND (has_cast = 1 OR has_cast = 3);
    </select>

    <select id="getCompoundFailedList" resultMap="BaseResultMap">
        <!--利息复投失败  本金复投失败 还有一种特殊的情况，本金复投成功，但是利息并没有复投的-->
        SELECT i.* FROM interest i LEFT JOIN investment_detail inv ON i.investment_detail_id=inv.id WHERE inv.status=0
        AND has_cast=2 OR has_cast_capital=2 OR (inv.interest_usable_amount=0 AND has_cast=0);
    </select>

    <select id="queryInterestInfoByInvestemntInfo" parameterType="int" resultType="com.goochou.p2b.model.Interest">
    	select
    		id id,
    		user_id userId,
    		investment_id investmentId,
    		investment_detail_id investmentDetailId,
    		interest_amount interestAmount,
    		capital_amount capitalAmount,
    		date date
    	from
    		interest
    	where
    		has_dividended = 0
    		and
    		investment_id = #{investmentId}
    </select>

    <insert id="insertBatch" parameterType="list">

        INSERT INTO `interest`
        (
        	`id`,
        	`user_id`,
        	`investment_amount`,
        	`investment_id`,
        	`investment_detail_id`,
        	`interest_amount`,
        	`capital_amount`,
        	`date`,
        	`stage`,
        	`has_dividended`,
        	`has_cast`,
        	`has_cast_capital`,
        	`type`
        )
        VALUES
        	<foreach collection="list" item="interest" separator=",">
              	(
		        	null,
		        	#{interest.userId},
		        	NULL,
		        	#{interest.investmentId},
		        	#{interest.investmentDetailId},
		        	#{interest.interestAmount},
		        	#{interest.capitalAmount},
		        	CURRENT_DATE(),
		        	NULL,
		        	'1',
		        	'0',
		        	'0',
		        	'2'
        		)
          	</foreach>

    </insert>

	<update id="updateInterestList" parameterType="map">
        update interest
        <set>
        	<if test="date != null">
                date = #{date,jdbcType=DATE},
            </if>
            <if test="interestAmount != null">
                interest_amount = interest_amount+#{interestAmount,jdbcType=DOUBLE},
            </if>
        </set>
        where stage = #{stage,jdbcType=INTEGER} and investment_id in (select id from investment where project_id=#{projectId} and amount=#{amount} and DATE_FORMAT(time, '%Y-%m-%d')=#{investmentDateStr})
    </update>

    <select id="getInterestAmount" parameterType="int" resultType="double">
        SELECT sum(ifnull(interest_amount,0)) amount
        FROM interest
        WHERE has_dividended = 0 AND investment_id = #{investmentId}
    </select>

    <select id="queryInvestmentHasdividAmount" parameterType="int" resultType="double">
        SELECT ifnull(sum(investment_amount),0) amount
        FROM interest
        WHERE investment_id = #{investmentId} AND has_dividended = 1
    </select>

    <select id="nextInterest" parameterType="int" resultMap="BaseResultMap">
        SELECT *
        FROM interest
        WHERE investment_id = #{investmentId} AND has_dividended = 0
        ORDER BY date ASC
        LIMIT 1;
    </select>

    <select id="getInterestamountTotal" resultType="double">
    	SELECT SUM(i.interest_amount) FROM interest i
    	LEFT JOIN investment im on i.investment_id = im.id
    	LEFT JOIN project p on im.project_id = p.id
    	WHERE im.type in (0,2) and p.parent_id is null
    	and p.deadline &lt; DATE_FORMAT(CURRENT_DATE(), '%Y-%m-%01')
    	AND p.STATUS IN (3,4,5)
		and i.date&gt;=DATE_FORMAT(CURRENT_DATE(), '%Y-%m-%01')
    </select>


    <select id="lastDividendForMonthlyGain" parameterType="map" resultMap="BaseResultMap">
        SELECT *
        FROM interest
        WHERE investment_id = #{investmentId} and investment_detail_id = #{investmentDetailId} AND has_dividended = 1
        ORDER BY date DESC
        LIMIT 1;
    </select>

    <delete id="deleteByAfterForMonthlyGain" parameterType="map">
        DELETE FROM interest
        WHERE date &gt; #{date} AND investment_id = #{investmentId} and investment_detail_id = #{investmentDetailId} AND has_dividended = 0
    </delete>

    <!-- 月月盈债权转让标，待收本息查询 -->
    <select id="getMonthlyGainWaitInterest" parameterType="map" resultMap="BaseResultMap">
    	SELECT
			i.*
		FROM interest i
		WHERE
			1=1
		 <if test="hasDividended != null">
		 	and i.has_dividended=#{hasDividended}
		 </if>
		 	and i.investment_detail_id=#{investmentDetailId}
		order by i.date asc;
    </select>

    <select id="getNoDividendPayout" parameterType="int" resultType="Double">
    	SELECT IFNULL(SUM(capital_amount),0) FROM interest
    	WHERE type = 1 AND investment_detail_id IS NULL AND has_dividended = 0 AND user_id = #{userId}
    </select>
    <select id="queryInvestIntellectualList" parameterType="map" resultType="map">
	    SELECT  u.id AS userId,
	        u.username AS  userName,
	        u.phone  AS phone,
	        u.true_name AS trueName,
	        mgpp.title AS title,
			mgpp.annualized AS annualized,
			mgpp.id AS packageId,
			mgpp.add_annualized AS addAnnualized,
			mgpp.limit_days AS limitDays,
	        v.time AS time ,
			v.amount AS amount,
	        v.apply_out_time AS applyOutTime,
	        v.success_out_time AS successOutTime,
	        v.status AS status,
	        o.true_name AS  customerName
	        	FROM investment v
	        LEFT JOIN monthly_gain_project_package mgpp ON mgpp.id=v.package_id
	        LEFT JOIN `user` u ON u.id=v.user_id
	        LEFT JOIN customer_list n ON n.user_id=v.user_id
	        LEFT JOIN user_admin o on n.admin_id=o.id
	       WHERE 1=1
	       AND v.type=8
	        <if test="quitable !=null and quitable !='' and quitable == 0 ">
	            AND v.status=0  AND DATE_FORMAT(NOW(), '%Y-%m-%d %h:%i:%m') &gt; DATE_FORMAT(DATE_ADD(v.time,INTERVAL mgpp.limit_days DAY),'%Y-%m-%d %h:%i:%m')
	        </if>
	        <if test="quitable !=null and quitable !='' and quitable == 1 ">
	            AND (DATE_FORMAT(NOW(), '%Y-%m-%d %h:%i:%m') &lt; DATE_FORMAT(DATE_ADD(v.time,INTERVAL mgpp.limit_days DAY),'%Y-%m-%d %h:%i:%m') OR v.status=2)
	        </if>
	        <if test="limitDay != null">
	            AND mgpp.limit_days= #{limitDay}
	        </if>
	        <if test="startTime != null">
	            AND v.time &gt;= #{startTime}
	        </if>
	        <if test="endTime != null">
	            AND v.time &lt;= #{endTime}
	        </if>
			<if test="keyword != null and keyword != ''">
	            AND (u.username like '%${keyword}%' or u.true_name like '%${keyword}%' or u.phone like '%${keyword}%' )
	        </if>
	        <if test="adminId!=null">
	            AND n.admin_id=#{adminId}
	        </if>
	        order by v.id desc
	        <if test="start !=null and limit != null">
	            limit #{start},#{limit}
	        </if>
    </select>
    <select id="queryInvestIntellectualListCount" parameterType="map" resultType="int">
	    SELECT
	        COUNT(*)
	       FROM investment v
	        LEFT JOIN monthly_gain_project_package mgpp ON mgpp.id=v.package_id
	        LEFT JOIN `user` u ON u.id=v.user_id
	        LEFT JOIN customer_list n ON n.user_id=v.user_id
	        LEFT JOIN user_admin o on n.admin_id=o.id
	       WHERE 1=1
	       AND v.type =8
	        <if test="quitable !=null and quitable !='' and quitable == 0 ">
	            AND v.status=0  AND DATE_FORMAT(NOW(), '%Y-%m-%d %h:%i:%m') &gt; DATE_FORMAT(DATE_ADD(v.time,INTERVAL mgpp.limit_days DAY),'%Y-%m-%d %h:%i:%m')
	        </if>
	        <if test="quitable !=null and quitable !='' and quitable == 1 ">
	            AND (DATE_FORMAT(NOW(), '%Y-%m-%d %h:%i:%m') &lt; DATE_FORMAT(DATE_ADD(v.time,INTERVAL mgpp.limit_days DAY),'%Y-%m-%d %h:%i:%m') OR v.status=2)
	        </if>
	        <if test="limitDay != null">
	            AND mgpp.limit_days= #{limitDay}
	        </if>
	        <if test="startTime != null">
	            AND v.time &gt;= #{startTime}
	        </if>
	        <if test="endTime != null">
	            AND v.time &lt;= #{endTime}
	        </if>
			<if test="keyword != null and keyword != ''">
	            AND (u.username like '%${keyword}%' or u.true_name like '%${keyword}%' or u.phone like '%${keyword}%' )
	        </if>
	        <if test="adminId!=null">
	            AND n.admin_id=#{adminId}
	        </if>
    </select>
     <select id="queryInvestIntellectualListCountTotalAmount" parameterType="map" resultType="double">
        SELECT
	        sum(v.amount)
	       FROM investment v
	        LEFT JOIN monthly_gain_project_package mgpp ON mgpp.id=v.package_id
	        LEFT JOIN `user` u ON u.id=v.user_id
	        LEFT JOIN customer_list n ON n.user_id=v.user_id
	        LEFT JOIN user_admin o on n.admin_id=o.id
	       WHERE 1=1
	       AND v.type =8
	        <if test="quitable !=null and quitable !='' and quitable == 0 ">
	            AND v.status=0  AND DATE_FORMAT(NOW(), '%Y-%m-%d %h:%i:%m') &gt; DATE_FORMAT(DATE_ADD(v.time,INTERVAL mgpp.limit_days DAY),'%Y-%m-%d %h:%i:%m')
	        </if>
	        <if test="quitable !=null and quitable !='' and quitable == 1 ">
	            AND (DATE_FORMAT(NOW(), '%Y-%m-%d %h:%i:%m') &lt; DATE_FORMAT(DATE_ADD(v.time,INTERVAL mgpp.limit_days DAY),'%Y-%m-%d %h:%i:%m') OR v.status=2)
	        </if>
	        <if test="limitDay != null">
	            AND mgpp.limit_days= #{limitDay}
	        </if>
	        <if test="startTime != null">
	            AND v.time &gt;= #{startTime}
	        </if>
	        <if test="endTime != null">
	            AND v.time &lt;= #{endTime}
	        </if>
			<if test="keyword != null and keyword != ''">
	            AND (u.username like '%${keyword}%' or u.true_name like '%${keyword}%' or u.phone like '%${keyword}%' )
	        </if>
	        <if test="adminId!=null">
	            AND n.admin_id=#{adminId}
	        </if>
    </select>
    <select id="getCapitalUndividendedByDate" parameterType="map" resultMap="BaseResultMap">
        SELECT *
        FROM interest
        WHERE TO_DAYS(date) = TO_DAYS(#{date}) AND has_dividended = 0 AND type = 1 and capital_amount&gt;0 and investment_detail_id is null
        LIMIT #{limit}
    </select>
    <select id="getTotalCapital" parameterType="map" resultType="Double">
     SELECT IFNULL(SUM(i.capital_amount),0.00) FROM interest i LEFT JOIN investment iv ON iv.id=i.investment_id WHERE iv.type=0 AND i.user_id=#{userId} AND i.has_dividended = 0 AND date&gt;=#{date}
    </select>

    <select id="queryIterestBackAmount" parameterType="String" resultMap="BaseResultMap">
    	select * from interest a join `user` b on a.user_id=b.id where b.`status`=0 and a.date=#{date} AND type = 1
    </select>


    <select id="getInterestListByInvestId"  resultType="map">
    	SELECT
			interest.*,
			invest.order_no,
			project.title,
			FORMAT(project.annualized,2) as annualized,
			project.limit_days,
			project.total_amount
		FROM
			interest interest
			INNER JOIN investment invest ON interest.investment_id = invest.id
			LEFT JOIN project project on invest.project_id = project.id
			where 1=1 and interest.investment_id = #{investId} and interest.user_id = #{userId}
    </select>

    <select id="queryInterestList" parameterType="map" resultType="com.goochou.p2b.model.vo.InterestVO">
        SELECT
          a.*,
          b.`true_name`,
          b.phone,
          c.`order_no`,
          c.`interest_amount` interest_amount_total,
          c.`create_date` investment_create_date
        FROM
          interest a
          INNER JOIN `user` b
            ON b.id = a.`user_id`
	    <if test="adminId != null ">
			inner join admin_responsible 
				on admin_responsible.admin_id=${adminId} 
				and admin_responsible.department_id=b.department_id
	    </if>
	    <if test="departmentId != null">
	    	inner join department_relation
				on department_relation.department_id=${departmentId} 
				and department_relation.sub_department_id=b.department_id
	    </if>
          LEFT JOIN investment c
            ON c.id = a.`investment_id`
        where 1=1
        <if test="hasDividended != null">
            AND a.has_dividended = #{hasDividended}
        </if>
        <if test="keyword != null and keyword != ''">
            AND (b.username like '%${keyword}%' or b.true_name like '%${keyword}%' or b.phone like '%${keyword}%' )
        </if>
        <if test="orderNo != null and orderNo != ''">
            AND c.order_no like '%${orderNo}%'
        </if>
        <if test="interestStartDate != null">
            AND a.update_date &gt;= #{interestStartDate}
        </if>
        <if test="interestEndDate != null">
            AND a.update_date &lt;= #{interestEndDate}
        </if>
        <if test="investmentStartDate != null">
            AND c.create_date &gt;= #{investmentStartDate}
        </if>
        <if test="investmentEndDate != null">
            AND c.create_date &lt;= #{investmentEndDate}
        </if>
        <if test="start !=null and limit != null">
            limit #{start},#{limit}
        </if>
    </select>

    <select id="queryInterestCount" parameterType="map" resultType="int">
        SELECT count(1) FROM
          interest a
          INNER JOIN `user` b
            ON b.id = a.`user_id`
        <if test="adminId != null ">
			inner join admin_responsible 
				on admin_responsible.admin_id=${adminId} 
				and admin_responsible.department_id=b.department_id
	    </if>
	    <if test="departmentId != null">
	    	inner join department_relation
				on department_relation.department_id=${departmentId} 
				and department_relation.sub_department_id=b.department_id
	    </if>
          LEFT JOIN investment c
            ON c.id = a.`investment_id`
        where 1=1
        <if test="hasDividended != null">
            AND a.has_dividended = #{hasDividended}
        </if>
        <if test="keyword != null and keyword != ''">
            AND (b.username like '%${keyword}%' or b.true_name like '%${keyword}%' or b.phone like '%${keyword}%' )
        </if>
        <if test="orderNo != null and orderNo != ''">
            AND c.order_no like '%${orderNo}%'
        </if>
        <if test="interestStartDate != null">
            AND a.update_date &gt;= #{interestStartDate}
        </if>
        <if test="interestEndDate != null">
            AND a.update_date &lt;= #{interestEndDate}
        </if>
        <if test="investmentStartDate != null">
            AND c.create_date &gt;= #{investmentStartDate}
        </if>
        <if test="investmentEndDate != null">
            AND c.create_date &lt;= #{investmentEndDate}
        </if>
    </select>
</mapper>
