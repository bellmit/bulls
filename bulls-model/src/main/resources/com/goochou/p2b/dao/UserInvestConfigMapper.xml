<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.goochou.p2b.dao.UserInvestConfigMapper">
  <resultMap id="BaseResultMap" type="com.goochou.p2b.model.UserInvestConfig">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="project_type" jdbcType="INTEGER" property="projectType" />
    <result column="max_amount" jdbcType="DOUBLE" property="maxAmount" />
    <result column="need_invest_amount" jdbcType="DOUBLE" property="needInvestAmount" />
    <result column="invest_amount" jdbcType="DOUBLE" property="investAmount" />
    <result column="limit_days" jdbcType="INTEGER" property="limitDays" />
    <result column="hb_amount" jdbcType="DOUBLE" property="hbAmount" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="cannel_config" jdbcType="INTEGER" property="cannelConfig" />
    <result column="version" jdbcType="INTEGER" property="version" />
    <result column="annualized" jdbcType="DOUBLE" property="annualized" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, user_id, project_type, max_amount, need_invest_amount, invest_amount, limit_days, 
    hb_amount, status, create_time, update_time, cannel_config, version, annualized
  </sql>
  <select id="selectByExample" parameterType="com.goochou.p2b.model.UserInvestConfigExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user_invest_config
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from user_invest_config
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from user_invest_config
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.goochou.p2b.model.UserInvestConfigExample">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from user_invest_config
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.goochou.p2b.model.UserInvestConfig">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into user_invest_config (id, user_id, project_type, 
      max_amount, need_invest_amount, invest_amount, 
      limit_days, hb_amount, status, 
      create_time, update_time, cannel_config, 
      version, annualized)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{projectType,jdbcType=INTEGER}, 
      #{maxAmount,jdbcType=DOUBLE}, #{needInvestAmount,jdbcType=DOUBLE}, #{investAmount,jdbcType=DOUBLE}, 
      #{limitDays,jdbcType=INTEGER}, #{hbAmount,jdbcType=DOUBLE}, #{status,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{cannelConfig,jdbcType=INTEGER}, 
      #{version,jdbcType=INTEGER}, #{annualized,jdbcType=DOUBLE})
  </insert>
  <insert id="insertSelective" parameterType="com.goochou.p2b.model.UserInvestConfig">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into user_invest_config
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="projectType != null">
        project_type,
      </if>
      <if test="maxAmount != null">
        max_amount,
      </if>
      <if test="needInvestAmount != null">
        need_invest_amount,
      </if>
      <if test="investAmount != null">
        invest_amount,
      </if>
      <if test="limitDays != null">
        limit_days,
      </if>
      <if test="hbAmount != null">
        hb_amount,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="cannelConfig != null">
        cannel_config,
      </if>
      <if test="version != null">
        version,
      </if>
      <if test="annualized != null">
        annualized,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="projectType != null">
        #{projectType,jdbcType=INTEGER},
      </if>
      <if test="maxAmount != null">
        #{maxAmount,jdbcType=DOUBLE},
      </if>
      <if test="needInvestAmount != null">
        #{needInvestAmount,jdbcType=DOUBLE},
      </if>
      <if test="investAmount != null">
        #{investAmount,jdbcType=DOUBLE},
      </if>
      <if test="limitDays != null">
        #{limitDays,jdbcType=INTEGER},
      </if>
      <if test="hbAmount != null">
        #{hbAmount,jdbcType=DOUBLE},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="cannelConfig != null">
        #{cannelConfig,jdbcType=INTEGER},
      </if>
      <if test="version != null">
        #{version,jdbcType=INTEGER},
      </if>
      <if test="annualized != null">
        #{annualized,jdbcType=DOUBLE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.goochou.p2b.model.UserInvestConfigExample" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from user_invest_config
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update user_invest_config
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.projectType != null">
        project_type = #{record.projectType,jdbcType=INTEGER},
      </if>
      <if test="record.maxAmount != null">
        max_amount = #{record.maxAmount,jdbcType=DOUBLE},
      </if>
      <if test="record.needInvestAmount != null">
        need_invest_amount = #{record.needInvestAmount,jdbcType=DOUBLE},
      </if>
      <if test="record.investAmount != null">
        invest_amount = #{record.investAmount,jdbcType=DOUBLE},
      </if>
      <if test="record.limitDays != null">
        limit_days = #{record.limitDays,jdbcType=INTEGER},
      </if>
      <if test="record.hbAmount != null">
        hb_amount = #{record.hbAmount,jdbcType=DOUBLE},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.cannelConfig != null">
        cannel_config = #{record.cannelConfig,jdbcType=INTEGER},
      </if>
      <if test="record.version != null">
        version = #{record.version,jdbcType=INTEGER},
      </if>
      <if test="record.annualized != null">
        annualized = #{record.annualized,jdbcType=DOUBLE},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update user_invest_config
    set id = #{record.id,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      project_type = #{record.projectType,jdbcType=INTEGER},
      max_amount = #{record.maxAmount,jdbcType=DOUBLE},
      need_invest_amount = #{record.needInvestAmount,jdbcType=DOUBLE},
      invest_amount = #{record.investAmount,jdbcType=DOUBLE},
      limit_days = #{record.limitDays,jdbcType=INTEGER},
      hb_amount = #{record.hbAmount,jdbcType=DOUBLE},
      status = #{record.status,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      cannel_config = #{record.cannelConfig,jdbcType=INTEGER},
      version = #{record.version,jdbcType=INTEGER},
      annualized = #{record.annualized,jdbcType=DOUBLE}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.goochou.p2b.model.UserInvestConfig">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update user_invest_config
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="projectType != null">
        project_type = #{projectType,jdbcType=INTEGER},
      </if>
      <if test="maxAmount != null">
        max_amount = #{maxAmount,jdbcType=DOUBLE},
      </if>
      <if test="needInvestAmount != null">
        need_invest_amount = #{needInvestAmount,jdbcType=DOUBLE},
      </if>
      <if test="investAmount != null">
        invest_amount = #{investAmount,jdbcType=DOUBLE},
      </if>
      <if test="limitDays != null">
        limit_days = #{limitDays,jdbcType=INTEGER},
      </if>
      <if test="hbAmount != null">
        hb_amount = #{hbAmount,jdbcType=DOUBLE},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="cannelConfig != null">
        cannel_config = #{cannelConfig,jdbcType=INTEGER},
      </if>
      <if test="version != null">
        version = #{version,jdbcType=INTEGER},
      </if>
      <if test="annualized != null">
        annualized = #{annualized,jdbcType=DOUBLE},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.goochou.p2b.model.UserInvestConfig">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update user_invest_config
    set user_id = #{userId,jdbcType=INTEGER},
      project_type = #{projectType,jdbcType=INTEGER},
      max_amount = #{maxAmount,jdbcType=DOUBLE},
      need_invest_amount = #{needInvestAmount,jdbcType=DOUBLE},
      invest_amount = #{investAmount,jdbcType=DOUBLE},
      limit_days = #{limitDays,jdbcType=INTEGER},
      hb_amount = #{hbAmount,jdbcType=DOUBLE},
      status = #{status,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      cannel_config = #{cannelConfig,jdbcType=INTEGER},
      version = #{version,jdbcType=INTEGER},
      annualized = #{annualized,jdbcType=DOUBLE}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <update id="updateByPrimaryKeyAndVersionSelective" parameterType="com.goochou.p2b.model.UserInvestConfig">
        update user_invest_config
        <set>
            version = version + 1,
            <if test="needInvestAmount != null">
                need_invest_amount = #{needInvestAmount,jdbcType=DOUBLE},
            </if>
            <if test="investAmount != null">
                invest_amount = #{investAmount,jdbcType=DOUBLE},
            </if>
            <if test="status != null">
	        	status = #{status,jdbcType=VARCHAR},
	      	</if>
	      	<if test="updateTime != null">
        		update_time = #{updateTime,jdbcType=TIMESTAMP},
      		</if>
        </set>
        where user_id = #{userId,jdbcType=INTEGER} and version = #{version,jdbcType=INTEGER} and status='create'
    </update>
    
    <select id="getNeedInvests" parameterType="map" resultMap="BaseResultMap">
        SELECT *
        FROM user_invest_config
        WHERE need_invest_amount > 0 and `status`=#{status}
        LIMIT #{limit}
    </select>
    
    <select id="queryData" resultType="map">
    	SELECT limit_days limitDays,SUM(need_invest_amount) amount FROM user_invest_config GROUP BY limit_days
    </select>
</mapper>