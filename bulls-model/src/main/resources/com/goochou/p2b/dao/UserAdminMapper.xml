<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.goochou.p2b.dao.UserAdminMapper">
  <resultMap id="BaseResultMap" type="com.goochou.p2b.model.UserAdmin">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="true_name" jdbcType="VARCHAR" property="trueName" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="avatar_id" jdbcType="INTEGER" property="avatarId" />
    <result column="sex" jdbcType="INTEGER" property="sex" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="create_ip" jdbcType="VARCHAR" property="createIp" />
    <result column="last_login_time" jdbcType="TIMESTAMP" property="lastLoginTime" />
    <result column="last_login_ip" jdbcType="VARCHAR" property="lastLoginIp" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="update_user" jdbcType="INTEGER" property="updateUser" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="source" jdbcType="INTEGER" property="source" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="license_no" jdbcType="VARCHAR" property="licenseNo" />
    <result column="organization_no" jdbcType="VARCHAR" property="organizationNo" />
    <result column="summary" jdbcType="VARCHAR" property="summary" />
    <result column="month_plan" jdbcType="DOUBLE" property="monthPlan" />
    <result column="day_plan" jdbcType="DOUBLE" property="dayPlan" />
    <result column="error_count" jdbcType="INTEGER" property="errorCount" />
    <result column="company" jdbcType="VARCHAR" property="company" />
    <result column="parent_id" jdbcType="INTEGER" property="parentId" />
    <result column="department_id" jdbcType="INTEGER" property="departmentId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, username, true_name, password, email, phone, avatar_id, sex, create_time, create_ip, 
    last_login_time, last_login_ip, update_time, update_user, status, type, source, address, 
    license_no, organization_no, summary, month_plan, day_plan, error_count, company, 
    parent_id, department_id
  </sql>
  <select id="selectByExample" parameterType="com.goochou.p2b.model.UserAdminExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user_admin
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart&gt;-1">
      limit ${limitStart} , ${limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from user_admin
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from user_admin
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.goochou.p2b.model.UserAdminExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from user_admin
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyProperty="id" parameterType="com.goochou.p2b.model.UserAdmin" useGeneratedKeys="true">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into user_admin (id, username, true_name, 
      password, email, phone, 
      avatar_id, sex, create_time, 
      create_ip, last_login_time, last_login_ip, 
      update_time, update_user, status, 
      type, source, address, 
      license_no, organization_no, summary, 
      month_plan, day_plan, error_count, 
      company, parent_id, department_id
      )
    values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{trueName,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, 
      #{avatarId,jdbcType=INTEGER}, #{sex,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{createIp,jdbcType=VARCHAR}, #{lastLoginTime,jdbcType=TIMESTAMP}, #{lastLoginIp,jdbcType=VARCHAR}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{updateUser,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, 
      #{type,jdbcType=INTEGER}, #{source,jdbcType=INTEGER}, #{address,jdbcType=VARCHAR}, 
      #{licenseNo,jdbcType=VARCHAR}, #{organizationNo,jdbcType=VARCHAR}, #{summary,jdbcType=VARCHAR}, 
      #{monthPlan,jdbcType=DOUBLE}, #{dayPlan,jdbcType=DOUBLE}, #{errorCount,jdbcType=INTEGER}, 
      #{company,jdbcType=VARCHAR}, #{parentId,jdbcType=INTEGER}, #{departmentId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.goochou.p2b.model.UserAdmin">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into user_admin
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="trueName != null">
        true_name,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="avatarId != null">
        avatar_id,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="createIp != null">
        create_ip,
      </if>
      <if test="lastLoginTime != null">
        last_login_time,
      </if>
      <if test="lastLoginIp != null">
        last_login_ip,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="source != null">
        source,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="licenseNo != null">
        license_no,
      </if>
      <if test="organizationNo != null">
        organization_no,
      </if>
      <if test="summary != null">
        summary,
      </if>
      <if test="monthPlan != null">
        month_plan,
      </if>
      <if test="dayPlan != null">
        day_plan,
      </if>
      <if test="errorCount != null">
        error_count,
      </if>
      <if test="company != null">
        company,
      </if>
      <if test="parentId != null">
        parent_id,
      </if>
      <if test="departmentId != null">
        department_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="trueName != null">
        #{trueName,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="avatarId != null">
        #{avatarId,jdbcType=INTEGER},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createIp != null">
        #{createIp,jdbcType=VARCHAR},
      </if>
      <if test="lastLoginTime != null">
        #{lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastLoginIp != null">
        #{lastLoginIp,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="source != null">
        #{source,jdbcType=INTEGER},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="licenseNo != null">
        #{licenseNo,jdbcType=VARCHAR},
      </if>
      <if test="organizationNo != null">
        #{organizationNo,jdbcType=VARCHAR},
      </if>
      <if test="summary != null">
        #{summary,jdbcType=VARCHAR},
      </if>
      <if test="monthPlan != null">
        #{monthPlan,jdbcType=DOUBLE},
      </if>
      <if test="dayPlan != null">
        #{dayPlan,jdbcType=DOUBLE},
      </if>
      <if test="errorCount != null">
        #{errorCount,jdbcType=INTEGER},
      </if>
      <if test="company != null">
        #{company,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null">
        #{parentId,jdbcType=INTEGER},
      </if>
      <if test="departmentId != null">
        #{departmentId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.goochou.p2b.model.UserAdminExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from user_admin
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update user_admin
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.trueName != null">
        true_name = #{record.trueName,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null">
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.avatarId != null">
        avatar_id = #{record.avatarId,jdbcType=INTEGER},
      </if>
      <if test="record.sex != null">
        sex = #{record.sex,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createIp != null">
        create_ip = #{record.createIp,jdbcType=VARCHAR},
      </if>
      <if test="record.lastLoginTime != null">
        last_login_time = #{record.lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.lastLoginIp != null">
        last_login_ip = #{record.lastLoginIp,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateUser != null">
        update_user = #{record.updateUser,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.source != null">
        source = #{record.source,jdbcType=INTEGER},
      </if>
      <if test="record.address != null">
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.licenseNo != null">
        license_no = #{record.licenseNo,jdbcType=VARCHAR},
      </if>
      <if test="record.organizationNo != null">
        organization_no = #{record.organizationNo,jdbcType=VARCHAR},
      </if>
      <if test="record.summary != null">
        summary = #{record.summary,jdbcType=VARCHAR},
      </if>
      <if test="record.monthPlan != null">
        month_plan = #{record.monthPlan,jdbcType=DOUBLE},
      </if>
      <if test="record.dayPlan != null">
        day_plan = #{record.dayPlan,jdbcType=DOUBLE},
      </if>
      <if test="record.errorCount != null">
        error_count = #{record.errorCount,jdbcType=INTEGER},
      </if>
      <if test="record.company != null">
        company = #{record.company,jdbcType=VARCHAR},
      </if>
      <if test="record.parentId != null">
        parent_id = #{record.parentId,jdbcType=INTEGER},
      </if>
      <if test="record.departmentId != null">
        department_id = #{record.departmentId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update user_admin
    set id = #{record.id,jdbcType=INTEGER},
      username = #{record.username,jdbcType=VARCHAR},
      true_name = #{record.trueName,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      avatar_id = #{record.avatarId,jdbcType=INTEGER},
      sex = #{record.sex,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      create_ip = #{record.createIp,jdbcType=VARCHAR},
      last_login_time = #{record.lastLoginTime,jdbcType=TIMESTAMP},
      last_login_ip = #{record.lastLoginIp,jdbcType=VARCHAR},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      update_user = #{record.updateUser,jdbcType=INTEGER},
      status = #{record.status,jdbcType=INTEGER},
      type = #{record.type,jdbcType=INTEGER},
      source = #{record.source,jdbcType=INTEGER},
      address = #{record.address,jdbcType=VARCHAR},
      license_no = #{record.licenseNo,jdbcType=VARCHAR},
      organization_no = #{record.organizationNo,jdbcType=VARCHAR},
      summary = #{record.summary,jdbcType=VARCHAR},
      month_plan = #{record.monthPlan,jdbcType=DOUBLE},
      day_plan = #{record.dayPlan,jdbcType=DOUBLE},
      error_count = #{record.errorCount,jdbcType=INTEGER},
      company = #{record.company,jdbcType=VARCHAR},
      parent_id = #{record.parentId,jdbcType=INTEGER},
      department_id = #{record.departmentId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.goochou.p2b.model.UserAdmin">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update user_admin
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="trueName != null">
        true_name = #{trueName,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="avatarId != null">
        avatar_id = #{avatarId,jdbcType=INTEGER},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createIp != null">
        create_ip = #{createIp,jdbcType=VARCHAR},
      </if>
      <if test="lastLoginTime != null">
        last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastLoginIp != null">
        last_login_ip = #{lastLoginIp,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="source != null">
        source = #{source,jdbcType=INTEGER},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="licenseNo != null">
        license_no = #{licenseNo,jdbcType=VARCHAR},
      </if>
      <if test="organizationNo != null">
        organization_no = #{organizationNo,jdbcType=VARCHAR},
      </if>
      <if test="summary != null">
        summary = #{summary,jdbcType=VARCHAR},
      </if>
      <if test="monthPlan != null">
        month_plan = #{monthPlan,jdbcType=DOUBLE},
      </if>
      <if test="dayPlan != null">
        day_plan = #{dayPlan,jdbcType=DOUBLE},
      </if>
      <if test="errorCount != null">
        error_count = #{errorCount,jdbcType=INTEGER},
      </if>
      <if test="company != null">
        company = #{company,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null">
        parent_id = #{parentId,jdbcType=INTEGER},
      </if>
      <if test="departmentId != null">
        department_id = #{departmentId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.goochou.p2b.model.UserAdmin">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update user_admin
    set username = #{username,jdbcType=VARCHAR},
      true_name = #{trueName,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      avatar_id = #{avatarId,jdbcType=INTEGER},
      sex = #{sex,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_ip = #{createIp,jdbcType=VARCHAR},
      last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
      last_login_ip = #{lastLoginIp,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      type = #{type,jdbcType=INTEGER},
      source = #{source,jdbcType=INTEGER},
      address = #{address,jdbcType=VARCHAR},
      license_no = #{licenseNo,jdbcType=VARCHAR},
      organization_no = #{organizationNo,jdbcType=VARCHAR},
      summary = #{summary,jdbcType=VARCHAR},
      month_plan = #{monthPlan,jdbcType=DOUBLE},
      day_plan = #{dayPlan,jdbcType=DOUBLE},
      error_count = #{errorCount,jdbcType=INTEGER},
      company = #{company,jdbcType=VARCHAR},
      parent_id = #{parentId,jdbcType=INTEGER},
      department_id = #{departmentId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

    <!-- This is the methed to select Resources by userAdmin Id -->
    <select id="selectResourcesByAdminId" resultType="com.goochou.p2b.model.Resources">
        SELECT r.* from resources r,admin_role ar,role_resources rr
        where ar.admin_id=#{userAdminId} and ar.role_id=rr.role_id and rr.resource_id=r.id
        <if test="parentId != null">
            and r.parent_id=#{parentId}
        </if>
        <if test="isMenu != null">
            and r.ismenu=#{isMenu}
        </if>
        <if test="isOrder">
            order by r.seq asc
        </if>

    </select>

    <select id="getRoleNameByUserId" parameterType="int" resultType="string">
        SELECT r.role
        FROM user_admin ua, admin_role ar, role r
        WHERE
        ua.id = ar.admin_id AND ar.role_id = r.id AND ua.id = #{userId}
    </select>
    <select id="getAllUserAssets" parameterType="map" resultType="map">
        SELECT
        a.*,
        b.rechargeAmount,
        c.withdrawAmount,
        d.capitalAmount
        FROM
        (
        SELECT
        a.*,
        u.username,
        u.true_name
        FROM
        assets a,
        user u
        WHERE
        a.user_id = u.id
        AND u.`status` = 0
        ) a
        LEFT JOIN (
        SELECT
        user_id,
        sum(amount) rechargeAmount
        FROM
        trade_record
        WHERE
        type = 1
        GROUP BY
        user_id
        ) b ON a.user_id = b.user_id
        LEFT JOIN (
        SELECT
        user_id,
        sum(amount) withdrawAmount
        FROM
        trade_record
        WHERE
        type = 2
        GROUP BY
        user_id
        ) c ON a.user_id = c.user_id
        LEFT JOIN
        (
        SELECT
        user_id,
        sum(amount) capitalAmount
        FROM
        trade_record
        WHERE
        type = 4 OR type = 5
        GROUP BY
        user_id
        ) d ON a.user_id = d.user_id
        LIMIT #{start}, #{limit}
    </select>

    <select id="getAllUserAssetsCount" resultType="int">
        SELECT count(a.user_id)
        FROM
        (
        SELECT
        a.*,
        u.username,
        u.true_name
        FROM
        assets a,
        user u
        WHERE
        a.user_id = u.id
        AND u.`status` = 0
        ) a
        LEFT JOIN (
        SELECT
        user_id,
        sum(amount) rechargeAmount
        FROM
        trade_record
        WHERE
        type = 1
        GROUP BY
        user_id
        ) b ON a.user_id = b.user_id
        LEFT JOIN (
        SELECT
        user_id,
        sum(amount) withdrawAmount
        FROM
        trade_record
        WHERE
        type = 2
        GROUP BY
        user_id
        ) c ON a.user_id = c.user_id
        LEFT JOIN
        (
        SELECT
        user_id,
        sum(amount) capitalAmount
        FROM
        trade_record
        WHERE
        type = 4 OR type = 5
        GROUP BY
        user_id
        ) d ON a.user_id = d.user_id


    </select>
    <select id="getAllUserAssetsExcel" parameterType="map" resultType="com.goochou.p2b.model.AllAssetsExcel">
        SELECT
        a.*,
        b.rechargeAmount,
        c.withdrawAmount,
        d.capitalAmount
        FROM
        (
        SELECT
        a.*,
        u.username,
        u.true_name
        FROM
        assets a,
        user u
        WHERE
        a.user_id = u.id
        AND u.`status` = 0
        ) a
        LEFT JOIN (
        SELECT
        user_id,
        sum(amount) rechargeAmount
        FROM
        trade_record
        WHERE
        type = 1
        GROUP BY
        DATE_FORMAT(time, '%D %y %a %d %m %b %j')
        ) b ON a.user_id = b.user_id
        LEFT JOIN (
        SELECT
        user_id,
        sum(amount) withdrawAmount
        FROM
        trade_record
        WHERE
        type = 2
        GROUP BY
        user_id
        ) c ON a.user_id = c.user_id
        LEFT JOIN
        (
        SELECT
        user_id,
        sum(amount) capitalAmount
        FROM
        trade_record
        WHERE
        type = 4 OR type = 5
        GROUP BY
        user_id
        ) d ON a.user_id = d.user_id
        LIMIT #{start}, #{limit}
    </select>
    <sql id="selectCapitalDetail">
        SELECT
        DATE_FORMAT(time, '%Y-%m-%d') time,
        MAX(CASE WHEN type = 0 THEN amount ELSE 0 END) investment,
        MAX(CASE WHEN type = 1 THEN amount ELSE 0 END) recharge,
        MAX(CASE WHEN type = 2 THEN amount ELSE 0 END) withdraw,
        MAX(CASE WHEN type = 3 THEN amount ELSE 0 END) earnings,
        MAX(CASE WHEN type = 4 THEN amount ELSE 0 END) receive
        FROM
        (
        SELECT
        sum(amount) amount,
        type,
        DATE_FORMAT(time, '%Y-%m-%d') time
        FROM
        trade_record tr,
        user u
        WHERE
        tr.user_id = u.id
        AND u.`status` = 0
        <if test="#{source}!=null">
            AND tr.source = #{source}
        </if>
        GROUP BY
        type,
        DATE_FORMAT(time, '%Y%m%d')
        ) a
        GROUP BY time
    </sql>
    <sql id="selectCapitalDetailGounpBytimeAndType">
        (
        SELECT
        sum(amount) amount,
        type,
        DATE_FORMAT(time, '%Y-%m-%d') time
        FROM
        trade_record tr,
        user u
        WHERE
        tr.user_id = u.id
        AND u.`status` = 0
        <if test="#{source}!=null">
            AND tr.source = #{source}
        </if>
        GROUP BY
        type,
        DATE_FORMAT(time, '%Y%m%d')
        ) a GROUP BY time
    </sql>
    <select id="getAllCapitalDetail" parameterType="map" resultType="com.goochou.p2b.model.vo.CapitalDetail">
        <include refid="selectCapitalDetail" />
        ORDER BY time desc
    </select>
    <select id="getAllCapitalDetailForPage" parameterType="map" resultType="map">
        <include refid="selectCapitalDetail" />
        ORDER BY time desc limit #{start},#{limit}
    </select>
    <select id="getCapitalDetailCount" resultType="integer">
        SELECT
        count(1)
        FROM
        <include refid="selectCapitalDetailGounpBytimeAndType" />
        ORDER BY a.time desc
    </select>

    <select id="getSummarizingForMonth" resultType="map">
        SELECT
        time,
        MAX(CASE WHEN type = 0 THEN amount ELSE 0 END) investment,
        MAX(CASE WHEN type = 1 THEN amount ELSE 0 END) recharge,
        MAX(CASE WHEN type = 2 THEN amount ELSE 0 END) withdraw,
        MAX(CASE WHEN type = 3 THEN amount ELSE 0 END) earnings,
        MAX(CASE WHEN type = 4 THEN amount ELSE 0 END) receive
        FROM
        (
        SELECT
        sum(amount) amount,
        type,
        DATE_FORMAT(time, '%Y-%m-%d') time
        FROM
        trade_record tr,
        user u
        WHERE
        tr.user_id = u.id
        AND u.`status` = 0
        <if test="#{source}!=null">
            AND tr.source = #{source}
        </if>
        AND DATE_FORMAT(time, '%Y-%m')=DATE_FORMAT(#{month}, '%Y-%m')
        GROUP BY
        type
        ) a
    </select>
    <select id="getAllCapitalDetailForMonth" parameterType="date" resultType="com.goochou.p2b.model.vo.CapitalDetail">
        SELECT
            DATE_FORMAT(time, '%Y-%m-%d') time,
            SUM(CASE WHEN type = 0 AND source = 1
                THEN amount
                ELSE 0 END)               huoInvest,
            SUM(CASE WHEN type = 0 AND source IN (0, 2, 4,5)
                THEN amount
                ELSE 0 END)               dingInvest,
            SUM(CASE WHEN type = 10 AND source IN (0, 2, 4,5)
                THEN amount
                ELSE 0 END)               huoToDingInvest,
            SUM(CASE WHEN type = 6 AND source = 0
                THEN amount
                ELSE 0 END)               bondInvest,
            SUM(CASE WHEN type = 1
                THEN amount
                ELSE 0 END)               recharge,
            (select sum(amount) from withdraw aa join user bb on aa.user_id=bb.id where bb.user_type='normal' and DATE_FORMAT(aa.create_time, '%Y-%m-%d')=DATE_FORMAT(time, '%Y-%m-%d'))               withdraw,
            SUM(CASE WHEN type = 3 AND (source = 0 or source = 5)
                THEN amount
                ELSE 0 END)               dingEarnings,
            SUM(CASE WHEN type = 3 AND source = 1
                THEN amount
                ELSE 0 END)               huoEarnings,
            SUM(CASE WHEN type IN (4, 5,15)
                THEN amount
                ELSE 0 END)               receive,
            SUM(CASE WHEN type = 0 AND source = 9
                THEN amount
                ELSE 0 END)               yyyInvest,
			SUM(CASE WHEN type = 3 AND source = 9
                THEN amount
                ELSE 0 END)               yyyEarnings
        FROM
        trade_record tr STRAIGHT_JOIN
        user u
        WHERE
        tr.user_id = u.id AND DATE_FORMAT(time, '%Y %m') = DATE_FORMAT(#{month}, '%Y %m')
        AND u.`status` in (0)
        and u.user_type='normal'
        GROUP BY

        DATE_FORMAT(time, '%Y%m%d')
        ORDER BY time ASC
    </select>


    <select id="queryUserAdminByRoleId" parameterType="map" resultMap="BaseResultMap">

        select
        <include refid="Base_Column_List" />
        from user_admin
        where id in (select admin_id from admin_role where role_id = #{roleId})
        and user_admin.status = 0

    </select>
    
    <select id="queryUserAdminByCustomerUserId" parameterType="map" resultMap="BaseResultMap">

        select ua.id, username  from customer_list cul
		inner join user_admin ua
		on cul.admin_id = ua.id
		where user_id = #{userId};

    </select>
    <select id="queryUserAdminByPhone" parameterType="string" resultType="int">
     SELECT id  FROM user_admin WHERE phone=#{mobilePhone} limit 1
    </select>
    
    <select id="selectUserAdminList" parameterType="map" resultMap="BaseResultMap">
       SELECT ua.* FROM user_admin ua inner join admin_role ar on ar.admin_id=ua.id WHERE 1=1
       <if test="userStatus != null">
         and  ua.`status` = #{userStatus}
       </if>
       <if test="keyword!=null and keyword!=''">
       	   AND (ua.username  like '%${keyword}%' OR ua.true_name  like '%${keyword}%') 
       </if>
      <if test="roleId != null and roleId != ''">
        AND ar.role_id=#{roleId}
      </if>
       ORDER BY ua.create_time DESC
       <if test="start != null and limit != null">
            limit #{start},#{limit}
        </if>
    </select>
    
    <select id="countUserAdminList" parameterType="map" resultType="int">
  	SELECT COUNT(*) FROM user_admin ua inner join admin_role ar on ar.admin_id=ua.id WHERE 1=1 
       <if test="userStatus != null">
            AND ua.`status` = #{userStatus}
       </if>
       <if test="keyword!=null and keyword!=''">
       	   AND ua.username  like '%${keyword}%' OR ua.true_name  like '%${keyword}%' 
       </if>
      <if test="roleId != null and roleId != ''">
        AND ar.role_id=#{roleId}
      </if>
    </select>
</mapper>
