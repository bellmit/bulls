<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.goochou.p2b.dao.WithdrawMapper">
  <resultMap id="BaseResultMap" type="com.goochou.p2b.model.Withdraw">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu May 09 16:34:23 CST 2019.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="order_no" jdbcType="VARCHAR" property="orderNo" />
    <result column="amount" jdbcType="DOUBLE" property="amount" />
    <result column="real_amount" jdbcType="DOUBLE" property="realAmount" />
    <result column="card_no" jdbcType="VARCHAR" property="cardNo" />
    <result column="pay_channel" jdbcType="VARCHAR" property="payChannel" />
    <result column="client" jdbcType="VARCHAR" property="client" />
    <result column="bank_id" jdbcType="INTEGER" property="bankId" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="update_date" jdbcType="TIMESTAMP" property="updateDate" />
    <result column="tech_operate_user_id" jdbcType="INTEGER" property="techOperateUserId" />
    <result column="tech_operate_time" jdbcType="TIMESTAMP" property="techOperateTime" />
    <result column="tech_remark" jdbcType="VARCHAR" property="techRemark" />
    <result column="finance_operate_user_id" jdbcType="INTEGER" property="financeOperateUserId" />
    <result column="finance_operate_time" jdbcType="TIMESTAMP" property="financeOperateTime" />
    <result column="finance_remark" jdbcType="VARCHAR" property="financeRemark" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <association column="bank_id" property="bank"
                 select="com.goochou.p2b.dao.BankMapper.selectByPrimaryKey"/>
  </resultMap>
    <sql id="Example_Where_Clause">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Thu May 09 10:16:39 CST 2019.
        -->
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Thu May 09 10:16:39 CST 2019.
        -->
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Thu May 09 10:16:39 CST 2019.
        -->
        id, user_id, type, order_no, amount, real_amount, card_no, pay_channel, client, bank_id,
        create_date, update_date, tech_operate_user_id, tech_operate_time, tech_remark, finance_operate_user_id,
        finance_operate_time, finance_remark, status
    </sql>
    <select id="selectByExample" parameterType="com.goochou.p2b.model.WithdrawExample" resultMap="BaseResultMap">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Thu May 09 10:16:39 CST 2019.
        -->
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List" />
        from withdraw
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
        <if test="limitStart != null and limitStart&gt;-1">
            limit ${limitStart} , ${limitEnd}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Thu May 09 10:16:39 CST 2019.
        -->
        select
        <include refid="Base_Column_List" />
        from withdraw
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Thu May 09 10:16:39 CST 2019.
        -->
        delete from withdraw
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="com.goochou.p2b.model.WithdrawExample">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Thu May 09 10:16:39 CST 2019.
        -->
        delete from withdraw
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
    </delete>
    <insert id="insert" keyProperty="id" parameterType="com.goochou.p2b.model.Withdraw" useGeneratedKeys="true">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Thu May 09 10:16:39 CST 2019.
        -->
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into withdraw (user_id, type, order_no,
        amount, real_amount, card_no,
        pay_channel, client, bank_id,
        create_date, update_date, tech_operate_user_id,
        tech_operate_time, tech_remark, finance_operate_user_id,
        finance_operate_time, finance_remark, status
        )
        values (#{userId,jdbcType=INTEGER}, #{type,jdbcType=INTEGER}, #{orderNo,jdbcType=VARCHAR},
        #{amount,jdbcType=DOUBLE}, #{realAmount,jdbcType=DOUBLE}, #{cardNo,jdbcType=VARCHAR},
        #{payChannel,jdbcType=VARCHAR}, #{client,jdbcType=VARCHAR}, #{bankId,jdbcType=INTEGER},
        #{createDate,jdbcType=TIMESTAMP}, #{updateDate,jdbcType=TIMESTAMP}, #{techOperateUserId,jdbcType=INTEGER},
        #{techOperateTime,jdbcType=TIMESTAMP}, #{techRemark,jdbcType=VARCHAR}, #{financeOperateUserId,jdbcType=INTEGER},
        #{financeOperateTime,jdbcType=TIMESTAMP}, #{financeRemark,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}
        )
    </insert>
    <insert id="insertSelective" parameterType="com.goochou.p2b.model.Withdraw">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Thu May 09 10:16:39 CST 2019.
        -->
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into withdraw
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                user_id,
            </if>
            <if test="type != null">
                type,
            </if>
            <if test="orderNo != null">
                order_no,
            </if>
            <if test="amount != null">
                amount,
            </if>
            <if test="realAmount != null">
                real_amount,
            </if>
            <if test="cardNo != null">
                card_no,
            </if>
            <if test="payChannel != null">
                pay_channel,
            </if>
            <if test="client != null">
                client,
            </if>
            <if test="bankId != null">
                bank_id,
            </if>
            <if test="createDate != null">
                create_date,
            </if>
            <if test="updateDate != null">
                update_date,
            </if>
            <if test="techOperateUserId != null">
                tech_operate_user_id,
            </if>
            <if test="techOperateTime != null">
                tech_operate_time,
            </if>
            <if test="techRemark != null">
                tech_remark,
            </if>
            <if test="financeOperateUserId != null">
                finance_operate_user_id,
            </if>
            <if test="financeOperateTime != null">
                finance_operate_time,
            </if>
            <if test="financeRemark != null">
                finance_remark,
            </if>
            <if test="status != null">
                status,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                #{userId,jdbcType=INTEGER},
            </if>
            <if test="type != null">
                #{type,jdbcType=INTEGER},
            </if>
            <if test="orderNo != null">
                #{orderNo,jdbcType=VARCHAR},
            </if>
            <if test="amount != null">
                #{amount,jdbcType=DOUBLE},
            </if>
            <if test="realAmount != null">
                #{realAmount,jdbcType=DOUBLE},
            </if>
            <if test="cardNo != null">
                #{cardNo,jdbcType=VARCHAR},
            </if>
            <if test="payChannel != null">
                #{payChannel,jdbcType=VARCHAR},
            </if>
            <if test="client != null">
                #{client,jdbcType=VARCHAR},
            </if>
            <if test="bankId != null">
                #{bankId,jdbcType=INTEGER},
            </if>
            <if test="createDate != null">
                #{createDate,jdbcType=TIMESTAMP},
            </if>
            <if test="updateDate != null">
                #{updateDate,jdbcType=TIMESTAMP},
            </if>
            <if test="techOperateUserId != null">
                #{techOperateUserId,jdbcType=INTEGER},
            </if>
            <if test="techOperateTime != null">
                #{techOperateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="techRemark != null">
                #{techRemark,jdbcType=VARCHAR},
            </if>
            <if test="financeOperateUserId != null">
                #{financeOperateUserId,jdbcType=INTEGER},
            </if>
            <if test="financeOperateTime != null">
                #{financeOperateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="financeRemark != null">
                #{financeRemark,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                #{status,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.goochou.p2b.model.WithdrawExample" resultType="java.lang.Integer">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Thu May 09 10:16:39 CST 2019.
        -->
        select count(*) from withdraw
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Thu May 09 10:16:39 CST 2019.
        -->
        update withdraw
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.userId != null">
                user_id = #{record.userId,jdbcType=INTEGER},
            </if>
            <if test="record.type != null">
                type = #{record.type,jdbcType=INTEGER},
            </if>
            <if test="record.orderNo != null">
                order_no = #{record.orderNo,jdbcType=VARCHAR},
            </if>
            <if test="record.amount != null">
                amount = #{record.amount,jdbcType=DOUBLE},
            </if>
            <if test="record.realAmount != null">
                real_amount = #{record.realAmount,jdbcType=DOUBLE},
            </if>
            <if test="record.cardNo != null">
                card_no = #{record.cardNo,jdbcType=VARCHAR},
            </if>
            <if test="record.payChannel != null">
                pay_channel = #{record.payChannel,jdbcType=VARCHAR},
            </if>
            <if test="record.client != null">
                client = #{record.client,jdbcType=VARCHAR},
            </if>
            <if test="record.bankId != null">
                bank_id = #{record.bankId,jdbcType=INTEGER},
            </if>
            <if test="record.createDate != null">
                create_date = #{record.createDate,jdbcType=TIMESTAMP},
            </if>
            <if test="record.updateDate != null">
                update_date = #{record.updateDate,jdbcType=TIMESTAMP},
            </if>
            <if test="record.techOperateUserId != null">
                tech_operate_user_id = #{record.techOperateUserId,jdbcType=INTEGER},
            </if>
            <if test="record.techOperateTime != null">
                tech_operate_time = #{record.techOperateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.techRemark != null">
                tech_remark = #{record.techRemark,jdbcType=VARCHAR},
            </if>
            <if test="record.financeOperateUserId != null">
                finance_operate_user_id = #{record.financeOperateUserId,jdbcType=INTEGER},
            </if>
            <if test="record.financeOperateTime != null">
                finance_operate_time = #{record.financeOperateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.financeRemark != null">
                finance_remark = #{record.financeRemark,jdbcType=VARCHAR},
            </if>
            <if test="record.status != null">
                status = #{record.status,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Thu May 09 10:16:39 CST 2019.
        -->
        update withdraw
        set id = #{record.id,jdbcType=INTEGER},
        user_id = #{record.userId,jdbcType=INTEGER},
        type = #{record.type,jdbcType=INTEGER},
        order_no = #{record.orderNo,jdbcType=VARCHAR},
        amount = #{record.amount,jdbcType=DOUBLE},
        real_amount = #{record.realAmount,jdbcType=DOUBLE},
        card_no = #{record.cardNo,jdbcType=VARCHAR},
        pay_channel = #{record.payChannel,jdbcType=VARCHAR},
        client = #{record.client,jdbcType=VARCHAR},
        bank_id = #{record.bankId,jdbcType=INTEGER},
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
        update_date = #{record.updateDate,jdbcType=TIMESTAMP},
        tech_operate_user_id = #{record.techOperateUserId,jdbcType=INTEGER},
        tech_operate_time = #{record.techOperateTime,jdbcType=TIMESTAMP},
        tech_remark = #{record.techRemark,jdbcType=VARCHAR},
        finance_operate_user_id = #{record.financeOperateUserId,jdbcType=INTEGER},
        finance_operate_time = #{record.financeOperateTime,jdbcType=TIMESTAMP},
        finance_remark = #{record.financeRemark,jdbcType=VARCHAR},
        status = #{record.status,jdbcType=INTEGER}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.goochou.p2b.model.Withdraw">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Thu May 09 10:16:39 CST 2019.
        -->
        update withdraw
        <set>
            <if test="userId != null">
                user_id = #{userId,jdbcType=INTEGER},
            </if>
            <if test="type != null">
                type = #{type,jdbcType=INTEGER},
            </if>
            <if test="orderNo != null">
                order_no = #{orderNo,jdbcType=VARCHAR},
            </if>
            <if test="amount != null">
                amount = #{amount,jdbcType=DOUBLE},
            </if>
            <if test="realAmount != null">
                real_amount = #{realAmount,jdbcType=DOUBLE},
            </if>
            <if test="cardNo != null">
                card_no = #{cardNo,jdbcType=VARCHAR},
            </if>
            <if test="payChannel != null">
                pay_channel = #{payChannel,jdbcType=VARCHAR},
            </if>
            <if test="client != null">
                client = #{client,jdbcType=VARCHAR},
            </if>
            <if test="bankId != null">
                bank_id = #{bankId,jdbcType=INTEGER},
            </if>
            <if test="createDate != null">
                create_date = #{createDate,jdbcType=TIMESTAMP},
            </if>
            <if test="updateDate != null">
                update_date = #{updateDate,jdbcType=TIMESTAMP},
            </if>
            <if test="techOperateUserId != null">
                tech_operate_user_id = #{techOperateUserId,jdbcType=INTEGER},
            </if>
            <if test="techOperateTime != null">
                tech_operate_time = #{techOperateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="techRemark != null">
                tech_remark = #{techRemark,jdbcType=VARCHAR},
            </if>
            <if test="financeOperateUserId != null">
                finance_operate_user_id = #{financeOperateUserId,jdbcType=INTEGER},
            </if>
            <if test="financeOperateTime != null">
                finance_operate_time = #{financeOperateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="financeRemark != null">
                finance_remark = #{financeRemark,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.goochou.p2b.model.Withdraw">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Thu May 09 10:16:39 CST 2019.
        -->
        update withdraw
        set user_id = #{userId,jdbcType=INTEGER},
        type = #{type,jdbcType=INTEGER},
        order_no = #{orderNo,jdbcType=VARCHAR},
        amount = #{amount,jdbcType=DOUBLE},
        real_amount = #{realAmount,jdbcType=DOUBLE},
        card_no = #{cardNo,jdbcType=VARCHAR},
        pay_channel = #{payChannel,jdbcType=VARCHAR},
        client = #{client,jdbcType=VARCHAR},
        bank_id = #{bankId,jdbcType=INTEGER},
        create_date = #{createDate,jdbcType=TIMESTAMP},
        update_date = #{updateDate,jdbcType=TIMESTAMP},
        tech_operate_user_id = #{techOperateUserId,jdbcType=INTEGER},
        tech_operate_time = #{techOperateTime,jdbcType=TIMESTAMP},
        tech_remark = #{techRemark,jdbcType=VARCHAR},
        finance_operate_user_id = #{financeOperateUserId,jdbcType=INTEGER},
        finance_operate_time = #{financeOperateTime,jdbcType=TIMESTAMP},
        finance_remark = #{financeRemark,jdbcType=VARCHAR},
        status = #{status,jdbcType=INTEGER}
        where id = #{id,jdbcType=INTEGER}
    </update>

    <!-- 以上是自动生成 -->


    <select id="query" parameterType="map" resultType="map">
        select ws.*,t.time successTime from (
        select w.*,u.username,u.true_name,b.name bankName,ua.username tecname, u.true_name cusName, u.department_id
        from withdraw w
        left join `user` u on u.id=w.user_id
        left join bank b on w.bank_id=b.id
        left join user_admin ua on ua.id=w.tech_operate_user_id
        left join user_invite ui on w.user_id=ui.invite_user_id
        where 1=1
        <if test="payChannel != null and payChannel != ''">
            and w.pay_channel=#{payChannel}
        </if>
        <if test="keyword != null and keyword != ''">
            and (u.username like '%${keyword}%' or u.true_name like '%${keyword}%' or w.order_no like '%${keyword}%')
        </if>
        <if test="status != null and (status != '' or status == 0)">
            and w.status=#{status}
        </if>
        <if test="createStartTime != null">
            and w.create_date &gt;= #{createStartTime}
        </if>
        <if test="createEndTime != null">
            and w.create_date &lt; #{createEndTime}
        </if>
        )ws
        <if test="startTime != null and endTime == null">
            INNER JOIN (SELECT other_id, create_date `time` from trade_record where table_name = 'withdraw' and aoe_type='withdraw_cash_add'
            and create_date &gt;= #{startTime} 
            ) t on t.other_id = ws.id and ws.status=1
        </if>
        <if test="endTime != null and startTime == null">
            INNER JOIN (SELECT other_id, create_date `time` from trade_record where table_name = 'withdraw' and aoe_type='withdraw_cash_add'
            and create_date &lt; #{endTime}
            ) t on t.other_id = ws.id and ws.status=1
        </if>
        <if test="endTime != null and startTime != null">
            INNER JOIN (SELECT other_id, create_date `time` from trade_record where table_name = 'withdraw' and aoe_type='withdraw_cash_add'
            and create_date &gt;= #{startTime} and create_date &lt; #{endTime}
            ) t on t.other_id = ws.id and ws.status=1
        </if>
        <if test="endTime == null and startTime == null">
            LEFT JOIN (SELECT other_id, create_date `time` from trade_record where table_name = 'withdraw' and aoe_type='withdraw_cash_add'
            ) t on t.other_id = ws.id and ws.status=1
        </if>
        <if test="adminId != null ">
		 	inner join admin_responsible 
		  	on admin_responsible.admin_id=${adminId} 
		  	and admin_responsible.department_id=ws.department_id
	  	</if>
	  	<if test="departmentId != null">
	    	inner join department_relation
				on department_relation.department_id=${departmentId} 
				and department_relation.sub_department_id=ws.department_id
	    </if>
        order by ws.create_date desc
        <if test="start != null and limit != null">
            limit #{start},#{limit}
        </if>
    </select>

    <select id="queryCount" resultType="map">
        select count(*) count,sum(amount) amount from (
        select w.*,u.username,u.true_name,b.name bankName,ua.username tecname, u.department_id
        from withdraw w
        left join `user` u on u.id=w.user_id
        left join bank b on w.bank_id=b.id
        left join user_admin ua on ua.id=w.tech_operate_user_id
        left join user_invite ui on w.user_id=ui.invite_user_id
        where 1=1
        <if test="payChannel != null and payChannel != ''">
            and w.pay_channel=#{payChannel}
        </if>
        <if test="keyword != null and keyword != ''">
            and (u.username like '%${keyword}%' or u.true_name like '%${keyword}%' or w.order_no like '%${keyword}%')
        </if>
        <if test="status != null and (status != '' or status == 0)">
            and w.status=#{status}
        </if>
        <if test="createStartTime != null">
            and w.create_date &gt;= #{createStartTime}
        </if>
        <if test="createEndTime != null">
            and w.create_date &lt; #{createEndTime}
        </if>
        )ws
        <if test="startTime != null and endTime == null">
            INNER JOIN (SELECT other_id, create_date `time` from trade_record where table_name = 'withdraw' and aoe_type='withdraw_cash_add'
            and create_date &gt;= #{startTime}
            ) t on t.other_id = ws.id and ws.status=1
        </if>
        <if test="endTime != null and startTime == null">
            INNER JOIN (SELECT other_id, create_date `time` from trade_record where table_name = 'withdraw' and aoe_type='withdraw_cash_add'
            and create_date &lt; #{endTime}
            ) t on t.other_id = ws.id and ws.status=1
        </if>
        <if test="endTime != null and startTime != null">
            INNER JOIN (SELECT other_id, create_date `time` from trade_record where table_name = 'withdraw' and aoe_type='withdraw_cash_add'
            and create_date &gt;= #{startTime} and create_date &lt; #{endTime}
            ) t on t.other_id = ws.id and ws.status=1
        </if>
        <if test="endTime == null and startTime == null">
            LEFT JOIN (SELECT other_id, create_date `time` from trade_record where table_name = 'withdraw' and aoe_type='withdraw_cash_add'
            ) t on t.other_id = ws.id and ws.status=1
        </if>
        <if test="adminId != null ">
		 	inner join admin_responsible 
		  	on admin_responsible.admin_id=${adminId} 
		  	and admin_responsible.department_id=ws.department_id
	  	</if>
		<if test="departmentId != null">
	    	inner join department_relation
				on department_relation.department_id=${departmentId} 
				and department_relation.sub_department_id=ws.department_id
	    </if>
        <!-- 	) i LEFT JOIN user_admin a on i.tech_operate_user_id=a.id -->
    </select>

    <select id="chargeWithdrawLimit" resultType="map">
        SELECT
            sum(amount) amount,
            count(id)   count
        FROM withdraw
        WHERE TO_DAYS(create_date) = TO_DAYS(NOW()) AND user_id = #{userId} AND status IN (1, 4);
    </select>


    <select id="queryWithdrawForExport" parameterType="map" resultMap="BaseResultMap">
        select i.* from withdraw i,user u where i.user_id=u.id
        <if test="keyword != null">
            and u.username like '%${keyword}%'
        </if>
        <if test="status != null">
            and i.status=#{status}
        </if>
        order by i.create_date desc
    </select>

    <select id="getWithdrawMonthDay" resultType="map">
        SELECT
            sum(amount)                          money,
            DATE_FORMAT(w.create_date, '%Y-%m-%d') time
        FROM withdraw w LEFT JOIN user u ON w.user_id = u.id
        <if test="adminId != null ">
		     inner join admin_responsible 
		     on admin_responsible.admin_id=#{adminId} 
		     and admin_responsible.department_id=u.department_id
		</if>
		<if test="departmentId != null">
		     inner join department_relation
		     on department_relation.department_id=#{departmentId} 
		     and department_relation.sub_department_id=u.department_id
		</if>
        WHERE w.status = 1 AND u.status = 0
           AND w.create_date BETWEEN DATE_SUB(NOW(), INTERVAL 30 DAY) AND NOW()
        GROUP BY DATE_FORMAT(w.create_date, '%Y%m%d')
    </select>

    <select id="findRecordByUserIdAndApp" resultType="com.goochou.p2b.model.Withdraw">
        SELECT
            w.*,
            b.name bankName,
            b.code bankCode
        FROM withdraw w, bank b
        WHERE w.bank_id = b.id AND
              w.status IN (1, 2, 4) AND user_id = #{userId}
        ORDER BY create_date DESC
        LIMIT #{start}, #{limit}
    </select>

    <select id="getNeedWithdrawList" resultMap="BaseResultMap"> /* TODO sq  method -&gt; pay_channel  枚举*/
        SELECT *
        FROM withdraw
        WHERE to_days(create_date) &lt; to_days(now()) AND type = 1 AND status = 4 AND pay_channel = '3';
    </select>

    <select id="getCurMonthFreeCount" parameterType="int" resultType="int">
        SELECT count(id)
        FROM withdraw w
        WHERE user_id = #{userId} AND date_format(create_date, '%Y%m') = date_format(now(), '%Y%m') AND status IN (0,1,4,5)
              AND type in (0,1) AND pay_channel = '3'
              AND (select count(1) from withdraw_coupon c where c.withdraw_id = w.id) = 0
    </select>

    <select id="queryWithdrawOfInProcessNeedAlert" resultType="int">
		select count(1) from (
		select id from withdraw where status = 4  and type = 1
		and
		case WEEKDAY(create_date)
		when 4 then
		DATE_ADD(date(DATE_ADD(create_date,INTERVAL 3 day)),INTERVAL 2 hour)
		when 5 then
		DATE_ADD(date(DATE_ADD(create_date,INTERVAL 2 day)),INTERVAL 2 hour)
		ELSE
		DATE_ADD(DATE_ADD(create_date,INTERVAL 1 day),INTERVAL 2 hour)
		end
		&lt; now()
		UNION
		select id from withdraw where status = 4  and type = 0
		and DATE_add(create_date,INTERVAL 2 hour) &lt; now()) a
    </select>

    <select id="queryTotalWithdrawToday" resultType="int">
    	select count(1) from withdraw where create_date &gt; DATE(now())
    </select>

    <select id="queryByUserId" parameterType="String" resultType="int">
    	SELECT COUNT(1) FROM withdraw WHERE user_id = #{userId} AND `status` = 1
    </select>

    <select id="queryWithdrawByDate" parameterType="map" resultType="map">
    	select * from withdraw where create_date &gt;= #{startTime} and create_date &lt;= #{endTime}
    </select>


    <select id="getWithdrawDetailById" parameterType="int" resultType="com.goochou.p2b.model.vo.WithdrawVO">
        SELECT
          t1.id,
          t1.user_id,
          t1.type,
          t1.order_no,
          t1.amount,
          t1.real_amount,
          t1.card_no,
          t1.pay_channel,
          t1.client,
          t1.bank_id,
          t1.create_date,
          t1.tech_operate_user_id,
          t1.tech_operate_time,
          t1.tech_remark,
          t1.finance_operate_user_id,
          t1.finance_operate_time,
          t1.finance_remark,
          t1.status,
          t2.true_name,
          t2.phone,
          t3.name bank_name,
          t4.true_name tech_operate_user_name,
          t4.true_name finance_operate_user_name
        FROM
          withdraw t1
          INNER JOIN `user` t2
            ON t2.id = t1.user_id
          LEFT JOIN bank t3
            ON t3.id = t1.bank_id
          LEFT JOIN user_admin t4
            ON t4.id = t1.tech_operate_user_id
          LEFT JOIN user_admin t5
            ON t5.id = t1.finance_operate_user_id
        where t1.id=#{id}
        ORDER BY t1.id DESC
    </select>

    <select id="queryUserWithdrawRecord" parameterType="map" resultType="com.goochou.p2b.model.vo.WithdrawRecordVO">
        SELECT
           w.id,
           w.user_id,
           w.type,
           w.order_no,
           w.real_amount amount,
           w.pay_channel,
           w.create_date,
           w.update_date,
           w.status,
           w.card_no,
           w.pay_channel,
           b.code bank_code,
           b.name bank_name
        FROM withdraw w LEFT JOIN bank b
        ON b.id=w.bank_id
        WHERE w.user_id=#{userId}
        <if test="status != null and status != ''">
            and w.status in (${status})
        </if>
        <if test="startDate != null and startDate != ''">
            and w.create_date &gt;= #{startDate}
        </if>
        <if test="endDate != null and endDate != ''">
            and w.create_date &lt;= #{endDate}
        </if>
        ORDER BY w.create_date DESC
        <if test="start != null and end != null">
            limit ${start} , ${end}
        </if>
    </select>

    <select id="queryUserWithdrawRecordCount" parameterType="map" resultType="int">
        SELECT
          count(1)
        FROM withdraw w LEFT JOIN bank b
        ON b.id=w.bank_id
        WHERE w.user_id=#{userId}
        <if test="status != null and status != ''">
            and w.status in (${status})
        </if>
        <if test="startDate != null and startDate != ''">
            and w.create_date &gt;= #{startDate}
        </if>
        <if test="endDate != null and endDate != ''">
            and w.create_date &lt;= #{endDate}
        </if>
    </select>

    <select id="queryUserWithdrawSum" parameterType="map" resultType="double">
        SELECT IFNULL(sum(w.real_amount),0) FROM withdraw w
        WHERE w.user_id=#{userId} and status=1
        <if test="startDate != null and startDate != ''">
            and w.update_date &gt;= #{startDate}
        </if>
        <if test="endDate != null and endDate != ''">
            and w.update_date &lt;= #{endDate}
        </if>
    </select>

</mapper>
