<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.goochou.p2b.dao.CronTriggersMapper" >
  <resultMap id="BaseResultMap" type="com.goochou.p2b.model.CronTriggers" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="SCHED_NAME" property="schedName" jdbcType="VARCHAR" />
    <id column="TRIGGER_NAME" property="triggerName" jdbcType="VARCHAR" />
    <id column="TRIGGER_GROUP" property="triggerGroup" jdbcType="VARCHAR" />
    <result column="CRON_EXPRESSION" property="cronExpression" jdbcType="VARCHAR" />
    <result column="TIME_ZONE_ID" property="timeZoneId" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP, CRON_EXPRESSION, TIME_ZONE_ID
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.goochou.p2b.model.CronTriggersExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from qrtz_cron_triggers
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="com.goochou.p2b.model.CronTriggersKey" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from qrtz_cron_triggers
    where SCHED_NAME = #{schedName,jdbcType=VARCHAR}
      and TRIGGER_NAME = #{triggerName,jdbcType=VARCHAR}
      and TRIGGER_GROUP = #{triggerGroup,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.goochou.p2b.model.CronTriggersKey" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from qrtz_cron_triggers
    where SCHED_NAME = #{schedName,jdbcType=VARCHAR}
      and TRIGGER_NAME = #{triggerName,jdbcType=VARCHAR}
      and TRIGGER_GROUP = #{triggerGroup,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.goochou.p2b.model.CronTriggersExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from qrtz_cron_triggers
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.goochou.p2b.model.CronTriggers" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into qrtz_cron_triggers (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP, 
      CRON_EXPRESSION, TIME_ZONE_ID)
    values (#{schedName,jdbcType=VARCHAR}, #{triggerName,jdbcType=VARCHAR}, #{triggerGroup,jdbcType=VARCHAR}, 
      #{cronExpression,jdbcType=VARCHAR}, #{timeZoneId,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.goochou.p2b.model.CronTriggers" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into qrtz_cron_triggers
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="schedName != null" >
        SCHED_NAME,
      </if>
      <if test="triggerName != null" >
        TRIGGER_NAME,
      </if>
      <if test="triggerGroup != null" >
        TRIGGER_GROUP,
      </if>
      <if test="cronExpression != null" >
        CRON_EXPRESSION,
      </if>
      <if test="timeZoneId != null" >
        TIME_ZONE_ID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="schedName != null" >
        #{schedName,jdbcType=VARCHAR},
      </if>
      <if test="triggerName != null" >
        #{triggerName,jdbcType=VARCHAR},
      </if>
      <if test="triggerGroup != null" >
        #{triggerGroup,jdbcType=VARCHAR},
      </if>
      <if test="cronExpression != null" >
        #{cronExpression,jdbcType=VARCHAR},
      </if>
      <if test="timeZoneId != null" >
        #{timeZoneId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.goochou.p2b.model.CronTriggersExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from qrtz_cron_triggers
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update qrtz_cron_triggers
    <set >
      <if test="record.schedName != null" >
        SCHED_NAME = #{record.schedName,jdbcType=VARCHAR},
      </if>
      <if test="record.triggerName != null" >
        TRIGGER_NAME = #{record.triggerName,jdbcType=VARCHAR},
      </if>
      <if test="record.triggerGroup != null" >
        TRIGGER_GROUP = #{record.triggerGroup,jdbcType=VARCHAR},
      </if>
      <if test="record.cronExpression != null" >
        CRON_EXPRESSION = #{record.cronExpression,jdbcType=VARCHAR},
      </if>
      <if test="record.timeZoneId != null" >
        TIME_ZONE_ID = #{record.timeZoneId,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update qrtz_cron_triggers
    set SCHED_NAME = #{record.schedName,jdbcType=VARCHAR},
      TRIGGER_NAME = #{record.triggerName,jdbcType=VARCHAR},
      TRIGGER_GROUP = #{record.triggerGroup,jdbcType=VARCHAR},
      CRON_EXPRESSION = #{record.cronExpression,jdbcType=VARCHAR},
      TIME_ZONE_ID = #{record.timeZoneId,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.goochou.p2b.model.CronTriggers" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update qrtz_cron_triggers
    <set >
      <if test="cronExpression != null" >
        CRON_EXPRESSION = #{cronExpression,jdbcType=VARCHAR},
      </if>
      <if test="timeZoneId != null" >
        TIME_ZONE_ID = #{timeZoneId,jdbcType=VARCHAR},
      </if>
    </set>
    where SCHED_NAME = #{schedName,jdbcType=VARCHAR}
      and TRIGGER_NAME = #{triggerName,jdbcType=VARCHAR}
      and TRIGGER_GROUP = #{triggerGroup,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.goochou.p2b.model.CronTriggers" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update qrtz_cron_triggers
    set CRON_EXPRESSION = #{cronExpression,jdbcType=VARCHAR},
      TIME_ZONE_ID = #{timeZoneId,jdbcType=VARCHAR}
    where SCHED_NAME = #{schedName,jdbcType=VARCHAR}
      and TRIGGER_NAME = #{triggerName,jdbcType=VARCHAR}
      and TRIGGER_GROUP = #{triggerGroup,jdbcType=VARCHAR}
  </update>
  
  <select id="queryTaskExecuteInfo" parameterType="map" resultType="map">
  	select a.TRIGGER_NAME, a.CRON_EXPRESSION, b.JOB_NAME, 
FROM_UNIXTIME(b.NEXT_FIRE_TIME / 1000, '%Y-%m-%d %H:%i:%s') NEXT_FIRE_TIME,  FROM_UNIXTIME(b.PREV_FIRE_TIME / 1000, '%Y-%m-%d %H:%i:%s') PREV_FIRE_TIME, b.TRIGGER_STATE, FROM_UNIXTIME(b.START_TIME / 1000, '%Y-%m-%d %H:%i:%s') START_TIME
from qrtz_cron_triggers a
left join qrtz_triggers b
on a.SCHED_NAME = b.SCHED_NAME
and a.TRIGGER_NAME = b.TRIGGER_NAME
  </select>
  
  <update id="updateTaskExecuteInfo" >
    update qrtz_triggers
    set NEXT_FIRE_TIME = concat(unix_timestamp(DATE_ADD(date_format(now(), '%Y-%m-%d %H:%i:00'),INTERVAL 1 MINUTE)),'000')
    where TRIGGER_NAME = 'dailyReportTrigger'
  </update>
  
  <!-- 查询指定task下次执行时间点 -->
  <select id="queryTriggerNextFireTime" resultType="long">
  	SELECT qt.NEXT_FIRE_TIME
	FROM qrtz_triggers qt
	WHERE qt.TRIGGER_NAME = #{triggerName,jdbcType=VARCHAR}
  </select>
</mapper>