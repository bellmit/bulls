<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.goochou.p2b.dao.RechargeMapper">
    <resultMap id="BaseResultMap" type="com.goochou.p2b.model.Recharge">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Thu May 23 10:42:09 CST 2019.
        -->
        <id column="id" jdbcType="INTEGER" property="id" />
        <result column="user_id" jdbcType="INTEGER" property="userId" />
        <result column="order_no" jdbcType="VARCHAR" property="orderNo" />
        <result column="out_order_no" jdbcType="VARCHAR" property="outOrderNo" />
        <result column="other_id" jdbcType="INTEGER" property="otherId" />
        <result column="order_type" jdbcType="VARCHAR" property="orderType" />
        <result column="pay_channel" jdbcType="VARCHAR" property="payChannel" />
        <result column="bank_id" jdbcType="INTEGER" property="bankId" />
        <result column="client" jdbcType="VARCHAR" property="client" />
        <result column="amount" jdbcType="DOUBLE" property="amount" />
        <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
        <result column="update_date" jdbcType="TIMESTAMP" property="updateDate" />
        <result column="code" jdbcType="VARCHAR" property="code" />
        <result column="remark" jdbcType="VARCHAR" property="remark" />
        <result column="card_no" jdbcType="VARCHAR" property="cardNo" />
        <result column="status" jdbcType="INTEGER" property="status" />
        <result column="signpay" jdbcType="VARCHAR" property="signpay" />
    </resultMap>
    <sql id="Example_Where_Clause">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Thu May 23 10:42:09 CST 2019.
        -->
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Thu May 23 10:42:09 CST 2019.
        -->
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Thu May 23 10:42:09 CST 2019.
        -->
        id, user_id, order_no, out_order_no, other_id, order_type, pay_channel, bank_id,
        client, amount, create_date, update_date, code, remark, card_no, status, signpay
    </sql>
    <select id="selectByExample" parameterType="com.goochou.p2b.model.RechargeExample" resultMap="BaseResultMap">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Thu May 23 10:42:09 CST 2019.
        -->
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List" />
        from recharge
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
        <if test="limitStart != null and limitStart&gt;-1">
            limit ${limitStart} , ${limitEnd}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Thu May 23 10:42:09 CST 2019.
        -->
        select
        <include refid="Base_Column_List" />
        from recharge
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Thu May 23 10:42:09 CST 2019.
        -->
        delete from recharge
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="com.goochou.p2b.model.RechargeExample">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Thu May 23 10:42:09 CST 2019.
        -->
        delete from recharge
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
    </delete>
    <insert id="insert" keyProperty="id" parameterType="com.goochou.p2b.model.Recharge" useGeneratedKeys="true">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Thu May 23 10:42:09 CST 2019.
        -->
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into recharge (user_id, order_no, out_order_no,
        other_id, order_type, pay_channel,
        bank_id, client, amount,
        create_date, update_date, code,
        remark, card_no, status,
        signpay)
        values (#{userId,jdbcType=INTEGER}, #{orderNo,jdbcType=VARCHAR}, #{outOrderNo,jdbcType=VARCHAR},
        #{otherId,jdbcType=INTEGER}, #{orderType,jdbcType=VARCHAR}, #{payChannel,jdbcType=VARCHAR},
        #{bankId,jdbcType=INTEGER}, #{client,jdbcType=VARCHAR}, #{amount,jdbcType=DOUBLE},
        #{createDate,jdbcType=TIMESTAMP}, #{updateDate,jdbcType=TIMESTAMP}, #{code,jdbcType=VARCHAR},
        #{remark,jdbcType=VARCHAR}, #{cardNo,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER},
        #{signpay,jdbcType=VARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="com.goochou.p2b.model.Recharge">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Thu May 23 10:42:09 CST 2019.
        -->
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into recharge
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                user_id,
            </if>
            <if test="orderNo != null">
                order_no,
            </if>
            <if test="outOrderNo != null">
                out_order_no,
            </if>
            <if test="otherId != null">
                other_id,
            </if>
            <if test="orderType != null">
                order_type,
            </if>
            <if test="payChannel != null">
                pay_channel,
            </if>
            <if test="bankId != null">
                bank_id,
            </if>
            <if test="client != null">
                client,
            </if>
            <if test="amount != null">
                amount,
            </if>
            <if test="createDate != null">
                create_date,
            </if>
            <if test="updateDate != null">
                update_date,
            </if>
            <if test="code != null">
                code,
            </if>
            <if test="remark != null">
                remark,
            </if>
            <if test="cardNo != null">
                card_no,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="signpay != null">
                signpay,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                #{userId,jdbcType=INTEGER},
            </if>
            <if test="orderNo != null">
                #{orderNo,jdbcType=VARCHAR},
            </if>
            <if test="outOrderNo != null">
                #{outOrderNo,jdbcType=VARCHAR},
            </if>
            <if test="otherId != null">
                #{otherId,jdbcType=INTEGER},
            </if>
            <if test="orderType != null">
                #{orderType,jdbcType=VARCHAR},
            </if>
            <if test="payChannel != null">
                #{payChannel,jdbcType=VARCHAR},
            </if>
            <if test="bankId != null">
                #{bankId,jdbcType=INTEGER},
            </if>
            <if test="client != null">
                #{client,jdbcType=VARCHAR},
            </if>
            <if test="amount != null">
                #{amount,jdbcType=DOUBLE},
            </if>
            <if test="createDate != null">
                #{createDate,jdbcType=TIMESTAMP},
            </if>
            <if test="updateDate != null">
                #{updateDate,jdbcType=TIMESTAMP},
            </if>
            <if test="code != null">
                #{code,jdbcType=VARCHAR},
            </if>
            <if test="remark != null">
                #{remark,jdbcType=VARCHAR},
            </if>
            <if test="cardNo != null">
                #{cardNo,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                #{status,jdbcType=INTEGER},
            </if>
            <if test="signpay != null">
                #{signpay,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.goochou.p2b.model.RechargeExample" resultType="java.lang.Integer">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Thu May 23 10:42:09 CST 2019.
        -->
        select count(*) from recharge
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Thu May 23 10:42:09 CST 2019.
        -->
        update recharge
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.userId != null">
                user_id = #{record.userId,jdbcType=INTEGER},
            </if>
            <if test="record.orderNo != null">
                order_no = #{record.orderNo,jdbcType=VARCHAR},
            </if>
            <if test="record.outOrderNo != null">
                out_order_no = #{record.outOrderNo,jdbcType=VARCHAR},
            </if>
            <if test="record.otherId != null">
                other_id = #{record.otherId,jdbcType=INTEGER},
            </if>
            <if test="record.orderType != null">
                order_type = #{record.orderType,jdbcType=VARCHAR},
            </if>
            <if test="record.payChannel != null">
                pay_channel = #{record.payChannel,jdbcType=VARCHAR},
            </if>
            <if test="record.bankId != null">
                bank_id = #{record.bankId,jdbcType=INTEGER},
            </if>
            <if test="record.client != null">
                client = #{record.client,jdbcType=VARCHAR},
            </if>
            <if test="record.amount != null">
                amount = #{record.amount,jdbcType=DOUBLE},
            </if>
            <if test="record.createDate != null">
                create_date = #{record.createDate,jdbcType=TIMESTAMP},
            </if>
            <if test="record.updateDate != null">
                update_date = #{record.updateDate,jdbcType=TIMESTAMP},
            </if>
            <if test="record.code != null">
                code = #{record.code,jdbcType=VARCHAR},
            </if>
            <if test="record.remark != null">
                remark = #{record.remark,jdbcType=VARCHAR},
            </if>
            <if test="record.cardNo != null">
                card_no = #{record.cardNo,jdbcType=VARCHAR},
            </if>
            <if test="record.status != null">
                status = #{record.status,jdbcType=INTEGER},
            </if>
            <if test="record.signpay != null">
                signpay = #{record.signpay,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Thu May 23 10:42:09 CST 2019.
        -->
        update recharge
        set id = #{record.id,jdbcType=INTEGER},
        user_id = #{record.userId,jdbcType=INTEGER},
        order_no = #{record.orderNo,jdbcType=VARCHAR},
        out_order_no = #{record.outOrderNo,jdbcType=VARCHAR},
        other_id = #{record.otherId,jdbcType=INTEGER},
        order_type = #{record.orderType,jdbcType=VARCHAR},
        pay_channel = #{record.payChannel,jdbcType=VARCHAR},
        bank_id = #{record.bankId,jdbcType=INTEGER},
        client = #{record.client,jdbcType=VARCHAR},
        amount = #{record.amount,jdbcType=DOUBLE},
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
        update_date = #{record.updateDate,jdbcType=TIMESTAMP},
        code = #{record.code,jdbcType=VARCHAR},
        remark = #{record.remark,jdbcType=VARCHAR},
        card_no = #{record.cardNo,jdbcType=VARCHAR},
        status = #{record.status,jdbcType=INTEGER},
        signpay = #{record.signpay,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.goochou.p2b.model.Recharge">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Thu May 23 10:42:09 CST 2019.
        -->
        update recharge
        <set>
            <if test="userId != null">
                user_id = #{userId,jdbcType=INTEGER},
            </if>
            <if test="orderNo != null">
                order_no = #{orderNo,jdbcType=VARCHAR},
            </if>
            <if test="outOrderNo != null">
                out_order_no = #{outOrderNo,jdbcType=VARCHAR},
            </if>
            <if test="otherId != null">
                other_id = #{otherId,jdbcType=INTEGER},
            </if>
            <if test="orderType != null">
                order_type = #{orderType,jdbcType=VARCHAR},
            </if>
            <if test="payChannel != null">
                pay_channel = #{payChannel,jdbcType=VARCHAR},
            </if>
            <if test="bankId != null">
                bank_id = #{bankId,jdbcType=INTEGER},
            </if>
            <if test="client != null">
                client = #{client,jdbcType=VARCHAR},
            </if>
            <if test="amount != null">
                amount = #{amount,jdbcType=DOUBLE},
            </if>
            <if test="createDate != null">
                create_date = #{createDate,jdbcType=TIMESTAMP},
            </if>
            <if test="updateDate != null">
                update_date = #{updateDate,jdbcType=TIMESTAMP},
            </if>
            <if test="code != null">
                code = #{code,jdbcType=VARCHAR},
            </if>
            <if test="remark != null">
                remark = #{remark,jdbcType=VARCHAR},
            </if>
            <if test="cardNo != null">
                card_no = #{cardNo,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=INTEGER},
            </if>
            <if test="signpay != null">
                signpay = #{signpay,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.goochou.p2b.model.Recharge">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Thu May 23 10:42:09 CST 2019.
        -->
        update recharge
        set user_id = #{userId,jdbcType=INTEGER},
        order_no = #{orderNo,jdbcType=VARCHAR},
        out_order_no = #{outOrderNo,jdbcType=VARCHAR},
        other_id = #{otherId,jdbcType=INTEGER},
        order_type = #{orderType,jdbcType=VARCHAR},
        pay_channel = #{payChannel,jdbcType=VARCHAR},
        bank_id = #{bankId,jdbcType=INTEGER},
        client = #{client,jdbcType=VARCHAR},
        amount = #{amount,jdbcType=DOUBLE},
        create_date = #{createDate,jdbcType=TIMESTAMP},
        update_date = #{updateDate,jdbcType=TIMESTAMP},
        code = #{code,jdbcType=VARCHAR},
        remark = #{remark,jdbcType=VARCHAR},
        card_no = #{cardNo,jdbcType=VARCHAR},
        status = #{status,jdbcType=INTEGER},
        signpay = #{signpay,jdbcType=VARCHAR}
        where id = #{id,jdbcType=INTEGER}
    </update>

<select id="query" parameterType="map" resultType="map">
	select i.*,b.name bankName,u.phone,u.username,u.true_name
		trueName,u.true_name cusName,
		ifnull(investment.order_no,t_goods_order.order_no) businessOrderNo,
		ifnull(investment.amount,t_goods_order.total_money) orderTotalAmount
	from
	recharge i
	join `user` u on i.user_id=u.id
	left join bank b on i.bank_id=b.id
	left join investment on investment.id=i.other_id and i.order_type='investment'
	left join t_goods_order on t_goods_order.id=i.other_id and i.order_type='goods'
	<if test="adminId != null ">
		inner join admin_responsible
			on admin_responsible.admin_id=${adminId}
			and admin_responsible.department_id=u.department_id
	</if>
	<if test="departmentId != null">
		inner join department_relation
			on department_relation.department_id=${departmentId}
			and department_relation.sub_department_id=u.department_id
	</if>
	where
	1=1
	<if test="keyword != null and keyword != ''">
		and (u.username like '%${keyword}%' or u.true_name like '%${keyword}%' or
		u.phone like '%${keyword}%' or
		i.order_no like '%${keyword}%' )
	</if>
	<if test="status != null">
		and i.status=#{status}
	</if>

	<if test="client != null and client != ''">
		and i.client=#{client}
	</if>
	<if test="payChannel != null and payChannel != ''">
		and i.pay_channel=#{payChannel}
	</if>
	<if test="startTime != null and startTime != ''">
		and i.create_date &gt;= #{startTime}
	</if>
	<if test="endTime != null and endTime != ''">
		and i.create_date &lt; #{endTime}
	</if>
	order by i.create_date desc
	<if test="start != null and limit != null">
		limit #{start},#{limit} ;
	</if>
</select>

    <select id="queryCount" parameterType="map" resultType="map">
        select count(*) count, sum(amount) amount
        from
			recharge i join `user` u
			on i.user_id=u.id left join bank b
            on i.bank_id=b.id left join user_invite ui
			on i.user_id=ui.invite_user_id
	  <if test="adminId != null ">
		 	inner join admin_responsible 
		  	on admin_responsible.admin_id=${adminId} 
		  	and admin_responsible.department_id=u.department_id
	  </if>
	  <if test="departmentId != null">
	    	inner join department_relation
				on department_relation.department_id=${departmentId} 
				and department_relation.sub_department_id=u.department_id
	  </if>
         where
         1=1
      <if test="keyword != null and keyword != ''">
        and (u.username like '%${keyword}%' or u.true_name like '%${keyword}%' or i.order_no like '%${keyword}%' )
      </if>
      <if test="status != null">
        and i.status=#{status}
      </if>

      <if test="client != null and client != ''">
        and i.client=#{client}
      </if>

        <if test="payChannel != null and payChannel != ''">
            and i.pay_channel=#{payChannel}
        </if>
        <if test="startTime != null and startTime != ''">
            and i.create_date &gt;= #{startTime}
        </if>
        <if test="endTime != null and endTime != ''">
            and i.create_date &lt; #{endTime}
        </if>

    </select>


    <select id="querySum" parameterType="map" resultType="int">
        select count(DISTINCT(i.user_id))
        from
        recharge i join `user` u
        on i.user_id=u.id
        left join user_invite ui
        on i.user_id=ui.invite_user_id
        <if test="adminId != null ">
	  	inner join admin_responsible 
	   	on admin_responsible.admin_id=${adminId} 
	   	and admin_responsible.department_id=u.department_id
	    </if>
	    <if test="departmentId != null">
    	inner join department_relation
			on department_relation.department_id=${departmentId} 
			and department_relation.sub_department_id=u.department_id
	    </if>
        where
        1=1
        <if test="keyword != null and keyword != ''">
            and (u.username like '%${keyword}%' or u.true_name like '%${keyword}%' or i.order_no like '%${keyword}%' )
        </if>
        <if test="status != null">
            and i.status=#{status}
        </if>

        <if test="client != null and client != ''">
            and i.client=#{client}
        </if>

        <if test="payChannel != null and payChannel != ''">
            and i.pay_channel=#{payChannel}
        </if>
        <if test="startTime != null and startTime != ''">
            and i.update_date &gt;= #{startTime}
        </if>
        <if test="endTime != null and endTime != ''">
            and i.update_date &lt; #{endTime}
        </if>

    </select>


    <select id="getAIRechargePie" parameterType="Integer" resultType="map">
        SELECT
            sum(amount) AS count,
            'android'   AS type
        FROM recharge
        WHERE client = 1 AND status = 0
        UNION
        SELECT
            sum(amount) AS count,
            'IOS'       AS type
        FROM recharge
        WHERE client = 2 AND status = 0
    </select>

    <select id="getExportByStatus" parameterType="int" resultType="map">
        select u.phone,u.true_name trueName,i.order_no,i.pay_channel,b.name bankName,i.client,i.amount,i.update_date,i.card_no
        cardNo,i.remark,i.status from recharge i,user u,bank b where i.user_id=u.id
        and i.bank_id=b.id
        <if test="status != null">
            and i.status=#{status}
        </if>
        order by i.update_date desc
    </select>
    <select id="getRechargeAmountByMonthDay" resultType="map">
        SELECT
            sum(i.amount)                   money,
            DATE_FORMAT(i.update_date, '%Y-%m-%d') time
        FROM recharge i left join user u on i.user_id = u.id 
       <if test="adminId != null ">
		     inner join admin_responsible 
		     on admin_responsible.admin_id=#{adminId} 
		     and admin_responsible.department_id=u.department_id
		</if>
		<if test="departmentId != null">
		     inner join department_relation
		     on department_relation.department_id=#{departmentId} 
		     and department_relation.sub_department_id=u.department_id
		</if>
        WHERE
              i.status = 0
              AND i.update_date BETWEEN DATE_SUB(NOW(), INTERVAL 30 DAY) AND NOW()
              AND u.status = 0
           <!--  <if test="departmentId != null and departmentId !=''" >
           		and u.department_id = #{departmentId}
       		</if> -->
        GROUP BY DATE_FORMAT(i.update_date, '%Y%m%d')
    </select>
    <select id="checkOrderNo" resultType="com.goochou.p2b.model.Recharge">
        SELECT *
        FROM recharge
        WHERE user_id = #{id} AND order_no = #{orderNo}
    </select>

    <select id="selectRechargeWithdrawDay" parameterType="java.lang.String" resultType="map">
        SELECT
            a4.rss,
            a4.wss,
            (a4.rss - a4.wss)                                                                            total,
            a4.rtimes                                                                                    timeTotal,
            cast((CASE WHEN rss = 0
                THEN 0
                  ELSE concat(left((IFNULL(rss, 0) - IFNULL(wss, 0)) / rss * 100, 5), '%') END) AS CHAR) proportion,
            ifnull(a5.ws,0) fang
        FROM
            (
                SELECT
                    IFNULL(rs, 0)        rss,
                    IFNULL(ws, 0)        wss,
                    IFNULL(rtime, wtime) rtimes,
                    IFNULL(wtime, rtime) wtimes
                FROM
                    (
                        SELECT
                            a1.rs,
                            a2.ws,
                            a1.rtime,
                            a2.wtime
                        FROM
                            (
                                SELECT
                                    sum(r.amount)                   rs,
                                    date_format(r.update_date, '%Y-%m-%d') rtime
                                FROM
                                    recharge r
                                    LEFT JOIN user u ON r.user_id = u.id
                                WHERE
                                    r.status = 0 AND u.status = 0
                                    AND date_format(r.update_date, '%Y-%m-%d') BETWEEN date_format(#{month}, '%Y-%m-%01')
                                    AND LAST_DAY(#{month})
                                GROUP BY
                                    date_format(r.update_date, '%Y-%m-%d')
                            ) a1
                            LEFT JOIN (
                                          SELECT
                                              IFNULL(sum(w.amount), 0)               ws,
                                              date_format(w.create_time, '%Y-%m-%d') wtime
                                          FROM
                                              withdraw w
                                              LEFT JOIN user u ON w.user_id = u.id
                                          WHERE
                                              w.status in (0,1,4) AND u.status = 0
                                              AND date_format(w.create_time, '%Y-%m-%d') BETWEEN date_format(#{month}, '%Y-%m-%01')
                                              AND LAST_DAY(#{month})
                                              and user_type='normal'
                                          GROUP BY
                                              date_format(w.create_time, '%Y-%m-%d')
                                      ) a2 ON a1.rtime = a2.wtime
                        UNION
                        SELECT
                            a1.rs,
                            a2.ws,
                            a1.rtime,
                            a2.wtime
                        FROM
                            (
                                SELECT
                                    sum(r.amount)                   rs,
                                    date_format(r.update_date, '%Y-%m-%d') rtime
                                FROM
                                    recharge r
                                    LEFT JOIN user u ON r.user_id = u.id
                                WHERE
                                    r.status = 0 AND u.status = 0
                                    AND date_format(r.update_date, '%Y-%m-%d') BETWEEN date_format(#{month}, '%Y-%m-%01')
                                    AND LAST_DAY(#{month})
                                GROUP BY
                                    date_format(r.update_date, '%Y-%m-%d')
                            ) a1
                            RIGHT JOIN (
                                           SELECT
                                               IFNULL(sum(w.amount), 0)               ws,
                                               date_format(w.create_time, '%Y-%m-%d') wtime
                                           FROM
                                               withdraw w
                                               LEFT JOIN user u ON w.user_id = u.id
                                           WHERE
                                               w.status in (0,1,4) AND u.status = 0
                                               AND date_format(w.create_time, '%Y-%m-%d') BETWEEN date_format(#{month}, '%Y-%m-%01')
                                               AND LAST_DAY(#{month})
                                               and user_type='normal'
                                           GROUP BY
                                               date_format(w.create_time, '%Y-%m-%d')
                                       ) a2 ON a1.rtime = a2.wtime
                    ) a3
            ) a4 LEFT  JOIN (
                                           SELECT
                                               IFNULL(sum(w.amount), 0)               ws,
                                               date_format(w.create_time, '%Y-%m-%d') wtime
                                           FROM
                                               withdraw w
                                               LEFT JOIN user u ON w.user_id = u.id
                                           WHERE
                                               w.status in (0,1,4) AND u.status = 0
                                               AND date_format(w.create_time, '%Y-%m-%d') BETWEEN date_format(#{month}, '%Y-%m-%01')
                                               AND LAST_DAY(#{month})
                                               and user_type!='normal'
                                           GROUP BY
                                               date_format(w.create_time, '%Y-%m-%d')
                                       ) a5 ON a4.rtimes= a5.wtime
        ORDER BY
            a4.rtimes,
            a4.wtimes
    </select>

    <select id="selectRechargeWithdrawMonth" parameterType="java.lang.String" resultType="map">
        SELECT
            IFNULL(rs, 0)                   rss,
            IFNULL(ws, 0)                   wss,
            (IFNULL(rs, 0) - IFNULL(ws, 0)) total,
            IFNULL(rtime, wtime)            timeTotal,
            IFNULL(wtime, rtime)            wtimes,
            cast((CASE WHEN rs = 0
                THEN 0
                  ELSE concat(left((IFNULL(rs, 0) - IFNULL(ws, 0)) / rs * 100, 5), '%') END) AS CHAR)
                                            proportion,
            ifnull(a6.fws,0) fang
        FROM
            (
                SELECT
                    a1.rs,
                    a1.rtime,
                    a2.ws,
                    a2.wtime
                FROM
                    (
                        SELECT
                            sum(r.amount)                rs,
                            date_format(r.update_date, '%Y-%m') rtime
                        FROM
                            recharge r
                            LEFT JOIN user u ON r.user_id = u.id
                        WHERE
                            r.status = 0 AND u.status = 0
                            AND date_format(r.update_date, '%Y-%m') BETWEEN date_format(#{year}, '%Y-%01')
                            AND date_format(#{year}, '%Y-%12')
                        GROUP BY
                            date_format(r.update_date, '%Y-%m')
                    ) a1
                    LEFT JOIN (
                                  SELECT
                                      sum(w.amount)                       ws,
                                      date_format(w.create_time, '%Y-%m') wtime
                                  FROM
                                      withdraw w
                                      LEFT JOIN user u ON w.user_id = u.id
                                  WHERE
                                      w.status in (0,1,4) AND u.status = 0
                                      AND date_format(w.create_time, '%Y-%m') BETWEEN date_format(#{year}, '%Y-%01')
                                      AND date_format(#{year}, '%Y-%12')
                                  GROUP BY
                                      date_format(w.create_time, '%Y-%m')
                              ) a2 ON a1.rtime = a2.wtime
                UNION
                SELECT
                    a3.rs,
                    a3.rtime,
                    a4.ws,
                    a4.wtime
                FROM
                    (
                        SELECT
                            sum(r.amount)                rs,
                            date_format(r.update_date, '%Y-%m') rtime
                        FROM
                            recharge r
                            LEFT JOIN user u ON r.user_id = u.id
                        WHERE
                            r.status = 0 AND u.status = 0
                            AND date_format(r.update_date, '%Y-%m') BETWEEN date_format(#{year}, '%Y-%01')
                            AND date_format(#{year}, '%Y-%12')
                        GROUP BY
                            date_format(r.update_date, '%Y-%m')
                    ) a3
                    RIGHT JOIN (
                                   SELECT
                                       sum(w.amount)                       ws,
                                       date_format(w.create_time, '%Y-%m') wtime
                                   FROM withdraw w
                                       LEFT JOIN user u ON w.user_id = u.id
                                   WHERE
                                       w.status in (0,1,4) AND u.status = 0
                                       AND date_format(w.create_time, '%Y-%m') BETWEEN date_format(#{year}, '%Y-%01')
                                       AND date_format(#{year}, '%Y-%12')
                                   GROUP BY
                                       date_format(w.create_time, '%Y-%m')
                               ) a4 ON a3.rtime = a4.wtime
            ) a5
            left join (
											SELECT IFNULL(sum(w.amount), 0)               fws,
													 date_format(w.create_time, '%Y-%m') fwtime
											 FROM
													 withdraw w
													 LEFT JOIN user u ON w.user_id = u.id
											 WHERE
													 w.status in (0,1,4) AND u.status = 0
													 AND date_format(w.create_time, '%Y-%m') BETWEEN date_format(#{year}, '%Y-%01')
													 AND date_format(#{year}, '%Y-%12')
													 and user_type!='normal'
											 GROUP BY
													 date_format(w.create_time, '%Y-%m')
						) a6 on a5.wtime=a6.fwtime
        ORDER BY
            rtime
    </select>

    <select id="selectRechargeWithdrawYear" parameterType="java.lang.String" resultType="map">
        SELECT
            (IFNULL(rs, 0) - IFNULL(ws, 0)) count,
            IFNULL(rtime, wtime)            type
        FROM
            (
                SELECT
                    a1.rs,
                    a1.rtime,
                    a2.ws,
                    a2.wtime
                FROM
                    (
                        SELECT
                            sum(r.amount)              rs,
                            date_format(r.update_date, '%m月') rtime
                        FROM
                            recharge r
                        WHERE
                            r.STATUS = 0
                            AND date_format(r.update_date, '%Y-%m') BETWEEN date_format(#{year}, '%Y-%01')
                            AND date_format(#{year}, '%Y-%12')
                        GROUP BY
                            date_format(r.update_date, '%Y-%m')
                    ) a1
                    LEFT JOIN (
                                  SELECT
                                      sum(w.amount)                     ws,
                                      date_format(w.create_time, '%m月') wtime
                                  FROM
                                      withdraw w
                                  WHERE
                                      (w.STATUS = 1)
                                      AND date_format(w.create_time, '%Y-%m') BETWEEN date_format(#{year}, '%Y-%01')
                                      AND date_format(#{year}, '%Y-%12')
                                  GROUP BY
                                      date_format(w.create_time, '%Y-%m')
                              ) a2 ON a1.rtime = a2.wtime
                UNION
                SELECT
                    a3.rs,
                    a3.rtime,
                    a4.ws,
                    a4.wtime
                FROM
                    (
                        SELECT
                            sum(r.amount)              rs,
                            date_format(r.update_date, '%m月') rtime
                        FROM
                            recharge r
                        WHERE
                            r.STATUS = 0
                            AND date_format(r.update_date, '%Y-%m') BETWEEN date_format(#{year}, '%Y-%01')
                            AND date_format(#{year}, '%Y-%12')
                        GROUP BY
                            date_format(r.update_date, '%Y-%m')
                    ) a3
                    RIGHT JOIN (
                                   SELECT
                                       sum(w.amount)                     ws,
                                       date_format(w.create_time, '%m月') wtime
                                   FROM
                                       withdraw w
                                   WHERE
                                       (w.STATUS = 1)
                                       AND date_format(w.create_time, '%Y-%m') BETWEEN date_format(#{year}, '%Y-%01')
                                       AND date_format(#{year}, '%Y-%12')
                                   GROUP BY
                                       date_format(w.create_time, '%Y-%m')
                               ) a4 ON a3.rtime = a4.wtime
            ) a5
        ORDER BY
            rtime
    </select>

    <select id="selectUsersAssetsDetailsDay" parameterType="java.lang.String" resultType="map">
        SELECT
            u.id,
            u.true_name,
            u.phone,
            (
                IFNULL(a1.amountR, 0) - IFNULL(a2.amountA, 0)
            )                     sumra,
            IFNULL(a1.amountR, 0) sumr,
            IFNULL(a2.amountA, 0) suma,
            IFNULL(a3.amountW, 0) sumw
        FROM
            (
                SELECT
                    t.user_id,
                    SUM(t.amount) amountR
                FROM
                    trade_record t
                WHERE
                    date_format(t.update_date, '%Y-%m-%d') = date_format(#{days}, '%Y-%m-%d')
                    AND t.type = 1
                GROUP BY
                    t.user_id
            ) a1
            LEFT JOIN (
                          SELECT
                              t.user_id,
                              SUM(t.amount) amountA
                          FROM
                              trade_record t
                          WHERE
                              date_format(t.update_date, '%Y-%m-%d') = date_format(#{days}, '%Y-%m-%d')
                              AND t.type = 0
                          GROUP BY
                              t.user_id
                      ) a2 ON a1.user_id = a2.user_id
            LEFT JOIN (
                          SELECT
                              t.user_id,
                              SUM(t.amount) amountW
                          FROM
                              trade_record t
                          WHERE
                              date_format(t.update_date, '%Y-%m-%d') = date_format(#{days}, '%Y-%m-%d')
                              AND t.type = 2
                          GROUP BY
                              t.user_id
                      ) a3 ON a1.user_id = a3.user_id
            LEFT JOIN user u ON u.id = a1.user_id
    </select>

    <select id="detail" parameterType="int" resultType="map">
        SELECT
            r.*,
            u.username,
            u.true_name
        FROM recharge r, user u
        WHERE r.user_id = u.id AND r.id = #{id};
    </select>

    <update id="rechargeCancel">
		UPDATE recharge r
		SET r.`status` = 2,
		 remark = '用户取消支付'
		WHERE 1=1
		and r.`status` = 1
		 <![CDATA[
		AND update_date <= DATE_ADD(NOW(), INTERVAL - 60 MINUTE)
		AND update_date >= #{startDate, jdbcType=TIMESTAMP}
		 ]]>
		AND (
			SELECT
				count(1)
			FROM
				ts_trade_message_log l
			WHERE
				l.message_type = 'SEND'
			AND r.out_order_no = l.out_order_id
		) = 0
	</update>

    <select id="selectRechargeException" parameterType="map" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from recharge
        where 1=1
        <![CDATA[
        	and update_date <= DATE_ADD(NOW(), INTERVAL - 60 MINUTE)
        	AND update_date >= #{startDate, jdbcType=TIMESTAMP}
        ]]>
        <if test="payChannel != null">
            and `pay_channel` = #{payChannel,jdbcType=INTEGER}
        </if>
        <if test="status != null">
            and status = #{status,jdbcType=INTEGER}
        </if>
        <if test="limit != null">
            limit ${limit}
        </if>
    </select>

    <select id="getRechargeAmountByExpress" parameterType="map" resultType="double">
        SELECT IFNULL(SUM(i.amount),0) money  FROM recharge i, USER u
        WHERE i.user_id = u.id AND i.status IN (0,1) AND DATE_FORMAT(i.update_date,#{dateExpress}) =  DATE_FORMAT( CURDATE( ), #{dateExpress})
        AND i.pay_channel =5 AND i.card_no =#{cardNo}  AND i.user_id = #{userId}
    </select>

    <select id="queryAllChargeInfo" parameterType="map" resultType="map">
        SELECT r.id,r.`amount`,r.`status`,r.`update_date`,r.card_no,b.name FROM recharge r LEFT JOIN bank b ON r.`bank_id`=b.id
        WHERE r.`status` != 1 AND r.card_no IS NOT NULL AND r.`user_id`= #{userId}
        order by r.update_date desc
        <if test="start != null and limit != null">
            limit #{start},#{limit} ;
        </if>
    </select>

    <select id="queryAllChargeInfoCount" parameterType="map" resultType="int">
        SELECT count(1) FROM recharge r LEFT JOIN bank b ON r.`bank_id`=b.id
        WHERE r.`status` != 1 AND r.`user_id`= #{userId}
    </select>

    <select id="querySumAmount" parameterType="map" resultType="double">
        select IFNULL(sum(amount), 0.00) amount
        from
        recharge i join `user` u
        on i.user_id=u.id
        left join user_invite ui
        on i.user_id=ui.invite_user_id
        <if test="adminId != null ">
	  	inner join admin_responsible 
	   	on admin_responsible.admin_id=${adminId} 
	   	and admin_responsible.department_id=u.department_id
	    </if>
	    <if test="departmentId != null">
	    	inner join department_relation
				on department_relation.department_id=${departmentId} 
				and department_relation.sub_department_id=u.department_id
	    </if>
        where i.status=0
        <if test="keyword != null and keyword != ''">
            and (u.username like '%${keyword}%' or u.true_name like '%${keyword}%' or i.order_no like '%${keyword}%' )
        </if>
        <if test="client != null and client != ''">
            and i.client=#{client}
        </if>
        <if test="payChannel != null and payChannel != ''">
            and i.pay_channel=#{payChannel}
        </if>
        <if test="startTime != null and startTime != ''">
            and i.create_date &gt;= #{startTime}
        </if>
        <if test="endTime != null and endTime != ''">
            and i.create_date &lt; #{endTime}
        </if>
    </select>


</mapper>
