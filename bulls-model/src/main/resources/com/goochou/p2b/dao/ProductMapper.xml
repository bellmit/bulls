<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.goochou.p2b.dao.ProductMapper">
  <resultMap id="BaseResultMap" type="com.goochou.p2b.model.Product">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Jun 05 13:06:20 CST 2019.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="dividend_method" jdbcType="INTEGER" property="dividendMethod" />
    <result column="min_amount" jdbcType="DOUBLE" property="minAmount" />
    <result column="max_amount" jdbcType="DOUBLE" property="maxAmount" />
    <result column="increase_amount" jdbcType="DOUBLE" property="increaseAmount" />
    <result column="support_hongbao" jdbcType="TINYINT" property="supportHongbao" />
    <result column="support_rate_coupon" jdbcType="TINYINT" property="supportRateCoupon" />
    <result column="out_days" jdbcType="INTEGER" property="outDays" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="update_date" jdbcType="TIMESTAMP" property="updateDate" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="version" jdbcType="INTEGER" property="version" />
    <result column="male_price" jdbcType="DOUBLE" property="malePrice" />
    <result column="female_price" jdbcType="DOUBLE" property="femalePrice" />
    <result column="feed_price" jdbcType="DOUBLE" property="feedPrice" />
    <result column="add_weight" jdbcType="DOUBLE" property="addWeight" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Jun 05 13:06:20 CST 2019.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Jun 05 13:06:20 CST 2019.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Jun 05 13:06:20 CST 2019.
    -->
    id, name, dividend_method, min_amount, max_amount, increase_amount, support_hongbao, 
    support_rate_coupon, out_days, create_date, update_date, status, version, male_price, 
    female_price, feed_price, add_weight
  </sql>
  <select id="selectByExample" parameterType="com.goochou.p2b.model.ProductExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Jun 05 13:06:20 CST 2019.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from product
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart&gt;-1">
      limit ${limitStart} , ${limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Jun 05 13:06:20 CST 2019.
    -->
    select 
    <include refid="Base_Column_List" />
    from product
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Jun 05 13:06:20 CST 2019.
    -->
    delete from product
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.goochou.p2b.model.ProductExample">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Jun 05 13:06:20 CST 2019.
    -->
    delete from product
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyProperty="id" parameterType="com.goochou.p2b.model.Product" useGeneratedKeys="true">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Jun 05 13:06:20 CST 2019.
    -->
    insert into product (id, name, dividend_method, 
      min_amount, max_amount, increase_amount, 
      support_hongbao, support_rate_coupon, out_days, 
      create_date, update_date, status, 
      version, male_price, female_price, 
      feed_price, add_weight)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{dividendMethod,jdbcType=INTEGER}, 
      #{minAmount,jdbcType=DOUBLE}, #{maxAmount,jdbcType=DOUBLE}, #{increaseAmount,jdbcType=DOUBLE}, 
      #{supportHongbao,jdbcType=TINYINT}, #{supportRateCoupon,jdbcType=TINYINT}, #{outDays,jdbcType=INTEGER}, 
      #{createDate,jdbcType=TIMESTAMP}, #{updateDate,jdbcType=TIMESTAMP}, #{status,jdbcType=INTEGER}, 
      #{version,jdbcType=INTEGER}, #{malePrice,jdbcType=DOUBLE}, #{femalePrice,jdbcType=DOUBLE}, 
      #{feedPrice,jdbcType=DOUBLE}, #{addWeight,jdbcType=DOUBLE})
  </insert>
  <insert id="insertSelective" parameterType="com.goochou.p2b.model.Product">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Jun 05 13:06:20 CST 2019.
    -->
    insert into product
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="dividendMethod != null">
        dividend_method,
      </if>
      <if test="minAmount != null">
        min_amount,
      </if>
      <if test="maxAmount != null">
        max_amount,
      </if>
      <if test="increaseAmount != null">
        increase_amount,
      </if>
      <if test="supportHongbao != null">
        support_hongbao,
      </if>
      <if test="supportRateCoupon != null">
        support_rate_coupon,
      </if>
      <if test="outDays != null">
        out_days,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="updateDate != null">
        update_date,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="version != null">
        version,
      </if>
      <if test="malePrice != null">
        male_price,
      </if>
      <if test="femalePrice != null">
        female_price,
      </if>
      <if test="feedPrice != null">
        feed_price,
      </if>
      <if test="addWeight != null">
        add_weight,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="dividendMethod != null">
        #{dividendMethod,jdbcType=INTEGER},
      </if>
      <if test="minAmount != null">
        #{minAmount,jdbcType=DOUBLE},
      </if>
      <if test="maxAmount != null">
        #{maxAmount,jdbcType=DOUBLE},
      </if>
      <if test="increaseAmount != null">
        #{increaseAmount,jdbcType=DOUBLE},
      </if>
      <if test="supportHongbao != null">
        #{supportHongbao,jdbcType=TINYINT},
      </if>
      <if test="supportRateCoupon != null">
        #{supportRateCoupon,jdbcType=TINYINT},
      </if>
      <if test="outDays != null">
        #{outDays,jdbcType=INTEGER},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="version != null">
        #{version,jdbcType=INTEGER},
      </if>
      <if test="malePrice != null">
        #{malePrice,jdbcType=DOUBLE},
      </if>
      <if test="femalePrice != null">
        #{femalePrice,jdbcType=DOUBLE},
      </if>
      <if test="feedPrice != null">
        #{feedPrice,jdbcType=DOUBLE},
      </if>
      <if test="addWeight != null">
        #{addWeight,jdbcType=DOUBLE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.goochou.p2b.model.ProductExample" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Jun 05 13:06:20 CST 2019.
    -->
    select count(*) from product
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Jun 05 13:06:20 CST 2019.
    -->
    update product
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.dividendMethod != null">
        dividend_method = #{record.dividendMethod,jdbcType=INTEGER},
      </if>
      <if test="record.minAmount != null">
        min_amount = #{record.minAmount,jdbcType=DOUBLE},
      </if>
      <if test="record.maxAmount != null">
        max_amount = #{record.maxAmount,jdbcType=DOUBLE},
      </if>
      <if test="record.increaseAmount != null">
        increase_amount = #{record.increaseAmount,jdbcType=DOUBLE},
      </if>
      <if test="record.supportHongbao != null">
        support_hongbao = #{record.supportHongbao,jdbcType=TINYINT},
      </if>
      <if test="record.supportRateCoupon != null">
        support_rate_coupon = #{record.supportRateCoupon,jdbcType=TINYINT},
      </if>
      <if test="record.outDays != null">
        out_days = #{record.outDays,jdbcType=INTEGER},
      </if>
      <if test="record.createDate != null">
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateDate != null">
        update_date = #{record.updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.version != null">
        version = #{record.version,jdbcType=INTEGER},
      </if>
      <if test="record.malePrice != null">
        male_price = #{record.malePrice,jdbcType=DOUBLE},
      </if>
      <if test="record.femalePrice != null">
        female_price = #{record.femalePrice,jdbcType=DOUBLE},
      </if>
      <if test="record.feedPrice != null">
        feed_price = #{record.feedPrice,jdbcType=DOUBLE},
      </if>
      <if test="record.addWeight != null">
        add_weight = #{record.addWeight,jdbcType=DOUBLE},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Jun 05 13:06:20 CST 2019.
    -->
    update product
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      dividend_method = #{record.dividendMethod,jdbcType=INTEGER},
      min_amount = #{record.minAmount,jdbcType=DOUBLE},
      max_amount = #{record.maxAmount,jdbcType=DOUBLE},
      increase_amount = #{record.increaseAmount,jdbcType=DOUBLE},
      support_hongbao = #{record.supportHongbao,jdbcType=TINYINT},
      support_rate_coupon = #{record.supportRateCoupon,jdbcType=TINYINT},
      out_days = #{record.outDays,jdbcType=INTEGER},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      update_date = #{record.updateDate,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=INTEGER},
      version = #{record.version,jdbcType=INTEGER},
      male_price = #{record.malePrice,jdbcType=DOUBLE},
      female_price = #{record.femalePrice,jdbcType=DOUBLE},
      feed_price = #{record.feedPrice,jdbcType=DOUBLE},
      add_weight = #{record.addWeight,jdbcType=DOUBLE}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.goochou.p2b.model.Product">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Jun 05 13:06:20 CST 2019.
    -->
    update product
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="dividendMethod != null">
        dividend_method = #{dividendMethod,jdbcType=INTEGER},
      </if>
      <if test="minAmount != null">
        min_amount = #{minAmount,jdbcType=DOUBLE},
      </if>
      <if test="maxAmount != null">
        max_amount = #{maxAmount,jdbcType=DOUBLE},
      </if>
      <if test="increaseAmount != null">
        increase_amount = #{increaseAmount,jdbcType=DOUBLE},
      </if>
      <if test="supportHongbao != null">
        support_hongbao = #{supportHongbao,jdbcType=TINYINT},
      </if>
      <if test="supportRateCoupon != null">
        support_rate_coupon = #{supportRateCoupon,jdbcType=TINYINT},
      </if>
      <if test="outDays != null">
        out_days = #{outDays,jdbcType=INTEGER},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null">
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="version != null">
        version = #{version,jdbcType=INTEGER},
      </if>
      <if test="malePrice != null">
        male_price = #{malePrice,jdbcType=DOUBLE},
      </if>
      <if test="femalePrice != null">
        female_price = #{femalePrice,jdbcType=DOUBLE},
      </if>
      <if test="feedPrice != null">
        feed_price = #{feedPrice,jdbcType=DOUBLE},
      </if>
      <if test="addWeight != null">
        add_weight = #{addWeight,jdbcType=DOUBLE},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.goochou.p2b.model.Product">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Jun 05 13:06:20 CST 2019.
    -->
    update product
    set name = #{name,jdbcType=VARCHAR},
      dividend_method = #{dividendMethod,jdbcType=INTEGER},
      min_amount = #{minAmount,jdbcType=DOUBLE},
      max_amount = #{maxAmount,jdbcType=DOUBLE},
      increase_amount = #{increaseAmount,jdbcType=DOUBLE},
      support_hongbao = #{supportHongbao,jdbcType=TINYINT},
      support_rate_coupon = #{supportRateCoupon,jdbcType=TINYINT},
      out_days = #{outDays,jdbcType=INTEGER},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      update_date = #{updateDate,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=INTEGER},
      version = #{version,jdbcType=INTEGER},
      male_price = #{malePrice,jdbcType=DOUBLE},
      female_price = #{femalePrice,jdbcType=DOUBLE},
      feed_price = #{feedPrice,jdbcType=DOUBLE},
      add_weight = #{addWeight,jdbcType=DOUBLE}
    where id = #{id,jdbcType=INTEGER}
  </update>

    <update id="updateByPrimaryKeySelectiveAndVersion" parameterType="com.goochou.p2b.model.Product">
        update product
        <set>
            version = version + 1,
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="openAmount != null">
                open_amount = #{openAmount,jdbcType=DOUBLE},
            </if>
            <if test="annualizedMin != null">
                annualized_min = #{annualizedMin,jdbcType=REAL},
            </if>
            <if test="annualizedMax != null">
                annualized_max = #{annualizedMax,jdbcType=REAL},
            </if>
            <if test="limitDays != null">
                limit_days = #{limitDays,jdbcType=INTEGER},
            </if>
            <if test="dividendMethod != null">
                dividend_method = #{dividendMethod,jdbcType=INTEGER},
            </if>
            <if test="minAmount != null">
                min_amount = #{minAmount,jdbcType=DOUBLE},
            </if>
            <if test="maxAmount != null">
                max_amount = #{maxAmount,jdbcType=DOUBLE},
            </if>
            <if test="increaseAmount != null">
                increase_amount = #{increaseAmount,jdbcType=DOUBLE},
            </if>
            <if test="supportHongbao != null">
                support_hongbao = #{supportHongbao,jdbcType=TINYINT},
            </if>
            <if test="supportCoupon != null">
                support_coupon = #{supportCoupon,jdbcType=TINYINT},
            </if>
            <if test="outDays != null">
                out_days = #{outDays,jdbcType=INTEGER},
            </if>
            <if test="time != null">
                time = #{time,jdbcType=TIMESTAMP},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER} and version = #{version,jdbcType=INTEGER}
    </update>


    <select id="selectMinOutDaysProduct" resultMap="BaseResultMap">
        SELECT p.*
        FROM product p
        WHERE p.out_days = (SELECT MIN(out_days)
                            FROM product
                            WHERE status = 1 AND open_amount IS NOT NULL) AND status = 1 AND open_amount IS NOT NULL
        ORDER BY p.time DESC
        LIMIT 1;
    </select>
    <select id="selectMaxAnnualizedProduct" resultMap="BaseResultMap">
        SELECT p.*
        FROM product p
        WHERE p.annualized_min = (SELECT MAX(annualized_min)
                                  FROM product
                                  WHERE status = 1 AND open_amount IS NOT NULL) AND status = 1 AND open_amount IS NOT NULL
        ORDER BY p.time DESC
        LIMIT 1;
    </select>


    <select id="selectProductLimit" resultType="map">
        SELECT
            MIN(out_days)               minDays,
            MAX(out_days)               maxDays,
            (MIN(annualized_min) * 100) minAnnualized,
            (MAX(annualized_min) * 100) maxAnnualized,
            MIN(min_amount)             minAmount
        FROM product
        WHERE status = 1 AND open_amount IS NOT NULL
    </select>


    <select id="selectByInvestmentIdProjectList" parameterType="map" resultType="map">
        SELECT
            if(p.project_type = 6, CONCAT('(转)', p.title), p.title) title,
            d.amount,
            p.project_type,
            p.id,
            d.id                                                    idd,
            i.time
        FROM investment_detail d
            LEFT JOIN project p ON d.project_id = p.id
            LEFT JOIN investment i ON d.investment_id = i.id
        WHERE i.id = #{investmentId} AND i.user_id = #{userId}
    </select>

    <select id="selectByInvestmentIdProjectCount" parameterType="map" resultType="int">
        SELECT count(d.id)
        FROM investment_detail d
            LEFT JOIN project p ON d.project_id = p.id
            LEFT JOIN investment i ON d.investment_id = i.id
        WHERE i.id = #{investmentId} AND i.user_id = #{userId}
    </select>


    <select id="selectInvestDetailIvestList" parameterType="map" resultType="map">
        select d.* from (
        <if test="status == 0">
            select date_format(i.time,'%Y-%m-%d') time,i.amount,3 status from investment i where i.user_id=#{userId} and i.id=#{investmentId}
            UNION
            select date_format(i.success_out_time,'%Y-%m-%d') time,i.amount,0 status from investment i where i.status=2 and i.user_id=#{userId} and i.id=#{investmentId}
            UNION
            select date_format(i.time,'%Y-%m-%d') time,i.amount amount,2 status from interest_product i where i.investment_id=#{investmentId}
        </if>
        <if test="status == 1">
            select date_format(i.time,'%Y-%m-%d') time,i.amount,3 status from investment i where i.user_id=#{userId} and i.id=#{investmentId}
        </if>
        <if test="status == 2">
            select date_format(i.time,'%Y-%m-%d') time,i.amount amount,2 status from interest_product i where i.investment_id=#{investmentId}
        </if>
        <if test="status == 3">
            select date_format(i.success_out_time,'%Y-%m-%d') time,i.amount,0 status from investment i where i.status=2 and i.user_id=#{userId} and i.id=#{investmentId}
        </if>
        ) d order by d.time desc
        <if test="start != null and limit&gt;-1">
            limit ${start} , ${limit}
        </if>
    </select>

    <select id="selectInvestDetailIvestCount" parameterType="map" resultType="int">
        select count(d.time) from (
        <if test="status == 0">
            select i.time,i.amount,3 status from investment i where i.user_id=#{userId} and i.id=#{investmentId}
            UNION
            select i.success_out_time time,i.amount,0 status from investment i where i.status=2 and i.user_id=#{userId} and i.id=#{investmentId}
            UNION
            select i.time time,i.amount amount,2 status from interest_product i where i.investment_id=#{investmentId}
        </if>
        <if test="status == 1">
            select i.time,i.amount,3 status from investment i where i.user_id=#{userId} and i.id=#{investmentId}
        </if>
        <if test="status == 2">
            select i.time time,i.amount amount,2 status from interest_product i where i.investment_id=#{investmentId}
        </if>
        <if test="status == 3">
            select i.success_out_time time,i.amount,0 status from investment i where i.status=2 and i.user_id=#{userId} and i.id=#{investmentId}
        </if>
        ) d
    </select>

    <select id="projectFormIvestList" parameterType="map" resultType="map">
        select p.title ,FORMAT(p.limit_days/30,0) limitDays ,FORMAT(p.total_amount,2) amount, p.id,p.project_type projectType from
        project p LEFT JOIN product pt on pt.id = p.product_id
        where pt.id = #{packageId} and p.project_type = 5 and p.status in(1,2,3)
        <if test="start != null and limit &gt;-1">
            limit #{start} , #{limit}
        </if>
    </select>

    <select id="projectFormIvestListCount" parameterType="map" resultType="int">
        SELECT count(*)
        FROM
            project p LEFT JOIN product pt ON pt.id = p.product_id
        WHERE pt.id = #{packageId} AND p.project_type = 5 AND p.status IN (1, 2, 3)
    </select>

    <select id="projectFormIvestList1" parameterType="map" resultType="map">
        select p.title ,FORMAT(p.limit_days/30,0) limitDays ,FORMAT(p.total_amount,2) amount, p.id from
        project p LEFT JOIN product pt on pt.id = p.product_id
        where p.status=1 and pt.id = #{packageId} and p.project_type = 5 ORDER BY p.start_time desc
        <if test="start != null and limit &gt;-1">
            limit #{start} , #{limit}
        </if>
    </select>

    <select id="projectFormIvestListCount1" parameterType="map" resultType="int">
        SELECT count(*)
        FROM
            project p LEFT JOIN product pt ON pt.id = p.product_id
        WHERE p.status = 1 AND pt.id = #{packageId} AND p.project_type = 5
        ORDER BY p.start_time DESC
    </select>

    <select id="list" parameterType="map" resultType="map">
        select inv.product_id ,FORMAT(inv.amount,2) amount ,date_format(inv.time, '%Y-%m-%d %H:%i:%s') time, CONCAT(left(u.username,1),'***',right(u.username,1)) username , case when inv.type=5 then '手动投资' when inv.type=6 then '利息复投' end type from investment inv LEFT JOIN user u on u.id = inv.user_id where inv.product_id=#{productId} ORDER BY inv.time desc
        <if test="start != null and limit &gt;-1">
            limit #{start} ,#{limit}
        </if>
    </select>

    <select id="listCount" parameterType="map" resultType="int">
        SELECT count(*)
        FROM investment inv LEFT JOIN user u ON u.id = inv.user_id
        WHERE inv.product_id = #{productId}
        ORDER BY inv.time DESC

    </select>


    <select id="selectYesterdayAmount" parameterType="int" resultType="double">
        SELECT sum(amount)
        FROM interest_product
        WHERE TO_DAYS(NOW()) = TO_DAYS(time) + 1 AND user_id = #{userId}
    </select>

    <select id="selectProductTotalAmount" parameterType="int" resultType="double">
        SELECT sum(interest_usable_amount)
        FROM investment
        WHERE type IN (5, 6, 7) AND user_id = #{userId}
    </select>

    <select id="selectByInvestmentIdProduct" parameterType="int" resultMap="BaseResultMap">
        SELECT *
        FROM product p
            LEFT JOIN investment i ON p.id = i.product_id
        WHERE i.id = #{investmentId}
    </select>

</mapper>