package com.goochou.p2b.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class UserSignConfigExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table user_sign_config
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table user_sign_config
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table user_sign_config
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_sign_config
     *
     * @mbggenerated
     */
    public UserSignConfigExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_sign_config
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_sign_config
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_sign_config
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_sign_config
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_sign_config
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_sign_config
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_sign_config
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_sign_config
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_sign_config
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_sign_config
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table user_sign_config
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andStartTimeIsNull() {
            addCriterion("start_time is null");
            return (Criteria) this;
        }

        public Criteria andStartTimeIsNotNull() {
            addCriterion("start_time is not null");
            return (Criteria) this;
        }

        public Criteria andStartTimeEqualTo(Date value) {
            addCriterion("start_time =", value, "startTime");
            return (Criteria) this;
        }

        public Criteria andStartTimeNotEqualTo(Date value) {
            addCriterion("start_time <>", value, "startTime");
            return (Criteria) this;
        }

        public Criteria andStartTimeGreaterThan(Date value) {
            addCriterion("start_time >", value, "startTime");
            return (Criteria) this;
        }

        public Criteria andStartTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("start_time >=", value, "startTime");
            return (Criteria) this;
        }

        public Criteria andStartTimeLessThan(Date value) {
            addCriterion("start_time <", value, "startTime");
            return (Criteria) this;
        }

        public Criteria andStartTimeLessThanOrEqualTo(Date value) {
            addCriterion("start_time <=", value, "startTime");
            return (Criteria) this;
        }

        public Criteria andStartTimeIn(List<Date> values) {
            addCriterion("start_time in", values, "startTime");
            return (Criteria) this;
        }

        public Criteria andStartTimeNotIn(List<Date> values) {
            addCriterion("start_time not in", values, "startTime");
            return (Criteria) this;
        }

        public Criteria andStartTimeBetween(Date value1, Date value2) {
            addCriterion("start_time between", value1, value2, "startTime");
            return (Criteria) this;
        }

        public Criteria andStartTimeNotBetween(Date value1, Date value2) {
            addCriterion("start_time not between", value1, value2, "startTime");
            return (Criteria) this;
        }

        public Criteria andEndTimeIsNull() {
            addCriterion("end_time is null");
            return (Criteria) this;
        }

        public Criteria andEndTimeIsNotNull() {
            addCriterion("end_time is not null");
            return (Criteria) this;
        }

        public Criteria andEndTimeEqualTo(Date value) {
            addCriterion("end_time =", value, "endTime");
            return (Criteria) this;
        }

        public Criteria andEndTimeNotEqualTo(Date value) {
            addCriterion("end_time <>", value, "endTime");
            return (Criteria) this;
        }

        public Criteria andEndTimeGreaterThan(Date value) {
            addCriterion("end_time >", value, "endTime");
            return (Criteria) this;
        }

        public Criteria andEndTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("end_time >=", value, "endTime");
            return (Criteria) this;
        }

        public Criteria andEndTimeLessThan(Date value) {
            addCriterion("end_time <", value, "endTime");
            return (Criteria) this;
        }

        public Criteria andEndTimeLessThanOrEqualTo(Date value) {
            addCriterion("end_time <=", value, "endTime");
            return (Criteria) this;
        }

        public Criteria andEndTimeIn(List<Date> values) {
            addCriterion("end_time in", values, "endTime");
            return (Criteria) this;
        }

        public Criteria andEndTimeNotIn(List<Date> values) {
            addCriterion("end_time not in", values, "endTime");
            return (Criteria) this;
        }

        public Criteria andEndTimeBetween(Date value1, Date value2) {
            addCriterion("end_time between", value1, value2, "endTime");
            return (Criteria) this;
        }

        public Criteria andEndTimeNotBetween(Date value1, Date value2) {
            addCriterion("end_time not between", value1, value2, "endTime");
            return (Criteria) this;
        }

        public Criteria andIsInvestedIsNull() {
            addCriterion("is_invested is null");
            return (Criteria) this;
        }

        public Criteria andIsInvestedIsNotNull() {
            addCriterion("is_invested is not null");
            return (Criteria) this;
        }

        public Criteria andIsInvestedEqualTo(Integer value) {
            addCriterion("is_invested =", value, "isInvested");
            return (Criteria) this;
        }

        public Criteria andIsInvestedNotEqualTo(Integer value) {
            addCriterion("is_invested <>", value, "isInvested");
            return (Criteria) this;
        }

        public Criteria andIsInvestedGreaterThan(Integer value) {
            addCriterion("is_invested >", value, "isInvested");
            return (Criteria) this;
        }

        public Criteria andIsInvestedGreaterThanOrEqualTo(Integer value) {
            addCriterion("is_invested >=", value, "isInvested");
            return (Criteria) this;
        }

        public Criteria andIsInvestedLessThan(Integer value) {
            addCriterion("is_invested <", value, "isInvested");
            return (Criteria) this;
        }

        public Criteria andIsInvestedLessThanOrEqualTo(Integer value) {
            addCriterion("is_invested <=", value, "isInvested");
            return (Criteria) this;
        }

        public Criteria andIsInvestedIn(List<Integer> values) {
            addCriterion("is_invested in", values, "isInvested");
            return (Criteria) this;
        }

        public Criteria andIsInvestedNotIn(List<Integer> values) {
            addCriterion("is_invested not in", values, "isInvested");
            return (Criteria) this;
        }

        public Criteria andIsInvestedBetween(Integer value1, Integer value2) {
            addCriterion("is_invested between", value1, value2, "isInvested");
            return (Criteria) this;
        }

        public Criteria andIsInvestedNotBetween(Integer value1, Integer value2) {
            addCriterion("is_invested not between", value1, value2, "isInvested");
            return (Criteria) this;
        }

        public Criteria andNormalPrizeIsNull() {
            addCriterion("normal_prize is null");
            return (Criteria) this;
        }

        public Criteria andNormalPrizeIsNotNull() {
            addCriterion("normal_prize is not null");
            return (Criteria) this;
        }

        public Criteria andNormalPrizeEqualTo(String value) {
            addCriterion("normal_prize =", value, "normalPrize");
            return (Criteria) this;
        }

        public Criteria andNormalPrizeNotEqualTo(String value) {
            addCriterion("normal_prize <>", value, "normalPrize");
            return (Criteria) this;
        }

        public Criteria andNormalPrizeGreaterThan(String value) {
            addCriterion("normal_prize >", value, "normalPrize");
            return (Criteria) this;
        }

        public Criteria andNormalPrizeGreaterThanOrEqualTo(String value) {
            addCriterion("normal_prize >=", value, "normalPrize");
            return (Criteria) this;
        }

        public Criteria andNormalPrizeLessThan(String value) {
            addCriterion("normal_prize <", value, "normalPrize");
            return (Criteria) this;
        }

        public Criteria andNormalPrizeLessThanOrEqualTo(String value) {
            addCriterion("normal_prize <=", value, "normalPrize");
            return (Criteria) this;
        }

        public Criteria andNormalPrizeLike(String value) {
            addCriterion("normal_prize like", value, "normalPrize");
            return (Criteria) this;
        }

        public Criteria andNormalPrizeNotLike(String value) {
            addCriterion("normal_prize not like", value, "normalPrize");
            return (Criteria) this;
        }

        public Criteria andNormalPrizeIn(List<String> values) {
            addCriterion("normal_prize in", values, "normalPrize");
            return (Criteria) this;
        }

        public Criteria andNormalPrizeNotIn(List<String> values) {
            addCriterion("normal_prize not in", values, "normalPrize");
            return (Criteria) this;
        }

        public Criteria andNormalPrizeBetween(String value1, String value2) {
            addCriterion("normal_prize between", value1, value2, "normalPrize");
            return (Criteria) this;
        }

        public Criteria andNormalPrizeNotBetween(String value1, String value2) {
            addCriterion("normal_prize not between", value1, value2, "normalPrize");
            return (Criteria) this;
        }

        public Criteria andActivityPrizeIsNull() {
            addCriterion("activity_prize is null");
            return (Criteria) this;
        }

        public Criteria andActivityPrizeIsNotNull() {
            addCriterion("activity_prize is not null");
            return (Criteria) this;
        }

        public Criteria andActivityPrizeEqualTo(String value) {
            addCriterion("activity_prize =", value, "activityPrize");
            return (Criteria) this;
        }

        public Criteria andActivityPrizeNotEqualTo(String value) {
            addCriterion("activity_prize <>", value, "activityPrize");
            return (Criteria) this;
        }

        public Criteria andActivityPrizeGreaterThan(String value) {
            addCriterion("activity_prize >", value, "activityPrize");
            return (Criteria) this;
        }

        public Criteria andActivityPrizeGreaterThanOrEqualTo(String value) {
            addCriterion("activity_prize >=", value, "activityPrize");
            return (Criteria) this;
        }

        public Criteria andActivityPrizeLessThan(String value) {
            addCriterion("activity_prize <", value, "activityPrize");
            return (Criteria) this;
        }

        public Criteria andActivityPrizeLessThanOrEqualTo(String value) {
            addCriterion("activity_prize <=", value, "activityPrize");
            return (Criteria) this;
        }

        public Criteria andActivityPrizeLike(String value) {
            addCriterion("activity_prize like", value, "activityPrize");
            return (Criteria) this;
        }

        public Criteria andActivityPrizeNotLike(String value) {
            addCriterion("activity_prize not like", value, "activityPrize");
            return (Criteria) this;
        }

        public Criteria andActivityPrizeIn(List<String> values) {
            addCriterion("activity_prize in", values, "activityPrize");
            return (Criteria) this;
        }

        public Criteria andActivityPrizeNotIn(List<String> values) {
            addCriterion("activity_prize not in", values, "activityPrize");
            return (Criteria) this;
        }

        public Criteria andActivityPrizeBetween(String value1, String value2) {
            addCriterion("activity_prize between", value1, value2, "activityPrize");
            return (Criteria) this;
        }

        public Criteria andActivityPrizeNotBetween(String value1, String value2) {
            addCriterion("activity_prize not between", value1, value2, "activityPrize");
            return (Criteria) this;
        }

        public Criteria andComboPrizeIsNull() {
            addCriterion("combo_prize is null");
            return (Criteria) this;
        }

        public Criteria andComboPrizeIsNotNull() {
            addCriterion("combo_prize is not null");
            return (Criteria) this;
        }

        public Criteria andComboPrizeEqualTo(String value) {
            addCriterion("combo_prize =", value, "comboPrize");
            return (Criteria) this;
        }

        public Criteria andComboPrizeNotEqualTo(String value) {
            addCriterion("combo_prize <>", value, "comboPrize");
            return (Criteria) this;
        }

        public Criteria andComboPrizeGreaterThan(String value) {
            addCriterion("combo_prize >", value, "comboPrize");
            return (Criteria) this;
        }

        public Criteria andComboPrizeGreaterThanOrEqualTo(String value) {
            addCriterion("combo_prize >=", value, "comboPrize");
            return (Criteria) this;
        }

        public Criteria andComboPrizeLessThan(String value) {
            addCriterion("combo_prize <", value, "comboPrize");
            return (Criteria) this;
        }

        public Criteria andComboPrizeLessThanOrEqualTo(String value) {
            addCriterion("combo_prize <=", value, "comboPrize");
            return (Criteria) this;
        }

        public Criteria andComboPrizeLike(String value) {
            addCriterion("combo_prize like", value, "comboPrize");
            return (Criteria) this;
        }

        public Criteria andComboPrizeNotLike(String value) {
            addCriterion("combo_prize not like", value, "comboPrize");
            return (Criteria) this;
        }

        public Criteria andComboPrizeIn(List<String> values) {
            addCriterion("combo_prize in", values, "comboPrize");
            return (Criteria) this;
        }

        public Criteria andComboPrizeNotIn(List<String> values) {
            addCriterion("combo_prize not in", values, "comboPrize");
            return (Criteria) this;
        }

        public Criteria andComboPrizeBetween(String value1, String value2) {
            addCriterion("combo_prize between", value1, value2, "comboPrize");
            return (Criteria) this;
        }

        public Criteria andComboPrizeNotBetween(String value1, String value2) {
            addCriterion("combo_prize not between", value1, value2, "comboPrize");
            return (Criteria) this;
        }

        public Criteria andIsDeletedIsNull() {
            addCriterion("is_deleted is null");
            return (Criteria) this;
        }

        public Criteria andIsDeletedIsNotNull() {
            addCriterion("is_deleted is not null");
            return (Criteria) this;
        }

        public Criteria andIsDeletedEqualTo(Integer value) {
            addCriterion("is_deleted =", value, "isDeleted");
            return (Criteria) this;
        }

        public Criteria andIsDeletedNotEqualTo(Integer value) {
            addCriterion("is_deleted <>", value, "isDeleted");
            return (Criteria) this;
        }

        public Criteria andIsDeletedGreaterThan(Integer value) {
            addCriterion("is_deleted >", value, "isDeleted");
            return (Criteria) this;
        }

        public Criteria andIsDeletedGreaterThanOrEqualTo(Integer value) {
            addCriterion("is_deleted >=", value, "isDeleted");
            return (Criteria) this;
        }

        public Criteria andIsDeletedLessThan(Integer value) {
            addCriterion("is_deleted <", value, "isDeleted");
            return (Criteria) this;
        }

        public Criteria andIsDeletedLessThanOrEqualTo(Integer value) {
            addCriterion("is_deleted <=", value, "isDeleted");
            return (Criteria) this;
        }

        public Criteria andIsDeletedIn(List<Integer> values) {
            addCriterion("is_deleted in", values, "isDeleted");
            return (Criteria) this;
        }

        public Criteria andIsDeletedNotIn(List<Integer> values) {
            addCriterion("is_deleted not in", values, "isDeleted");
            return (Criteria) this;
        }

        public Criteria andIsDeletedBetween(Integer value1, Integer value2) {
            addCriterion("is_deleted between", value1, value2, "isDeleted");
            return (Criteria) this;
        }

        public Criteria andIsDeletedNotBetween(Integer value1, Integer value2) {
            addCriterion("is_deleted not between", value1, value2, "isDeleted");
            return (Criteria) this;
        }

        public Criteria andCreateDateIsNull() {
            addCriterion("create_date is null");
            return (Criteria) this;
        }

        public Criteria andCreateDateIsNotNull() {
            addCriterion("create_date is not null");
            return (Criteria) this;
        }

        public Criteria andCreateDateEqualTo(Date value) {
            addCriterion("create_date =", value, "createDate");
            return (Criteria) this;
        }

        public Criteria andCreateDateNotEqualTo(Date value) {
            addCriterion("create_date <>", value, "createDate");
            return (Criteria) this;
        }

        public Criteria andCreateDateGreaterThan(Date value) {
            addCriterion("create_date >", value, "createDate");
            return (Criteria) this;
        }

        public Criteria andCreateDateGreaterThanOrEqualTo(Date value) {
            addCriterion("create_date >=", value, "createDate");
            return (Criteria) this;
        }

        public Criteria andCreateDateLessThan(Date value) {
            addCriterion("create_date <", value, "createDate");
            return (Criteria) this;
        }

        public Criteria andCreateDateLessThanOrEqualTo(Date value) {
            addCriterion("create_date <=", value, "createDate");
            return (Criteria) this;
        }

        public Criteria andCreateDateIn(List<Date> values) {
            addCriterion("create_date in", values, "createDate");
            return (Criteria) this;
        }

        public Criteria andCreateDateNotIn(List<Date> values) {
            addCriterion("create_date not in", values, "createDate");
            return (Criteria) this;
        }

        public Criteria andCreateDateBetween(Date value1, Date value2) {
            addCriterion("create_date between", value1, value2, "createDate");
            return (Criteria) this;
        }

        public Criteria andCreateDateNotBetween(Date value1, Date value2) {
            addCriterion("create_date not between", value1, value2, "createDate");
            return (Criteria) this;
        }

        public Criteria andUpdateDateIsNull() {
            addCriterion("update_date is null");
            return (Criteria) this;
        }

        public Criteria andUpdateDateIsNotNull() {
            addCriterion("update_date is not null");
            return (Criteria) this;
        }

        public Criteria andUpdateDateEqualTo(Date value) {
            addCriterion("update_date =", value, "updateDate");
            return (Criteria) this;
        }

        public Criteria andUpdateDateNotEqualTo(Date value) {
            addCriterion("update_date <>", value, "updateDate");
            return (Criteria) this;
        }

        public Criteria andUpdateDateGreaterThan(Date value) {
            addCriterion("update_date >", value, "updateDate");
            return (Criteria) this;
        }

        public Criteria andUpdateDateGreaterThanOrEqualTo(Date value) {
            addCriterion("update_date >=", value, "updateDate");
            return (Criteria) this;
        }

        public Criteria andUpdateDateLessThan(Date value) {
            addCriterion("update_date <", value, "updateDate");
            return (Criteria) this;
        }

        public Criteria andUpdateDateLessThanOrEqualTo(Date value) {
            addCriterion("update_date <=", value, "updateDate");
            return (Criteria) this;
        }

        public Criteria andUpdateDateIn(List<Date> values) {
            addCriterion("update_date in", values, "updateDate");
            return (Criteria) this;
        }

        public Criteria andUpdateDateNotIn(List<Date> values) {
            addCriterion("update_date not in", values, "updateDate");
            return (Criteria) this;
        }

        public Criteria andUpdateDateBetween(Date value1, Date value2) {
            addCriterion("update_date between", value1, value2, "updateDate");
            return (Criteria) this;
        }

        public Criteria andUpdateDateNotBetween(Date value1, Date value2) {
            addCriterion("update_date not between", value1, value2, "updateDate");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table user_sign_config
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table user_sign_config
     *
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}