package com.goochou.p2b.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class UserInvestConfigDetailsExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table user_invest_config_details
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table user_invest_config_details
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table user_invest_config_details
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_invest_config_details
     *
     * @mbggenerated
     */
    public UserInvestConfigDetailsExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_invest_config_details
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_invest_config_details
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_invest_config_details
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_invest_config_details
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_invest_config_details
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_invest_config_details
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_invest_config_details
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_invest_config_details
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_invest_config_details
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_invest_config_details
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table user_invest_config_details
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andInvestConfigIdIsNull() {
            addCriterion("invest_config_id is null");
            return (Criteria) this;
        }

        public Criteria andInvestConfigIdIsNotNull() {
            addCriterion("invest_config_id is not null");
            return (Criteria) this;
        }

        public Criteria andInvestConfigIdEqualTo(Integer value) {
            addCriterion("invest_config_id =", value, "investConfigId");
            return (Criteria) this;
        }

        public Criteria andInvestConfigIdNotEqualTo(Integer value) {
            addCriterion("invest_config_id <>", value, "investConfigId");
            return (Criteria) this;
        }

        public Criteria andInvestConfigIdGreaterThan(Integer value) {
            addCriterion("invest_config_id >", value, "investConfigId");
            return (Criteria) this;
        }

        public Criteria andInvestConfigIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("invest_config_id >=", value, "investConfigId");
            return (Criteria) this;
        }

        public Criteria andInvestConfigIdLessThan(Integer value) {
            addCriterion("invest_config_id <", value, "investConfigId");
            return (Criteria) this;
        }

        public Criteria andInvestConfigIdLessThanOrEqualTo(Integer value) {
            addCriterion("invest_config_id <=", value, "investConfigId");
            return (Criteria) this;
        }

        public Criteria andInvestConfigIdIn(List<Integer> values) {
            addCriterion("invest_config_id in", values, "investConfigId");
            return (Criteria) this;
        }

        public Criteria andInvestConfigIdNotIn(List<Integer> values) {
            addCriterion("invest_config_id not in", values, "investConfigId");
            return (Criteria) this;
        }

        public Criteria andInvestConfigIdBetween(Integer value1, Integer value2) {
            addCriterion("invest_config_id between", value1, value2, "investConfigId");
            return (Criteria) this;
        }

        public Criteria andInvestConfigIdNotBetween(Integer value1, Integer value2) {
            addCriterion("invest_config_id not between", value1, value2, "investConfigId");
            return (Criteria) this;
        }

        public Criteria andInterestIdIsNull() {
            addCriterion("interest_id is null");
            return (Criteria) this;
        }

        public Criteria andInterestIdIsNotNull() {
            addCriterion("interest_id is not null");
            return (Criteria) this;
        }

        public Criteria andInterestIdEqualTo(Integer value) {
            addCriterion("interest_id =", value, "interestId");
            return (Criteria) this;
        }

        public Criteria andInterestIdNotEqualTo(Integer value) {
            addCriterion("interest_id <>", value, "interestId");
            return (Criteria) this;
        }

        public Criteria andInterestIdGreaterThan(Integer value) {
            addCriterion("interest_id >", value, "interestId");
            return (Criteria) this;
        }

        public Criteria andInterestIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("interest_id >=", value, "interestId");
            return (Criteria) this;
        }

        public Criteria andInterestIdLessThan(Integer value) {
            addCriterion("interest_id <", value, "interestId");
            return (Criteria) this;
        }

        public Criteria andInterestIdLessThanOrEqualTo(Integer value) {
            addCriterion("interest_id <=", value, "interestId");
            return (Criteria) this;
        }

        public Criteria andInterestIdIn(List<Integer> values) {
            addCriterion("interest_id in", values, "interestId");
            return (Criteria) this;
        }

        public Criteria andInterestIdNotIn(List<Integer> values) {
            addCriterion("interest_id not in", values, "interestId");
            return (Criteria) this;
        }

        public Criteria andInterestIdBetween(Integer value1, Integer value2) {
            addCriterion("interest_id between", value1, value2, "interestId");
            return (Criteria) this;
        }

        public Criteria andInterestIdNotBetween(Integer value1, Integer value2) {
            addCriterion("interest_id not between", value1, value2, "interestId");
            return (Criteria) this;
        }

        public Criteria andCapitalAmountIsNull() {
            addCriterion("capital_amount is null");
            return (Criteria) this;
        }

        public Criteria andCapitalAmountIsNotNull() {
            addCriterion("capital_amount is not null");
            return (Criteria) this;
        }

        public Criteria andCapitalAmountEqualTo(Double value) {
            addCriterion("capital_amount =", value, "capitalAmount");
            return (Criteria) this;
        }

        public Criteria andCapitalAmountNotEqualTo(Double value) {
            addCriterion("capital_amount <>", value, "capitalAmount");
            return (Criteria) this;
        }

        public Criteria andCapitalAmountGreaterThan(Double value) {
            addCriterion("capital_amount >", value, "capitalAmount");
            return (Criteria) this;
        }

        public Criteria andCapitalAmountGreaterThanOrEqualTo(Double value) {
            addCriterion("capital_amount >=", value, "capitalAmount");
            return (Criteria) this;
        }

        public Criteria andCapitalAmountLessThan(Double value) {
            addCriterion("capital_amount <", value, "capitalAmount");
            return (Criteria) this;
        }

        public Criteria andCapitalAmountLessThanOrEqualTo(Double value) {
            addCriterion("capital_amount <=", value, "capitalAmount");
            return (Criteria) this;
        }

        public Criteria andCapitalAmountIn(List<Double> values) {
            addCriterion("capital_amount in", values, "capitalAmount");
            return (Criteria) this;
        }

        public Criteria andCapitalAmountNotIn(List<Double> values) {
            addCriterion("capital_amount not in", values, "capitalAmount");
            return (Criteria) this;
        }

        public Criteria andCapitalAmountBetween(Double value1, Double value2) {
            addCriterion("capital_amount between", value1, value2, "capitalAmount");
            return (Criteria) this;
        }

        public Criteria andCapitalAmountNotBetween(Double value1, Double value2) {
            addCriterion("capital_amount not between", value1, value2, "capitalAmount");
            return (Criteria) this;
        }

        public Criteria andAvailableBalanceIsNull() {
            addCriterion("available_balance is null");
            return (Criteria) this;
        }

        public Criteria andAvailableBalanceIsNotNull() {
            addCriterion("available_balance is not null");
            return (Criteria) this;
        }

        public Criteria andAvailableBalanceEqualTo(Double value) {
            addCriterion("available_balance =", value, "availableBalance");
            return (Criteria) this;
        }

        public Criteria andAvailableBalanceNotEqualTo(Double value) {
            addCriterion("available_balance <>", value, "availableBalance");
            return (Criteria) this;
        }

        public Criteria andAvailableBalanceGreaterThan(Double value) {
            addCriterion("available_balance >", value, "availableBalance");
            return (Criteria) this;
        }

        public Criteria andAvailableBalanceGreaterThanOrEqualTo(Double value) {
            addCriterion("available_balance >=", value, "availableBalance");
            return (Criteria) this;
        }

        public Criteria andAvailableBalanceLessThan(Double value) {
            addCriterion("available_balance <", value, "availableBalance");
            return (Criteria) this;
        }

        public Criteria andAvailableBalanceLessThanOrEqualTo(Double value) {
            addCriterion("available_balance <=", value, "availableBalance");
            return (Criteria) this;
        }

        public Criteria andAvailableBalanceIn(List<Double> values) {
            addCriterion("available_balance in", values, "availableBalance");
            return (Criteria) this;
        }

        public Criteria andAvailableBalanceNotIn(List<Double> values) {
            addCriterion("available_balance not in", values, "availableBalance");
            return (Criteria) this;
        }

        public Criteria andAvailableBalanceBetween(Double value1, Double value2) {
            addCriterion("available_balance between", value1, value2, "availableBalance");
            return (Criteria) this;
        }

        public Criteria andAvailableBalanceNotBetween(Double value1, Double value2) {
            addCriterion("available_balance not between", value1, value2, "availableBalance");
            return (Criteria) this;
        }

        public Criteria andFrozenAmountIsNull() {
            addCriterion("frozen_amount is null");
            return (Criteria) this;
        }

        public Criteria andFrozenAmountIsNotNull() {
            addCriterion("frozen_amount is not null");
            return (Criteria) this;
        }

        public Criteria andFrozenAmountEqualTo(Double value) {
            addCriterion("frozen_amount =", value, "frozenAmount");
            return (Criteria) this;
        }

        public Criteria andFrozenAmountNotEqualTo(Double value) {
            addCriterion("frozen_amount <>", value, "frozenAmount");
            return (Criteria) this;
        }

        public Criteria andFrozenAmountGreaterThan(Double value) {
            addCriterion("frozen_amount >", value, "frozenAmount");
            return (Criteria) this;
        }

        public Criteria andFrozenAmountGreaterThanOrEqualTo(Double value) {
            addCriterion("frozen_amount >=", value, "frozenAmount");
            return (Criteria) this;
        }

        public Criteria andFrozenAmountLessThan(Double value) {
            addCriterion("frozen_amount <", value, "frozenAmount");
            return (Criteria) this;
        }

        public Criteria andFrozenAmountLessThanOrEqualTo(Double value) {
            addCriterion("frozen_amount <=", value, "frozenAmount");
            return (Criteria) this;
        }

        public Criteria andFrozenAmountIn(List<Double> values) {
            addCriterion("frozen_amount in", values, "frozenAmount");
            return (Criteria) this;
        }

        public Criteria andFrozenAmountNotIn(List<Double> values) {
            addCriterion("frozen_amount not in", values, "frozenAmount");
            return (Criteria) this;
        }

        public Criteria andFrozenAmountBetween(Double value1, Double value2) {
            addCriterion("frozen_amount between", value1, value2, "frozenAmount");
            return (Criteria) this;
        }

        public Criteria andFrozenAmountNotBetween(Double value1, Double value2) {
            addCriterion("frozen_amount not between", value1, value2, "frozenAmount");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNull() {
            addCriterion("create_time is null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNotNull() {
            addCriterion("create_time is not null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeEqualTo(Date value) {
            addCriterion("create_time =", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotEqualTo(Date value) {
            addCriterion("create_time <>", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThan(Date value) {
            addCriterion("create_time >", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("create_time >=", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThan(Date value) {
            addCriterion("create_time <", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThanOrEqualTo(Date value) {
            addCriterion("create_time <=", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIn(List<Date> values) {
            addCriterion("create_time in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotIn(List<Date> values) {
            addCriterion("create_time not in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeBetween(Date value1, Date value2) {
            addCriterion("create_time between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotBetween(Date value1, Date value2) {
            addCriterion("create_time not between", value1, value2, "createTime");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table user_invest_config_details
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table user_invest_config_details
     *
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}