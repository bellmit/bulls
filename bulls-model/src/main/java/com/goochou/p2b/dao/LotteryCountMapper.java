package com.goochou.p2b.dao;

import com.goochou.p2b.model.LotteryCount;
import com.goochou.p2b.model.LotteryCountExample;
import java.util.List;
import java.util.Map;

import org.apache.ibatis.annotations.Param;

public interface LotteryCountMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lottery_count
     *
     * @mbggenerated Thu Jun 30 14:04:41 CST 2016
     */
    int countByExample(LotteryCountExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lottery_count
     *
     * @mbggenerated Thu Jun 30 14:04:41 CST 2016
     */
    int deleteByExample(LotteryCountExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lottery_count
     *
     * @mbggenerated Thu Jun 30 14:04:41 CST 2016
     */
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lottery_count
     *
     * @mbggenerated Thu Jun 30 14:04:41 CST 2016
     */
    int insert(LotteryCount record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lottery_count
     *
     * @mbggenerated Thu Jun 30 14:04:41 CST 2016
     */
    int insertSelective(LotteryCount record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lottery_count
     *
     * @mbggenerated Thu Jun 30 14:04:41 CST 2016
     */
    List<LotteryCount> selectByExample(LotteryCountExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lottery_count
     *
     * @mbggenerated Thu Jun 30 14:04:41 CST 2016
     */
    LotteryCount selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lottery_count
     *
     * @mbggenerated Thu Jun 30 14:04:41 CST 2016
     */
    int updateByExampleSelective(@Param("record") LotteryCount record, @Param("example") LotteryCountExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lottery_count
     *
     * @mbggenerated Thu Jun 30 14:04:41 CST 2016
     */
    int updateByExample(@Param("record") LotteryCount record, @Param("example") LotteryCountExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lottery_count
     *
     * @mbggenerated Thu Jun 30 14:04:41 CST 2016
     */
    int updateByPrimaryKeySelective(LotteryCount record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lottery_count
     *
     * @mbggenerated Thu Jun 30 14:04:41 CST 2016
     */
    int updateByPrimaryKey(LotteryCount record);

    /**
     * 查询活动抽奖次数记录总数   传id代表查询是否是新用户，如果什么都不传 或者传0 那么就是查所有用户
     * @author 刘源
     * @date 2015年12月3日
     * @return
     */
    public Integer queryCount(Integer userId);

    /**
     * 初始化活动抽奖数据
     * @author 刘源
     * @date 2015年12月3日
     */
    public void initLotteryCount();

    /**
     * 根据时间
     * @author 刘源
     * @date 2015年12月3日
     * @param map
     * @return
     */
    public Integer queryCountByDate(Map<String, Object> map);


    /**
     * 系统更新抽奖次数
     * @author 刘源
     * @date 2015年12月3日
     */
    public void updateLotteryCount();

    /**
     * 根据用户id查询用户的抽奖次数
     * @author 王信
     * @Create Date: 2015年12月3日下午4:25:15
     * @param id
     * @return
     */
    public Map<String,Object> queryUserLottery(Integer userId);

    /**
     * 返回奖品的集合  输入1不显示奖品抽奖概率   输入零  显示中奖概率
     * @author 王信
     * @Create Date: 2015年12月3日下午7:47:09
     * @return
     */
    public List<Map<String,Object>> listLotteryGift(Map<String,Object> map);

    /**
     * 根据ID将用户资金信息和抽奖信息新增到库中
     * @param id
     */
    public void insertFromAssetsById(Integer userId);

    /**
     * 查询lottery_record表中的中奖记录 用户判断用户是否是第一次抽奖
     * @author 王信
     * @Create Date: 2015年12月7日下午2:27:05
     * @param id
     * @return
     */
    public Integer queryRecordCount(@Param("userId") Integer userId,@Param("activityId")Integer activityId);

    /**
     * 此方法用户查询用户是否中了该实物
     * @author 王信
     * @Create Date: 2015年12月10日下午4:19:48
     * @param type  奖品类型
     * @param giftId  奖品id
     * @param userId  用户id
     * @return
     */
    public int onlyKind(Map<String,Object> map);

    /**
     * 查询某一天开始到今日的充值-提前差额   累积投资
     * @author 王信
     * @Create Date: 2015年12月12日下午12:00:26
     * @param startTime
     * @return
     */
    public Map<String, Object> selectRechargeWithdraw(Map<String,Object> map);

    /**
     * 根据userid查询抽奖次数
     * @author 王信
     * @Create Date: 2015年12月14日下午12:24:23
     * @param userId
     * @return
     */
    public LotteryCount queryCountByUserId(Integer userId);

    /**
     * 根据电话号码查询抽奖次数
     * @author 王信
     * @Create Date: 2015年12月14日下午12:25:05
     * @param phone
     * @return
     */
    public LotteryCount queryCountByPhone(String phone);

    /**
     * 查询未注册用户是否第一次中奖
     * @author 王信
     * @Create Date: 2015年12月14日下午3:35:21
     * @param phone
     * @return
     */
    public int queryRecordCountByPhone(String phone);


    /**
     * 后台使用   用来查询单个用户的次数
     * @author 王信
     * @Create Date: 2015年12月24日下午4:40:28
     * @param phone
     * @return
     */
    public Map<String,Object> selectChrismasLotteryCount(String phone);


}