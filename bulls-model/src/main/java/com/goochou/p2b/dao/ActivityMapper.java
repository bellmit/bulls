package com.goochou.p2b.dao;

import com.goochou.p2b.model.Activity;
import com.goochou.p2b.model.ActivityExample;
import org.apache.ibatis.annotations.Param;

import java.util.Date;
import java.util.List;
import java.util.Map;

public interface ActivityMapper {
    /**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table activity
	 * @mbg.generated  Thu May 09 16:51:32 CST 2019
	 */
	long countByExample(ActivityExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table activity
	 * @mbg.generated  Thu May 09 16:51:32 CST 2019
	 */
	int deleteByExample(ActivityExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table activity
	 * @mbg.generated  Thu May 09 16:51:32 CST 2019
	 */
	int deleteByPrimaryKey(Integer id);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table activity
	 * @mbg.generated  Thu May 09 16:51:32 CST 2019
	 */
	int insert(Activity record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table activity
	 * @mbg.generated  Thu May 09 16:51:32 CST 2019
	 */
	int insertSelective(Activity record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table activity
	 * @mbg.generated  Thu May 09 16:51:32 CST 2019
	 */
	List<Activity> selectByExample(ActivityExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table activity
	 * @mbg.generated  Thu May 09 16:51:32 CST 2019
	 */
	Activity selectByPrimaryKey(Integer id);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table activity
	 * @mbg.generated  Thu May 09 16:51:32 CST 2019
	 */
	int updateByExampleSelective(@Param("record") Activity record, @Param("example") ActivityExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table activity
	 * @mbg.generated  Thu May 09 16:51:32 CST 2019
	 */
	int updateByExample(@Param("record") Activity record, @Param("example") ActivityExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table activity
	 * @mbg.generated  Thu May 09 16:51:32 CST 2019
	 */
	int updateByPrimaryKeySelective(Activity record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table activity
	 * @mbg.generated  Thu May 09 16:51:32 CST 2019
	 */
	int updateByPrimaryKey(Activity record);

	List<Map<String, Object>> querys(@Param("start") Integer start, @Param("limit") Integer limit, @Param("status") Integer status);

    List<Activity> query(@Param("start") Integer start, @Param("limit") Integer limit, @Param("status") Integer status, @Param("type") Integer type);

    Long queryCount(@Param("status") Integer status);

    Map<String, Object> detail(Integer id);

    /**
     * 根据活动名称查询活动实体
     *
     * @return
     * @author 王信
     * @Create Date: 20151215日下3:44:38
     */
    public Activity queryByName(String name);

    /**
     * @param keyword
     * @return
     * @Description: 加息封侯10+0.5之战
     * @author 王信
     * @date 201615 上午11:32:06
     */
    public List<Map<String, Object>> rateBreakList(@Param("keyword") String keyword, @Param("start") Integer start, @Param("limit") Integer limit);

    /**
     * @param keyword
     * @return
     * @Description: 加息封侯 10+0.5之战
     * @author 王信
     * @date 201615 上午11:32:06
     */
    public Integer rateBreakListCount(@Param("keyword") String keyword);

    /**
     * @Description(描述):定期加息活动列表
     * @author 王信
     * @date 2016/4/18
     * @params
     **/
    public List<Map<String, Object>> selectRegularActivityList(@Param("userId") Integer userId);

    /**
     * 查询活动ID和对应title
     *
     * @author 刘源
     * @date 2016/4/21
     */
    List<Activity> selectAll();

    /**
     * 获取活动对应奖品的所有子
     *
     * @param
     * @author 刘源
     * @date 2016/4/21
     */
    List<Activity> getActivityGiftItems(Integer activityId);

    /**
     * @Description(描述):冰霜八月排行
     * @author 王信
     * @date 2016/7/29
     * @params
     **/
    List<Map<String, Object>> selectInvestmentActivity(Map<String, Object> map);

    /**
     * @Description(描述):尊贵之约，如7”�至！投资即送iPhone7
     * @author 王信
     * @date 2016/8/12
     * @params
     **/
    Double selectAppleActivity(Map<String, Object> map);

    Double selectAppleActivity2(Map<String, Object> map);

    /**
     * @Description(描述):九月苹果活动 后台统计
     * @author 王信
     * @date 2016/9/1
     * @params
     **/
    List<Map<String, Object>> selectAppleActivityUserList(Map<String, Object> map);

    Integer selectAppleActivityUserCount(Map<String, Object> map);

    /**
     * @Description(描述):周末京东卡活
     * @author zxx
     * @date 2016/9/9
     * @params
     **/
    List<Map<String, Object>> selectWeekInvestmentActivity(Map<String, Object> map);

    List<Map<String, Object>> selectWeekInvestmentAward(Map<String, Object> map);

    Integer countWeekInvestmentAward(Map<String, Object> map);


    List<Map<String, Object>> selectWeekInvestmentActivityByUserId(Map<String, Object> map);

    /**
     * @Description(描述):3125活动
     * @author zxx
     * @date 2016/9/10
     * @params
     **/
    List<Map<String, Object>> selectHongbaoInvestmentAward(Map<String, Object> map);

    Integer countHongbaoInvestmentAward(Map<String, Object> map);


    List<Map<String, Object>> selectJingdongInvestmentAward(Map<String, Object> map);

    Integer countJingdongInvestmentAward(Map<String, Object> map);


    /**
     * @Description(描述):项目活动ID
     * @author 王信
     * @date 2016/9/21
     * @params
     **/
    List<Map<String, Object>> selectProjectTerminator(Map<String, Object> map);


    /**
     * @Description(描述):抢标活动的后台显示列
     * @author 王信
     * @date 2016/9/21
     * @params
     **/
    List<Map<String, Object>> projectAwardList(Map<String, Object> map);

    Integer projectAwardListCount(Map<String, Object> map);

    /**
     * @Description(描述):十月黄金周活
     * @author 王信
     * @date 2016/9/22
     * @params
     **/
    List<Map<String, Object>> selectInvestmentAwardActivity(Map<String, Object> map);

    List<Map<String, Object>> selectInvestmentActivityFilter(Map<String, Object> map);

    /**
     * @Description(描述):根据活动名称和奖品ID 查询是否有这个奖
     * @author 王信
     * @date 2016/9/22
     * @params
     **/
    Integer queryActivityByGift(Map<String, Object> map);

    /**
     * @Description(描述):国庆黄金活动后台统计查询
     * @author 王信
     * @date 2016/9/26
     * @params
     **/
    List<Map<String, Object>> selectNationalGoldList(Map<String, Object> map);

    Integer selectNationalGoldCount(Map<String, Object> map);

    /**
     * 查询201761号到630号的定期和安鑫赚投资用户的年化额
     *
     * @param map
     * @return
     */
    List<Map<String, Object>> select666ActivityList(Map<String, Object> map);

    Integer select666ActivityCount(Map<String, Object> map);


    /**
     * @Description(描述):万圣节活动统计查
     * @author 赵星
     * @date 2016/10/25
     * @params
     **/
    List<Map<String, Object>> selecthalloweenActivity(Map<String, Object> map);


    /**
     * @Description: 双重壕礼, 后台统计功能
     * @date 2016/10/21
     * @author 王信
     */
    List<Map<String, Object>> selectGetDoubleGiftList(Map<String, Object> map);

    Integer selectGetDoubleGiftCount(Map<String, Object> map);

    /**
     * @Description: 活动期间总投资人, 和�投资金
     * @date 2016/10/21
     * @author 王信
     */
    Map<String, Object> selectGetDoubleGiftMap(Map<String, Object> map);


    /**
     * @Description(描述):双十活动统计查询
     * @author 赵星
     * @date 2016/10/27
     * @params
     **/
    List<Map<String, Object>> selectSinglesDayActivity(Map<String, Object> map);

    /**
     * @Description(描述):双十活动统计查询
     * @author 赵星
     * @date 2016/10/27
     * @params
     **/
    List<Map<String, Object>> beforeSinglesDayActivity(Map<String, Object> map);

    /**
     * @Description(描述):双十后台统计查询
     * @author 赵星
     * @date 2016/10/27
     * @params
     **/
    List<Map<String, Object>> listSelectSinglesDay(Map<String, Object> map);

    Integer countSelectSinglesDay(Map<String, Object> map);

    /**
     * @Description(描述):感恩节后台统计查
     * @author 赵星
     * @date 2016/11/16
     * @params
     **/
    List<Map<String, Object>> thanksgivingDay(Map<String, Object> map);


    /**
     * @Description: 2017情人节活
     * @date 2017/1/16
     * @author 王信
     */
    List<Map<String, Object>> selectValentinesDayActivity(Map<String, Object> map);

    /**
     * @Description: 查询活动时间内的投资总额
     * @date 2017/1/16
     * @author 王信
     */
    Double selectActivityTimeInvestmentAmount(Map<String, Object> map);

    /**
     * @Description: 后台统计, 20170214  情人节活动投资金额情.
     * @date 2017/1/18
     * @author 王信
     */
    Map<String, Object> selectInvestmentTotal(Map<String, Object> map);

    /**
     * @Description: 20170214情人节活动统
     * @date 2017/1/19
     * @author 王信
     */
    List<Map<String, Object>> selectValentinesDayActivityList(Map<String, Object> map);

    Integer selectValentinesDayActivityCount(Map<String, Object> map);

    List<Map<String, Object>> selectInvest(Map<String, Object> map);

    List<Map<String, Object>> selectExpMobey(Map<String, Object> map);

    List<Map<String, Object>> selectHongbao(Map<String, Object> map);

    /**
     * @Description(描述):查询活动期间统计
     * @author 赵星
     * @date 201/03/28
     * @params
     **/
    List<Map<String, Object>> selectActivityInvestment(Map<String, Object> map);


    List<Map<String, Object>> newAnniversary(Map<String, Object> map);

    Integer newAnniversaryCount(Map<String, Object> map);

    List<Map<String, Object>> twoYearsThanksActivity(Map<String, Object> map);

    Integer twoYearsThanksActivityCount(Map<String, Object> map);

    Map<String, Object> selectActivityIncome(Map<String, Object> map);

    /**
     * 年化投资额排
     *
     * @param map
     * @return
     */
    List<Map<String, Object>> selectYearInvestmentRank(Map<String, Object> map);


    /**
     * 请好友注册人数排
     *
     * @param map
     * @return
     */
    List<Map<String, Object>> selectInviteRank(Map<String, Object> map);

    /**
     * 活动期投资额
     *
     * @param userId
     * @param startTime
     * @param endTime
     * @param limitDays
     * @return
     */
    Map<String, Object> selectInvestmentAmount(@Param("userId") Integer userId, @Param("startTime") Date startTime, @Param("endTime") Date endTime, @Param("limitDays") Integer limitDays);

    /**
     * 活动期投资额
     *
     * @param userId
     * @param startTime
     * @param endTime
     * @param limitDays
     * @return
     */
    Map<String, Object> selectInvestmentAmount2(@Param("userId") Integer userId, @Param("startTime") Date startTime, @Param("endTime") Date endTime, @Param("limitDays") Integer limitDays);


    /***
     *  20171108活动列表
     * @param map
     * @return
     */
    List<Map<String, Object>> selectNoverberActivityList(Map<String, Object> map);

    /**
     * 查询领奖记录
     *
     * @param userId
     * @param activityId
     * @return
     */
    Map<String, Object> selectUserLottery(@Param("userId") Integer userId, @Param("activityId") Integer activityId, @Param("startTime")Date startTime,  @Param("endTime")Date endTime);

    Integer selectNoverberActivityCount(Map<String, Object> map);

    /**
     * 根据条件查询用户2017-01-012017-12-31的投资金
     *
     * @param userId 查询条件
     * @return map
     */
    Map<String, Object> getAvgAmount(@Param("userId") Integer userId);

    /**
     * 活动名称找活动id
     *
     * @param nameList 活动名称集合
     * @return list
     */
    List<Activity> findActivityId(@Param("nameList") List nameList);

    List<Map<String, Object>> selectAdminActivityListNew(Map<String, Object> map);
}