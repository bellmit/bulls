package com.goochou.p2b.dao;

import com.goochou.p2b.model.Interest;
import com.goochou.p2b.model.InterestExample;

import java.util.Date;
import java.util.List;
import java.util.Map;

import com.goochou.p2b.model.vo.InterestVO;
import org.apache.ibatis.annotations.Param;

public interface InterestMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table interest
     *
     * @mbggenerated Fri May 17 10:54:09 CST 2019
     */
    int countByExample(InterestExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table interest
     *
     * @mbggenerated Fri May 17 10:54:09 CST 2019
     */
    int deleteByExample(InterestExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table interest
     *
     * @mbggenerated Fri May 17 10:54:09 CST 2019
     */
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table interest
     *
     * @mbggenerated Fri May 17 10:54:09 CST 2019
     */
    int insert(Interest record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table interest
     *
     * @mbggenerated Fri May 17 10:54:09 CST 2019
     */
    int insertSelective(Interest record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table interest
     *
     * @mbggenerated Fri May 17 10:54:09 CST 2019
     */
    List<Interest> selectByExample(InterestExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table interest
     *
     * @mbggenerated Fri May 17 10:54:09 CST 2019
     */
    Interest selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table interest
     *
     * @mbggenerated Fri May 17 10:54:09 CST 2019
     */
    int updateByExampleSelective(@Param("record") Interest record, @Param("example") InterestExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table interest
     *
     * @mbggenerated Fri May 17 10:54:09 CST 2019
     */
    int updateByExample(@Param("record") Interest record, @Param("example") InterestExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table interest
     *
     * @mbggenerated Fri May 17 10:54:09 CST 2019
     */
    int updateByPrimaryKeySelective(Interest record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table interest
     *
     * @mbggenerated Fri May 17 10:54:09 CST 2019
     */
    int updateByPrimaryKey(Interest record);

    // 根据用户id获取规定派息详情
    List<Map<String, Object>> findByUserId(Map<String, Object> map);

    /**
     * 查询返本信息
     *
     * @param map
     * @return
     */
    List<Map<String, Object>> findCapitalByUserId(Map<String, Object> map);

    List<Map<String, Double>> statisticsByYear(int userId);

    List<Map<String, Object>> statisticsByMonth(int userId);

    Interest lastDividendOfInvestment(Integer investmentId);

    Interest lastCastOfInvestment(Integer investmentDetailId);

    void updateByCurrent(Map<String, Object> map);

    int deleteByAfter(Map<String, Object> map);

    int deleteByAfterWithDetailId(Map<String, Object> map);

    int addInterestBatch(List<Interest> list);

    List<Interest> getUndividendedByDate(Map<String, Object> map);

    Double getUncollectInterestAmountByUserId(Integer userId);

    /**
     * 根据用户ID查询已经获取的利息
     *
     * @param userId
     */
    public Double getInterestedAmountByUserId(Integer userId);

    /**
     * 获取每个用户的活期投资需要派息的总金额
     *
     * @return
     */
    public List<Map<String, Object>> getDynamicInterestAmount();

    List<Map<String, Object>> query(@Param("keyword") String keyword, @Param("startTime") Date startTime, @Param("endTime") Date endTime, @Param("start") Integer start, @Param("end") Integer end);

    Long queryCount(@Param("keyword") String keyword, @Param("startTime") Date startTime, @Param("endTime") Date endTime);

    Map<String, Object> queryTotalAmount(@Param("keyword") String keyword, @Param("startTime") Date startTime, @Param("endTime") Date endTime);

    /**
     * 某时间段内，连续只提取利息的用户信息详情，即单独提取利息 刘源 2015-11-6
     *
     * @param timeSlot
     * @return
     */
    public List<Map<String, Object>> queryDailyExtractInterest(int timeSlot);

    /**
     * 查询最近7天利息记录
     *
     * @return
     */
    public List<Interest> get7Day(Integer userId);

    /**
     * 查询最新回款记录
     *
     * @return
     * @author 刘源
     * @date 2016年2月17日
     * @parameter
     */
    public Interest queryLatestPaymentInfo(Map<String, Object> map);

    /**
     * @Description(描述):用户收益详情 包括定期和活期
     * @author 王信
     * @date 2016/4/26
     * @params
     **/
    public List<Interest> detailByUser(Map<String, Object> map);

    public Integer detailCount(@Param("userId") Integer userId, @Param("startTime") Date startTime, @Param("endTime") Date endTime);


    /**
     * @Description(描述):定期派息定时器查询需要发送短信的用户
     * @author 王信
     * @date 2016/5/16
     * @params
     **/
    public List<Map<String, Object>> getUndividendedByDateMessage();

    public Integer getCountByTime(@Param("userId") Integer userId, @Param("startTime") Date startTime, @Param("endTime") Date endTime);


    /**
     * @Description(描述):回款列表 用户回款查看列表
     * @author 王信
     * @date 2016/9/2
     * @params
     **/
    List<Map<String, Object>> selectUserPaymentList(Map<String, Object> map);

    Integer selectUserPaymentCount(Map<String, Object> map);

    List<Map<String, Object>> selectUserPaymentSum(Map<String, Object> map);


    /**
     * @Description: 项目满标之后查询所有利息标并插入记录
     * @date 2016/12/1
     * @author 王信
     */
    List<Interest> selectRegularInterestList(Map<String, Object> map);

    public Double getInterestedAmountByMonth(Map<String, Object> map);

    /**
     * @Description: 查询首次活期项目收益
     * @date 2017/1/13
     * @author 王信
     */
    List<Interest> selectFirstHuoInterestList(Map<String, Object> map);

    List<Interest> selectRegularInterestListTwo(Map<String, Object> map);

    /**
     * 周期标债转退出时计算截止到今日被购买时间的所有利息总额
     */
    public List<Interest> getOutDaysInterest(Integer investmentId);

    public Interest getTodayInterest(Integer investmentId);


    /**
     * 查询所有投资完成并且今天有还款计划的周期标所关联的投资产生的利息需要计算利息的list
     */
    List<Map<String, Object>> getTodayPayPackageProjectInterestList();

    /**
     * 查询所有投资完成并且今天有还款计划的周期标所关联的投资产生的利息需要计算本金的list
     */
    Map<String, Object> getTodayPayPackageProjectInterestListDetail(Map<String, Object> map);

    Date getMaxCastDateByInvestmentDetailId(Integer investmentId);

    List<Interest> getCompoundFailedList();

    List<Interest> queryInterestInfoByInvestemntInfo(Integer investmentId);

    int insertBatch(List<Interest> list);

    void updateInterestList(Map<String, Object> params);

    double getInterestAmount(Integer investmentId);
    Double queryInvestmentHasdividAmount(Integer investmentId);
    Interest nextInterest(Integer investmentId);

    double getInterestamountTotal();

    List<Interest> selectMonthlyGainInterestList(Map<String, Object> map);

    /**
     * 获取最后一次派息(月月盈)
     * @param params
     * @return
     */
    Interest lastDividendForMonthlyGain(Map<String, Object> params);

    /**
     * 删除派息记录(月月盈)
     * @param params
     * @return
     */
    int deleteByAfterForMonthlyGain(Map<String, Object> params);

    /**
     * 月月盈底层资产派息列表查询
     * @param searchMap
     * @return
     */
    List<Interest> getMonthlyGainWaitInterest(Map<String, Object> searchMap);

    /**
     *
     * <p>获取未派息的总本金</p>
     * @param userId
     * @return
     * @author: lxfeng
     * @date: Created on 2018-7-26 下午6:37:19
     */
    Double getNoDividendPayout(Integer userId);
    /**
     * 智投报表列表
     * @param searchMap
     * @return
     */
    List<Map<String,Object>> queryInvestIntellectualList(Map<String, Object> searchMap);

    List<Interest> getCapitalUndividendedByDate(Map<String, Object> map);

    Double getTotalCapital(Map<String, Object> paramMap);

    int queryInvestIntellectualListCount(Map<String, Object> searchMap);
    /**
     * 智投报表投资金额
     * @param map
     * @return
     */
    Double queryInvestIntellectualListCountTotalAmount(Map<String, Object> map);

    List<Interest> queryIterestBackAmount(String date);
    
    List<Map<String, Object>> getInterestListByInvestId(@Param("investId")Integer investId, @Param("userId")Integer userId);

    List<InterestVO> queryInterestList(Map<String, Object> map);

    int queryInterestCount(Map<String, Object> map);
}
