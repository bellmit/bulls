package com.goochou.p2b.dao;

import com.goochou.p2b.model.LotteryRecord;
import com.goochou.p2b.model.LotteryRecordExample;
import org.apache.ibatis.annotations.Param;

import java.util.List;
import java.util.Map;

public interface LotteryRecordMapper {
    /**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table lottery_record
	 * @mbg.generated  Thu May 09 17:06:38 CST 2019
	 */
	long countByExample(LotteryRecordExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table lottery_record
	 * @mbg.generated  Thu May 09 17:06:38 CST 2019
	 */
	int deleteByExample(LotteryRecordExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table lottery_record
	 * @mbg.generated  Thu May 09 17:06:38 CST 2019
	 */
	int deleteByPrimaryKey(Integer id);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table lottery_record
	 * @mbg.generated  Thu May 09 17:06:38 CST 2019
	 */
	int insert(LotteryRecord record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table lottery_record
	 * @mbg.generated  Thu May 09 17:06:38 CST 2019
	 */
	int insertSelective(LotteryRecord record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table lottery_record
	 * @mbg.generated  Thu May 09 17:06:38 CST 2019
	 */
	List<LotteryRecord> selectByExample(LotteryRecordExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table lottery_record
	 * @mbg.generated  Thu May 09 17:06:38 CST 2019
	 */
	LotteryRecord selectByPrimaryKey(Integer id);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table lottery_record
	 * @mbg.generated  Thu May 09 17:06:38 CST 2019
	 */
	int updateByExampleSelective(@Param("record") LotteryRecord record, @Param("example") LotteryRecordExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table lottery_record
	 * @mbg.generated  Thu May 09 17:06:38 CST 2019
	 */
	int updateByExample(@Param("record") LotteryRecord record, @Param("example") LotteryRecordExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table lottery_record
	 * @mbg.generated  Thu May 09 17:06:38 CST 2019
	 */
	int updateByPrimaryKeySelective(LotteryRecord record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table lottery_record
	 * @mbg.generated  Thu May 09 17:06:38 CST 2019
	 */
	int updateByPrimaryKey(LotteryRecord record);

	/**
     * 查询奖品详情
     *
     * @return
     * @author
     * @date 2015127
     * @parameter
     */
    public Map<String, Object> queryDetailByPrimaryKey(Map<String, Object> map);

    /**
     * 查询用户的获奖列
     *
     * @param userId
     * @return
     * @author
     * @date 2015127
     * @parameter
     */
    public List<Map<String, Object>> queryListByUserId(Integer userId);

    /**
     * 查询有获奖记
     *
     * @param map
     * @return
     * @author
     * @date 2015127
     * @parameter
     */
    public List<Map<String, Object>> queryAll(Map<String, Object> map);

    /**
     * 查询奖品总数
     *
     * @param map
     * @return
     * @author
     * @date 2015127
     * @parameter
     */
    public Integer queryCount(Map<String, Object> map);

    /**
     * 查询新的二十条数据修改成字符串给前台
     *
     * @return
     * @author 王信
     * @Create Date: 20151211日下1:42:38
     */
    public List<Map<String, Object>> selectString(Map<String, Object> map);

    /**
     * 根据手机号码查询近一次未注册用户的中奖信
     *
     * @param phone
     * @return
     * @author 王信
     * @Create Date: 20151214日下3:11:36
     */
    public Map<String, Object> selectLotteryRecordByPhone(String phone);

    /**
     * 导出详情
     *
     * @param map
     * @return
     * @author 刘源
     * @date 20151223
     * @parameter
     */
    public List<Map<String, Object>> queryExportDetails(Map<String, Object> map);

    /**
     * 查询领奖记录
     *
     * @param map
     * @author 刘源
     * @date 2016/5/6
     */
    Boolean queryAwardRecord(Map<String, Object> map);

    /**
     * 查新用户指定参数下领奖记
     *
     * @param params
     * @author 刘源
     * @date 2016/6/27
     */
    List<Map<String, Object>> queryAllAwardRecord(Map<String, Object> params);

    int saveOrselectActivityLotteryCount(@Param("activityId") Integer activityId, @Param("userId") Integer userId);

    /**
     * 获取已领取的奖品
     *
     * @param userId
     * @param activityId
     * @return
     */
    List<Map<String, Object>> queryLotteryRecord(@Param("userId") Integer userId, @Param("activityId") Integer activityId);

    /**
     * 查找跨年抽奖记录条数
     * @param userId 用户id
     * @param activityIdList 活动id集合
     * @return int
     */
    int findCountByUserIdAndActivityId(@Param("userId") Integer userId, @Param("activityIdList") List<Integer> activityIdList);

    /**
     * 跨年活动抽奖记录查询30
     * @return list
     */
    List<Map<String, Object>> findThirtyRecord(@Param("activityIdList") List<Integer> activityIdList);

    /**
     * 根据用户id查找跨年活动中奖纪录
     * @param userId 用户id
     * @return list
     */
    List<Map<String, Object>> findHappyRecord(@Param("userId") Integer userId,@Param("activityIdList") List<Integer> activityIdList);

    List<Map<String, Object>> findRedRainRecord(@Param("userId") Integer userId,@Param("activityId") Integer activityId);

}