package com.goochou.p2b.dao;

import java.util.Date;
import java.util.List;
import java.util.Map;

import com.goochou.p2b.model.vo.*;
import org.apache.ibatis.annotations.Param;

import com.goochou.p2b.model.Investment;
import com.goochou.p2b.model.InvestmentExample;
import com.goochou.p2b.model.vo.AnXinZhuanOfflineDataVO;
import com.goochou.p2b.model.vo.InvestmentDetailsVO;
import com.goochou.p2b.model.vo.InvestmentOrderListVO;
import com.goochou.p2b.model.vo.InvestmentOrderVO;
import com.goochou.p2b.model.vo.InvestmentSearchCondition;

public interface InvestmentMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table investment
     *
     * @mbggenerated Fri May 17 11:49:37 CST 2019
     */
    int countByExample(InvestmentExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table investment
     *
     * @mbggenerated Fri May 17 11:49:37 CST 2019
     */
    int deleteByExample(InvestmentExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table investment
     *
     * @mbggenerated Fri May 17 11:49:37 CST 2019
     */
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table investment
     *
     * @mbggenerated Fri May 17 11:49:37 CST 2019
     */
    int insert(Investment record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table investment
     *
     * @mbggenerated Fri May 17 11:49:37 CST 2019
     */
    int insertSelective(Investment record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table investment
     *
     * @mbggenerated Fri May 17 11:49:37 CST 2019
     */
    List<Investment> selectByExample(InvestmentExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table investment
     *
     * @mbggenerated Fri May 17 11:49:37 CST 2019
     */
    Investment selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table investment
     *
     * @mbggenerated Fri May 17 11:49:37 CST 2019
     */
    int updateByExampleSelective(@Param("record") Investment record, @Param("example") InvestmentExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table investment
     *
     * @mbggenerated Fri May 17 11:49:37 CST 2019
     */
    int updateByExample(@Param("record") Investment record, @Param("example") InvestmentExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table investment
     *
     * @mbggenerated Fri May 17 11:49:37 CST 2019
     */
    int updateByPrimaryKeySelective(Investment record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table investment
     *
     * @mbggenerated Fri May 17 11:49:37 CST 2019
     */
    int updateByPrimaryKey(Investment record);

    Investment getInvestmentByOrderNo(String orderNo);

	Integer updateBatchInvestmentInfoForAnXinZhuan(Map<String, Object> params);

	Investment selectWithPtAndPo(Integer id);

	List<Map<String, Object>> query(InvestmentSearchCondition searchCondition);

	Map<String, Object> queryCount(InvestmentSearchCondition searchCondition);

	Double getAmountCount(@Param("userId") Integer userId);

	Integer querySum(InvestmentSearchCondition searchCondition);

	List<Map<String, Object>> getTotalInterestOfBond(Map<String, Object> map);

	List<Map<String, Object>> getTotalInterestOfProject(Map<String, Object> map);

	List<Map<String, Object>> getTotalInvestOfBond(Map<String, Object> map);

	List<Map<String, Object>> getTotalInvestOfProject(Map<String, Object> map);

	List<Map<String, Object>> getInterestGroupByMonth(Map<String, Object> map);

	List<Map<String, Object>> investAmountOfMonth(Map<String, Object> map);

	Map<String, Object> getProjectByUserIdAndStatus(Map<String, Object> map);

	Integer findByUserIdCount(Map<String, Object> map);

	Map<String, Object> investmentOfProjectDetal(Integer investmentId);

	Map<String, Object> investmentOfBondDetail(Integer investmentId);

	List<Map<String, Object>> findByUserId(Map<String, Object> map);

	int updateByPrimaryKeySelectiveAndVersion(Investment investment);

	Investment getInvestMostUserInActivity(Map<String, Object> map);

	Double getMaxInvestAmount(Integer projectId);

	int checkIfFirstInvest(Map<String, Object> param);

	int checkIfFirstInvestMonthlyGain(Map<String, Object> param);

	List<Map<String, Object>> getInvestAmountByMonthDay(@Param("adminId")Integer adminId, @Param("departmentId")Integer departmentId);

	Investment getInvestMostUser(Integer projectId);

	Map<Object, Object> getPaybackTotal(Map<Object, Object> map);

	List<Map<Object, Object>> getPaybackList(Map<Object, Object> map);

	List<Map<String, Object>> queryRegularInvestmentOnActivityDay(Map<String, Object> map);

	List<Map<String, Object>> queryInvestmentRankOnActivity(Map<String, Object> map);

	Map<String, Object> queryLatestPaymentInfo(Integer useId);

	Integer isFlagUserInvestment(Map<String, Object> map);

	List<Investment> queryFirstInvestmentAndHongbao(Map<String, Object> map);

	List<Map<String, Object>> queryInvestmentActivity();

	Map<String, Object> selectInvestmentCountAndAmount(Integer userId);

	Integer queryCounts(InvestmentSearchCondition searchCondition);

	Double selectActivityYearAmount(Map<String, Object> map);

	List<Map<String, Object>> selectAppleInvestmentUser(Map<String, Object> map);

	Map<String, Object> selectHuoProjectInvestment(Integer investID, Integer userId);

	Double selectActivityAndTime(Map<String, Object> map);

	List<Map<String, Object>> findFirstInvestment(Map<String, Object> map);

	Double findSumInvestment(Map<String, Object> map);

	List<Map<String, Object>> selectCurrentAgreement(Integer investmentId);

	List<Map<String, Object>> queryFirstInvestmentAndType(Map<String, Object> map);

	List<Map<String, Object>> isFirstInActivity(Map<String, Object> map);

	List<Map<String, Object>> getYestodayDetail2(Map<String, Object> map);

	List<Map<String, Object>> getYestodayDetail(Map<String, Object> map);

	List<Map<String, Object>> getYestodayDetail3(Map<String, Object> map);

	List<Map<String, Object>> getYestodayDetail4(Map<String, Object> map);

	List<Map<String, Object>> getYestodayDetail5(Map<String, Object> map);

	List<Map<String, Object>> getYestodayDetail6(Map<String, Object> map);

	List<Map<String, Object>> queryByProjectId(Map<String, Object> map);

	Double getNeedInterestPackageInvestAmount(Map<String, Object> map);

	List<Investment> getNeedInterestPackageInvest();

	List<Map<String, Object>> queryNew(Map<String, Object> map);

	Integer queryCountNew(Map<String, Object> map);

	List<Map<String, Object>> queryNewDetail(Map<String, Object> map);

	Integer queryCountNewDetail(Map<String, Object> map);

	List<Map<String, Object>> getNeedInterest(Map<String, Object> map);

	Integer assestListCount(Map<String, Object> map);

	Double getTotaalAmount(Map<String, Object> map);

	List<Map<String, Object>> getTotalInvestOfBondList(Map<String, Object> map);

	List<Map<String, Object>> getTotalInvestOfProjectList(Map<String, Object> map);

	List<Map<String, Object>> getActivityAddInterest(Map<String, Object> map);

	List<Map<String, Object>> assestList(Map<String, Object> map);

	List<AnXinZhuanOfflineDataVO> queryAnXinZhuanOfflineData(Map<String, Object> map);

	List<Map<String, Object>> getActivityAddInterestOctober(Map<String, Object> map);

	List<Map<String, Object>> getHorseList();

	List<Map<String, Object>> getInvestmentHorseList(Map<String, Object> map);

	int findByCheckCastCount(Map<String, Object> searchMap);

	List<Map<String, Object>> getMonthlyGainInvestmentProjectComprise(Map<String, Object> searchMap);

	int getMonthlyGainInvestmentProjectCompriseCount(Map<String, Object> searchMap);

	Map<String, Object> getMonthlyGainQuitAmountMap(Integer investmentId);

	List<Map<String, Object>> queryEyeOrders(Map<String, String> params);

	List<Map<String, Object>> queryUserInvestmentList(Map<String, Object> paramMap);

	Integer queryUserInvestmentListCount(Map<String, Object> paramMap);

	Map<String, Object> queryUserInvestmentListCountMap(Map<String, Object> paramMap);

	List<String> selectCodeUser();

	List<Map<String, Object>> queryCustomerList();

	Integer unsuccessfulMatch();

	Map<String, Object> investmentTotalAndCount();

	Map<String, Object> querySumRegularInvestmentOnActivityDay(Map<String, Object> map);

	Map<String, Object> queryUserRankOnActivity(Map<String, Object> params);

	Map<String, Object> queryUserSumInvestment(Map<String, Object> map);

	List<Map<String, Object>> selectByuserIdAndProductStatusList(Map<String, Object> map);

	Integer selectByuserIdAndProductStatusCount(Map<String, Object> map);

	Map<String, Object> selectInvestmentIdByProductDetail(Map<String, Object> map);

	Double selectTrueAmount(Integer id);

	/**
	 * selectByPrimaryKey 的 for update 版
	 * @param id
	 * @return
	 */
	Investment selectByPrimaryKeyForUpdate(Integer id);

	/**
	 * 订单列表
	 * @param map
	 * @return
	 */
	List<InvestmentOrderVO> selectBullsOrderList(Map<String, Object> map);

	int selectBullsOrderCount(Map<String, Object> map);

	/**
	 * @description 派息记录（牛只订单详情）
	 * @author shuys
	 * @date 2019/5/29
	 * @param id
	 * @return com.goochou.p2b.model.vo.InvestmentOrderVO
	*/
	InvestmentOrderVO queryOrderDetail(Integer id);

	/**
	 * 传入到期日,查询到期日已到期的投资列表
	 *  Created on 2019-05-20
	 * <p>Title:[查询到期投资]</p>
	 * @author:[张琼麒]
	 * @update:[日期2019-05-20] [张琼麒]
	 * @param investment
	 * @throws Exception
	 */
	List<Investment> getDueInvestmentCouldBuyBack(Date dueTime);

	/**
	 * 传入到期日,查询到期日已到期的拼牛投资列表
	 *  Created on 2019-05-20
	 * <p>Title:[查询到期投资]</p>
	 * @author:[张琼麒]
	 * @update:[日期2019-05-20] [张琼麒]
	 * @param investment
	 * @throws Exception
	 */
	List<Investment> getDueInvestmentCouldBuyBackPin(Date dueTime);
	
	/**
	 * 查询今天到期的投资订单
	 *  Created on 2019-06-19
	 * <p>Title:[查询到期投资]</p>
	 * @author:[张琼麒]
	 * @update:[日期2019-06-19] [张琼麒]
	 * @param investment
	 * @throws Exception
	 */
	List<Investment> getInvestmentDueInToday();
	
	/**
	 * @date 2019年5月20日
	 * @author wangyun
	 * @time 下午5:53:55
	 * @Description 牛只订单列表
	 *
	 * @param map
	 * @return
	 */
	List<InvestmentOrderListVO> queryInvestPayList(Map<String, Object> map);

	int queryInvestPayCount(Map<String, Object> map);

	/**
	 * @date 2019年5月21日
	 * @author wangyun
	 * @time 下午1:50:53
	 * @Description 牛只订单详细列表
	 *
	 * @param id
	 * @return
	 */
	InvestmentDetailsVO queryInvestDetailById(Integer id);

	/**
	 * 预支回报账单列表
	 * @author sxy
	 * @param map
	 * @return
	 */
	List<Map<String, Object>> listPrepaidBill(Map<String, Object> map);

	/**
	 * 预支回报账单数量
	 * @author sxy
	 * @param map
	 * @return
	 */
	Integer countPrepaidBill(Map<String, Object> map);

    /**
     * 根据ID获取项目和订单
     * @author ydp
     * @param investId
     * @return
     */
    Map<String, Object> getProjectOrderInfo(Integer investId);

    /**
     * @return
     */
    Double getAmountAll(@Param("adminId")Integer adminId,@Param("departmentId")Integer departmentId);

    Double getInvestmentAmountCount(@Param("userId") Integer userId);
}
