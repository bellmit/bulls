package com.goochou.p2b.dao;

import java.util.List;
import java.util.Map;

import org.apache.ibatis.annotations.Param;

import com.goochou.p2b.model.Assess;
import com.goochou.p2b.model.AssessExample;

public interface AssessMapper {
	/**
	 * This method was generated by MyBatis Generator. This method corresponds to
	 * the database table t_assess
	 *
	 * @mbg.generated Mon Jun 03 15:09:44 CST 2019
	 */
	long countByExample(AssessExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to
	 * the database table t_assess
	 *
	 * @mbg.generated Mon Jun 03 15:09:44 CST 2019
	 */
	int deleteByExample(AssessExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to
	 * the database table t_assess
	 *
	 * @mbg.generated Mon Jun 03 15:09:44 CST 2019
	 */
	int deleteByPrimaryKey(Integer id);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to
	 * the database table t_assess
	 *
	 * @mbg.generated Mon Jun 03 15:09:44 CST 2019
	 */
	int insert(Assess record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to
	 * the database table t_assess
	 *
	 * @mbg.generated Mon Jun 03 15:09:44 CST 2019
	 */
	int insertSelective(Assess record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to
	 * the database table t_assess
	 *
	 * @mbg.generated Mon Jun 03 15:09:44 CST 2019
	 */
	List<Assess> selectByExample(AssessExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to
	 * the database table t_assess
	 *
	 * @mbg.generated Mon Jun 03 15:09:44 CST 2019
	 */
	Assess selectByPrimaryKey(Integer id);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to
	 * the database table t_assess
	 *
	 * @mbg.generated Mon Jun 03 15:09:44 CST 2019
	 */
	int updateByExampleSelective(@Param("record") Assess record, @Param("example") AssessExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to
	 * the database table t_assess
	 *
	 * @mbg.generated Mon Jun 03 15:09:44 CST 2019
	 */
	int updateByExample(@Param("record") Assess record, @Param("example") AssessExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to
	 * the database table t_assess
	 *
	 * @mbg.generated Mon Jun 03 15:09:44 CST 2019
	 */
	int updateByPrimaryKeySelective(Assess record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to
	 * the database table t_assess
	 *
	 * @mbg.generated Mon Jun 03 15:09:44 CST 2019
	 */
	int updateByPrimaryKey(Assess record);

	// =-=============================================================

	List<Map<String, Object>> listAssessByPage(@Param("limitStart") Integer limitStart,
			@Param("limitEnd") Integer limitEnd, @Param("keyword") String keyword,
			@Param("replyStatus") Integer replyStatus);

	int countAssess(@Param("keyword") String keyword, @Param("replyStatus") Integer replyStatus);

	/**
	 * 获取该商品下此用户的所有评论
	 * 
	 * @Title: listOneAssessDetail
	 * @param goodsId
	 * @param userId
	 * @return List<Map<String,Object>>
	 * @author zj
	 * @date 2019-06-04 14:26
	 */
	List<Map<String, Object>> listOneAssessDetail(@Param("goodsId") Integer goodsId, @Param("userId") Integer userId);
	
	/**
	 * @date 2019年6月5日
	 * @author wangyun
	 * @time 上午11:24:09
	 * @Description 获得指定1条置顶评论
	 * 
	 * @param goodsId
	 * @return
	 */
	Assess getTopAssessByGoodsId(@Param("goodsId") Integer goodsId);
	
	/**
	 * @date 2019年6月5日
	 * @author wangyun
	 * @time 下午4:31:12
	 * @Description 查询订单是否已被用户评论过
	 * 
	 * @param goodsId
	 * @param userId
	 * @return
	 */
	List<Assess> getAssessByGoodsIdAndUserId(@Param("goodsId") Integer goodsId, @Param("userId") Integer userId, @Param("orderId") Integer orderId);
	
	/**
	 * @date 2019年6月6日
	 * @author wangyun
	 * @time 上午11:31:22
	 * @Description 查询用户订单详情中的评价
	 * 
	 * @param goodsId
	 * @param orderId
	 * @return
	 */
	public List<Assess> getAssessByGoodsIdAndOrderId(@Param("goodsId") Integer goodsId,@Param("orderId") Integer orderId);
	
	public List<Assess> getAssessByGoodsId(@Param("goodsId") Integer goodsId, @Param("limitStart")Integer limitStart,  @Param("limitEnd")Integer limitEnd);
	
	public List<Assess> selectById(@Param("id") Integer id);
	
	/**
	 * 根据商品主键获取相关评价 
	* @Title: listGoodsAssess 
	* @param goodsId
	* @return List<Map<String,Object>>
	* @author zj
	* @date 2019-06-06 10:52
	 */
	List<Map<String, Object>> listGoodsAssessPage(@Param("goodsId") Integer goodsId, @Param("limitStart") int limitStart,
			@Param("limitEnd") int limitEnd);

	/**
	 * 统计商品下评价数量
	* @Title: countGoodsAssess 
	* @param goodsId
	* @return Integer
	* @author zj
	* @date 2019-06-06 10:55
	 */
	Integer countGoodsAssess(@Param("goodsId") Integer goodsId);


	/**
	 * 根据商品主键获取相关后台的评价
	 * @param goodsId
	 * @param limitStart
	 * @param limitEnd
	 * @return
	 */
	List<Assess> listSelfGoodsAssessPage(@Param("goodsId") Integer goodsId, @Param("limitStart") int limitStart,
												  @Param("limitEnd") int limitEnd);

	/**
	 * 统计商品下评价数量
	 * @param goodsId
	 * @return
	 */
	Integer countSelfGoodsAssess(@Param("goodsId") Integer goodsId);
	
}